{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/cannon-es/dist/cannon-es.js","src/helper/index.ts","src/libs/paths/index.ts","node_modules/three/examples/jsm/libs/fflate.module.js","node_modules/three/examples/jsm/curves/NURBSUtils.js","node_modules/three/examples/jsm/curves/NURBSCurve.js","node_modules/three/examples/jsm/loaders/FBXLoader.js","src/loadManager.ts","src/physcisManager.ts","../lib/ConvexHull.js","../src/utils.ts","../src/index.ts","src/utils.ts","src/entityManager/entity.ts","src/entityManager/index.ts","src/keyboardManager.ts","src/animationManager/state.ts","src/animationManager/index.ts","src/playerManager.ts","src/modelManager/index.ts","src/modelManager/chair.ts","src/mouseManager.ts","src/cameraManager.ts","src/modelManager/map.ts","src/mapManager.ts","node_modules/regenerator-runtime/runtime.js","src/index.ts","C:/Users/Zenbook/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","type","listener","_listeners","undefined","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","constructor","width","height","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","isMatrix3","arrayNeedsUint32","TYPED_ARRAYS","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","_colorKeywords","_hslA","_hslB","hue2rgb","p","SRGBToLinear","LinearToSRGB","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","size","charAt","setColorName","toLowerCase","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","normalized","toJSON","NAMES","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","version","needsUpdate","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","isSource","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","source","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","dispose","transformUv","uv","isTexture","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","isWebGLRenderTarget","DataArrayTexture","wrapR","isDataArrayTexture","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","Quaternion","_x","_y","_z","_w","slerp","qa","qb","qm","slerpQuaternions","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","isQuaternion","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","u","isVector3","Box3","Infinity","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isMaterial","fromType","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isBufferAttribute","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphTargets","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","location","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","scaleW","scaleH","isOrthographicCamera","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","_createPlanes","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","denormalize","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","getVertexShaderID","getFragmentShaderID","Set","code","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","blurSamples","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","WebGLTextures","_gl","utils","multisampledRTTExt","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","convert","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","onSessionEnd","forEach","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","getBaseLayer","getBinding","getFrame","setSession","onInputSourcesChange","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","window","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CanvasTexture","isCanvasTexture","CircleGeometry","segments","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","concat","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","_sheen","_clearcoat","_transmission","materialLib","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","response","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","setTexturePath","ImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","isImageBitmapLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","setColors","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_floatView","_int32View","DataUtils","toHalfFloat","val","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","toVector3","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","gammaFactor","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","LensFlare","ParametricGeometry","TextGeometry","FontLoader","Font","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","revision","__THREE__","ObjectCollisionMatrix","bi","temp","setNumObjects","Mat3","setZero","setTrace","getTrace","Vec3","vmult","smult","mmult","A","solve","nr","nc","eqns","np","kp","multiplier","row","column","sep","reverse_eqns","M","vx","vy","vz","vadd","vsub","crossmat","invN","ninv","lengthSquared","distanceSquared","vmul","isZero","norm","Vec3_tangents_n","inorm","randVec","Vec3_tangents_randVec","almostEquals","almostZero","isAntiparallelTo","antip_neg","ZERO","UNIT_X","UNIT_Y","UNIT_Z","AABB","lowerBound","upperBound","skinSize","tmp$1","aabb","extend","overlaps","l1","l2","overlapsX","overlapsY","overlapsZ","volume","contains","getCorners","toLocalFrame","corners","transformIntoFrame_corners","corner","pointToLocal","toWorldFrame","pointToWorld","overlapsRay","dirFracX","dirFracY","dirFracZ","t4","t5","t6","ArrayCollisionMatrix","EventTarget","includes","hasAnyEventListener","toAxisAngle","targetAxis","setFromVectors","sfv_t1","sfv_t2","mult","quat","aw","bw","inorm2","normalizeFast","toEuler","heading","attitude","bank","sqx","sqy","sqz","toQuat","omega","cosom","sinom","scale0","scale1","integrate","angularFactor","half_dt","SHAPE_TYPES","SPHERE","PLANE","BOX","COMPOUND","CONVEXPOLYHEDRON","HEIGHTFIELD","PARTICLE","CYLINDER","TRIMESH","idCounter","boundingSphereRadius","collisionResponse","collisionFilterGroup","collisionFilterMask","updateBoundingSphereRadius","calculateLocalInertia","mass","calculateWorldAABB","pos","types","Transform","worldPoint","pointToLocalFrame","localPoint","pointToWorldFrame","vectorToWorldFrame","localVector","tmpQuat$1","vectorToLocalFrame","worldVector","ConvexPolyhedron","props","faceNormals","computeNormals","worldVertices","worldVerticesNeedsUpdate","worldFaceNormals","worldFaceNormalsNeedsUpdate","uniqueAxes","uniqueEdges","computeEdges","edge","numVertices","found","getFaceNormal","computeNormal","clipAgainstHull","posA","quatA","hullB","posB","quatB","separatingNormal","minDist","maxDist","WorldNormal","closestFaceB","dmax","worldVertsB1","worldb","clipFaceAgainstHull","findSeparatingAxis","faceListA","faceListB","faceANormalWS3","Worldnormal1","deltaC","worldEdge0","worldEdge1","Cross","dmin","hullA","numFacesA","fi","testSepAxis","numFacesB","e0","e1","dist","maxminA","maxminB","maxA","minA","maxB","minB","aabbmax","aabbmin","computeLocalAABB","getPlaneConstantOfFace","face_i","faceANormalWS","edge0","WorldEdge0","worldPlaneAnormal1","planeNormalWS1","worldA1","localPlaneNormal","planeNormalWS","worldVertsB2","pVtxIn","pVtxOut","closestFaceA","polyA","connectedFaces","numVerticesA","otherFace","localPlaneEq","planeEqWS","clipFaceAgainstPlane","inVertices","outVertices","planeConstant","n_dot_first","n_dot_last","numVerts","firstVertex","lastVertex","vi","newv","computeWorldVertices","verts","worldVerts","computeWorldFaceNormals","worldNormals","max2","norm2","minx","miny","minz","maxx","maxy","maxz","tempWorldVertex","getAveragePointLocal","transformAllPoints","pointIsInside","positiveResult","pointInside","vToP","r1","vToPointInside","r2","project_worldVertex","localAxis","project_localAxis","localOrigin","project_localOrigin","vs","Box","halfExtents","convexPolyhedronRepresentation","updateConvexPolyhedronRepresentation","V","calculateInertia","getSideNormals","sixTargetVectors","sides","ex","forEachWorldCorner","worldCornerTempPos","worldCornersTemp","wc","BODY_TYPES","DYNAMIC","STATIC","KINEMATIC","BODY_SLEEP_STATES","AWAKE","SLEEPY","SLEEPING","Body","world","vlambda","previousPosition","interpolatedPosition","initPosition","velocity","initVelocity","invMass","linearDamping","allowSleep","sleepState","sleepSpeedLimit","sleepTimeLimit","timeLastSleepy","wakeUpAfterNarrowphase","torque","initQuaternion","previousQuaternion","interpolatedQuaternion","initAngularVelocity","shapeOffsets","shapeOrientations","inertia","invInertia","invInertiaWorld","invMassSolve","invInertiaSolve","invInertiaWorldSolve","fixedRotation","angularDamping","linearFactor","aabbNeedsUpdate","boundingRadius","wlambda","isTrigger","Boolean","updateMassProperties","wakeUp","prevState","wakeupEvent","sleep","sleepTick","speedSquared","speedLimitSquared","sleepyEvent","sleepEvent","updateSolveMassProperties","orientation","updateBoundingRadius","removeShape","updateAABB","tmpVec","tmpQuat","bodyQuat","shapeAABB","updateAABB_shapeAABB","updateInertiaWorld","I","m1","uiw_m1","m2","uiw_m2","uiw_m3","applyForce","relativePoint","rotForce","Body_applyForce_rotForce","applyLocalForce","localForce","worldForce","Body_applyLocalForce_worldForce","relativePointWorld","Body_applyLocalForce_relativePointWorld","applyTorque","applyImpulse","impulse","velo","Body_applyImpulse_velo","rotVelo","Body_applyImpulse_rotVelo","applyLocalImpulse","localImpulse","worldImpulse","Body_applyLocalImpulse_worldImpulse","Body_applyLocalImpulse_relativePoint","Body_updateMassProperties_halfExtents","fixed","getVelocityAtWorldPoint","quatNormalize","quatNormalizeFast","angularVelo","iMdt","COLLIDE_EVENT_NAME","Broadphase","useBoundingBoxes","dirty","collisionPairs","needBroadphaseCollision","bodyA","bodyB","intersectionTest","pairs1","pairs2","doBoundingBoxBroadphase","doBoundingSphereBroadphase","Broadphase_collisionPairs_r","boundingRadiusSum2","makePairsUnique","Broadphase_makePairsUnique_temp","Broadphase_makePairsUnique_p1","Broadphase_makePairsUnique_p2","id1","id2","pairIndex","setWorld","boundingSphereCheck","sa","sb","aabbQuery","GridBroadphase","aabbMin","aabbMax","nx","ny","nz","nbins","bins","binLengths","bodies","xstep","ystep","zstep","zmax","ymin","zmin","xmult","ymult","zmult","binsizeX","binsizeY","binsizeZ","binRadius","Nbins","addBoxToBins","xoff0","yoff0","zoff0","xoff1","yoff1","zoff1","xoff","yoff","zoff","idx","si","worldNormalNeedsUpdate","computeWorldNormal","worldNormal","xreset","yreset","zreset","GridBroadphase_collisionPairs_d","xi","yi","zi","binLength","bin","NaiveBroadphase","RaycastResult","rayFromWorld","rayToWorld","hitNormalWorld","hitPointWorld","hasHit","hitFaceIndex","shouldStop","abort","_Shape$types$SPHERE","_Shape$types$PLANE","_Shape$types$BOX","_Shape$types$CYLINDER","_Shape$types$CONVEXPO","_Shape$types$HEIGHTFI","_Shape$types$TRIMESH","RAY_MODES","CLOSEST","ANY","ALL","_intersectSphere","_intersectPlane","_intersectBox","_intersectConvex","_intersectHeightfield","_intersectTrimesh","checkCollisionResponse","skipBackfaces","intersectWorld","updateDirection","getAABB","tmpAABB$1","tmpArray","broadphase","intersectBodies","intersectBody","intersectBody_xi","qi","intersectBody_qi","intersectShape","distanceFromIntersection","intersectMethod","reportedShape","planeToFrom","planeToTo","n_dot_dir","planePointToFrom","dir_scaled_with_t","reportIntersection","localRay","intersectHeightfield_localRay","intersectHeightfield_index","iMinX","iMinY","iMaxX","iMaxY","getIndexOfPosition","getAabbAtIndex","getConvexTrianglePillar","pillarOffset","worldPillarOffset","pillarConvex","intersectConvexOptions","intersectionPoint","Ray_intersectSphere_intersectionPoint","Ray_intersectSphere_normal","intersectConvex_minDistNormal","intersectConvex_normal","intersectConvex_vector","intersectConvex_minDistIntersect","faceList","fromToDistance","Nfaces","faceNormal","intersectTrimesh_normal","intersectTrimesh_triangles","treeTransform","intersectTrimesh_treeTransform","localDirection","intersectTrimesh_localDirection","localFrom","intersectTrimesh_localFrom","localTo","intersectTrimesh_localTo","worldIntersectPoint","intersectTrimesh_worldIntersectPoint","intersectTrimesh_worldNormal","fromToDistanceSquared","tree","rayQuery","trianglesIndex","getVertex","squaredDistance","SAPBroadphase","checkBounds","axisIndex","biPos","bjPos","ri","rj","boundA2","boundB1","insertionSortX","insertionSortY","insertionSortZ","axisList","_addBodyHandler","_removeBodyHandler","sortList","autoDetectAxis","sumX","sumX2","sumY","sumY2","sumZ","sumZ2","centerX","centerY","centerZ","varianceX","varianceY","varianceZ","Utils","defaults","Constraint","collideConnected","wakeUpBodies","equations","eqs","JacobianElement","spatial","rotational","multiplyElement","Equation","minForce","maxForce","eps","jacobianElementA","jacobianElementB","setSpookParams","stiffness","relaxation","timeStep","computeB","GW","computeGW","Gq","computeGq","GiMf","computeGiMf","GA","GB","xj","vj","wi","wj","computeGWlambda","ti","fj","tj","invMassi","invMassj","iMfi","iMfj","invIi_vmult_taui","invIj_vmult_tauj","computeGiMGt","invIi","invIj","addToWlambda","deltalambda","addToWlambda_temp","computeC","ContactEquation","restitution","ni","rixn","ContactEquation_computeB_temp1","rjxn","ContactEquation_computeB_temp2","penetrationVec","ContactEquation_computeB_temp3","ePlusOne","getImpactVelocityAlongNormal","ContactEquation_getImpactVelocityAlongNormal_vi","ContactEquation_getImpactVelocityAlongNormal_vj","ContactEquation_getImpactVelocityAlongNormal_xi","ContactEquation_getImpactVelocityAlongNormal_xj","relVel","ContactEquation_getImpactVelocityAlongNormal_relVel","PointToPointConstraint","pivotA","pivotB","equationX","equationY","equationZ","ConeEquation","axisA","axisB","nj","nixnj","tmpVec1$2","njxni","tmpVec2$2","RotationalEquation","maxAngle","tmpVec1$1","tmpVec2$1","ConeTwistConstraint","coneEquation","twistEquation","twistAngle","twist","DistanceConstraint","eq","distanceEquation","halfDist","LockConstraint","halfWay","xA","xB","yA","yB","zA","zB","rotationalEquation1","rotationalEquation2","r3","rotationalEquation3","motorEquation","LockConstraint_update_tmpVec1","LockConstraint_update_tmpVec2","RotationalMotorEquation","targetVelocity","HingeConstraint","rotational1","rotational2","motor","enableMotor","disableMotor","setMotorSpeed","speed","setMotorMaxForce","worldAxisA","HingeConstraint_update_tmpVec1","worldAxisB","HingeConstraint_update_tmpVec2","FrictionEquation","slipForce","rixt","FrictionEquation_computeB_temp1","rjxt","FrictionEquation_computeB_temp2","ContactMaterial","friction","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","Spring","restLength","damping","localAnchorA","localAnchorB","worldAnchorA","setWorldAnchorA","worldAnchorB","setWorldAnchorB","getWorldAnchorA","getWorldAnchorB","applyForce_r","r_unit","applyForce_r_unit","applyForce_u","applyForce_f","applyForce_tmp","applyForce_worldAnchorA","applyForce_worldAnchorB","applyForce_ri","applyForce_rj","ri_x_f","applyForce_ri_x_f","rj_x_f","applyForce_rj_x_f","rlen","WheelInfo","chassisConnectionPointLocal","chassisConnectionPointWorld","directionLocal","directionWorld","axleLocal","axleWorld","suspensionRestLength","suspensionMaxLength","suspensionStiffness","dampingCompression","dampingRelaxation","frictionSlip","forwardAcceleration","sideAcceleration","steering","deltaRotation","rollInfluence","maxSuspensionForce","isFrontWheel","clippedInvContactDotSuspension","suspensionRelativeVelocity","suspensionForce","slipInfo","skidInfo","suspensionLength","maxSuspensionTravel","useCustomSlidingRotationalSpeed","customSlidingRotationalSpeed","sliding","engineForce","brake","sideImpulse","forwardImpulse","raycastResult","worldTransform","isInContact","updateWheel","chassis","relpos","chassis_velocity_at_contactPoint","projVel","inv","RaycastVehicle","chassisBody","wheelInfos","indexRightAxis","indexForwardAxis","indexUpAxis","constraints","preStepCallback","currentVehicleSpeedKmHour","numWheelsOnGround","addWheel","setSteeringValue","wheelIndex","wheel","applyEngineForce","setBrake","addToWorld","addBody","that","updateVehicle","getVehicleAxisWorld","numWheels","updateWheelTransform","forwardWorld","castRay","updateSuspension","updateFriction","hitNormalWorldScaledWithProj","fwd","vel","proj","proj2","chassisMass","w_it","susp_length","current_length","length_diff","projected_rel_vel","susp_damping","removeFromWorld","removeBody","rayvector","castRay_rayvector","castRay_target","updateWheelTransformWorld","raylen","oldState","rayTest","groundObject","hitDistance","minSuspensionLength","maxSuspensionLength","tmpVec4","tmpVec5","tmpVec6","steeringOrn","rotatingOrn","getWheelTransformWorld","surfNormalWS_scaled_proj","updateFriction_surfNormalWS_scaled_proj","forwardWS","updateFriction_forwardWS","axle","updateFriction_axle","axlei","wheelTrans","directions","surfNormalWS","resolveSingleBilateral","sideFrictionStiffness2","sideFactor","fwdFactor","rollingFriction","defaultRollingFrictionImpulse","maxImpulse","calcRollingFriction","maximp","maximpSide","maximpSquared","impulseSquared","rel_pos","rel_pos2","sideImp","calcRollingFriction_vel1","calcRollingFriction_vel2","calcRollingFriction_vel","body0","body1","frictionPosWorld","frictionDirectionWorld","j1","contactPosWorld","vel1","vel2","vrel","denom0","computeImpulseDenominator","denom1","jacDiagABInv","computeImpulseDenominator_r0","computeImpulseDenominator_c0","computeImpulseDenominator_vec","computeImpulseDenominator_m","r0","resolveSingleBilateral_vel1","resolveSingleBilateral_vel2","resolveSingleBilateral_vel","pos1","body2","pos2","normalLenSqr","rel_vel","contactDamping","massTerm","RigidVehicle","wheelBodies","coordinateSystem","wheelAxes","wheelForces","wheelBody","worldPosition","hingeConstraint","motorTargetVelocity","setWheelForce","applyWheelForce","bodyTorque","addConstraint","removeConstraint","getWheelSpeed","worldAxis","SPHSystem","particles","smoothingRadius","speedOfSound","viscosity","pressures","densities","neighbors","particle","getNeighbors","R2","SPHSystem_getNeighbors_dist","SPHSystem_update_dist","numNeighbors","a_pressure","SPHSystem_update_a_pressure","a_visc","SPHSystem_update_a_visc","gradW","SPHSystem_update_gradW","r_vec","SPHSystem_update_r_vec","SPHSystem_update_u","Pij","nabla","neighbor","gradw","nablaw","rVec","resultVec","Cylinder","numSegments","bottomface","topface","thetaN","tempNormal","Heightfield","maxValue","minValue","updateMinValue","updateMaxValue","cacheEnabled","_cachedPillars","setHeightValueAtIndex","clearCachedConvexTrianglePillar","getRectMinMax","getTriangleAt","edgeClamp","getHeightAt_idx","lowerDist2","upperDist2","upper","getTriangle","getNormalAt","getNormalAt_a","getNormalAt_b","getNormalAt_c","getNormalAt_e0","getNormalAt_e1","_ref","getHeightAt","getHeightAt_a","getHeightAt_b","getHeightAt_c","barycentricWeights","getHeightAt_weights","getCacheConvexTrianglePillarKey","getUpperTriangle","getCachedConvexTrianglePillar","setCachedConvexTrianglePillar","convex","offsetResult","setHeightsFromImage","createElement","OctreeNode","insert","elementData","nodeData","maxDepth","subdivided","halfDiagonal","tmpAABB","removeEmptyNodes","Octree","Trimesh","updateEdges","updateNormals","updateTree","triangleAABB","i3","_getUnscaledVertex","getTrianglesInAABB","unscaledAABB","isx","isy","isz","setScale","wasUniform","isUniform","computeNormals_n","getEdgeVertex","edgeIndex","firstOrSecond","vertexStore","vertexIndex","getEdgeVector","vectorStore","getEdgeVector_va","getEdgeVector_vb","out","getWorldVertex","getTriangleVertices","cli_aabb","computeLocalAABB_worldVert","calculateWorldAABB_frame","calculateWorldAABB_aabb","createTorus","Solver","addEquation","removeEquation","removeAllEquations","GSSolver","iterations","tolerance","iter","maxIter","tolSquared","Neq","Nbodies","invC","deltalambdaTot","GWlambda","lambdaj","invCs","GSSolver_solve_invCs","Bs","GSSolver_solve_Bs","GSSolver_solve_lambda","invDt","SplitSolver","subsolver","nodePool","createNode","visited","SplitSolver_solve_nodes","SplitSolver_solve_eqs","dummyWorld","SplitSolver_solve_dummyWorld","getUnvisitedNode","bfs","visitFunc","Neqs","sortById","Nnodes","bds","Pool","release","Nargs","constructObject","resize","Vec3Pool","COLLISION_TYPES","sphereSphere","spherePlane","boxBox","sphereBox","planeBox","convexConvex","sphereConvex","planeConvex","boxConvex","sphereHeightfield","boxHeightfield","convexHeightfield","sphereParticle","planeParticle","boxParticle","convexParticle","cylinderCylinder","sphereCylinder","planeCylinder","boxCylinder","convexCylinder","heightfieldCylinder","particleCylinder","sphereTrimesh","planeTrimesh","Narrowphase","contactPointPool","frictionEquationPool","frictionResult","v3pool","currentContactMaterial","defaultContactMaterial","enableFrictionReduction","createContactEquation","sj","overrideShapeA","overrideShapeB","cm","matA","matB","createFrictionEquationsFromContact","contactEquation","outArray","shapeA","shapeB","mug","gravity","reducedMass","pool","createFrictionFromAverage","numContacts","f1","f2","averageNormal","averageContactPointA","averageContactPointB","invNumContacts","getContacts","oldcontacts","frictionPool","tmpQuat1","qj","tmpQuat2","tmpVec1","tmpVec2","bodyContactMaterial","getContactMaterial","justTest","shapeContactMaterial","resolverIndex","resolver","retval","shapeOverlapKeeper","bodyOverlapKeeper","rsi","rsj","contactEq","point_on_plane_to_sphere","plane_to_sphere_ortho","sphereBox_sides","box_to_sphere","R","side_ns","sphereBox_side_ns","side_ns1","sphereBox_side_ns1","side_ns2","sphereBox_side_ns2","side_h","side_penetrations","side_dot1","side_dot2","side_distance","nsides","ns","sphereBox_ns","ns1","sphereBox_ns1","ns2","sphereBox_ns2","h1","h2","dot1","dot2","sphere_to_corner","sphereBox_sphere_to_corner","edgeTangent","edgeCenter","orthogonal","Nsides","orthonorm","tdist","ndist","sepAxis","convexConvex_sepAxis","convexConvex_q","convex_to_sphere","worldCorner","sphereConvex_worldCorner","sphereConvex_sphereToCorner","nfaces","sphereConvex_worldNormal","sphereConvex_worldPoint","worldSpherePointClosestToPlane","sphereConvex_worldSpherePointClosestToPlane","sphereConvex_penetrationVec","penetration","worldPointToSphere","sphereConvex_sphereToWorldPoint","faceVerts","Nverts","worldVertex","pointInPolygon","penetrationVec2","penetrationSpherePoint","Nfaceverts","sphereConvex_edge","edgeUnit","sphereConvex_edgeUnit","v1_to_xi","xi_to_p","planeShape","convexShape","planePosition","convexPosition","planeQuat","convexQuat","planeBody","convexBody","planeConvex_v","planeConvex_normal","planeConvex_relpos","projected","planeConvex_projected","sphereShape","hfShape","spherePos","hfPos","sphereQuat","hfQuat","sphereBody","hfBody","sphereHeightfield_tmp2","localSpherePos","sphereHeightfield_tmp1","minMax","numContactsBefore","intersecting","convexPos","convexHeightfield_tmp2","convexHeightfield_faceList","localConvexPos","convexHeightfield_tmp1","particleSphere_normal","particlePlane_normal","particlePlane_relpos","particlePlane_projected","penetratedFaceIndex","penetratedFaceNormal","convexParticle_penetratedFaceNormal","worldPenetrationVec","convexParticle_worldPenetrationVec","minPenetration","local","convexParticle_local","cqj","convexParticle_vertexToParticle","trimeshShape","trimeshPos","trimeshQuat","trimeshBody","edgeVertexA","sphereTrimesh_edgeVertexA","edgeVertexB","sphereTrimesh_edgeVertexB","edgeVector","sphereTrimesh_edgeVector","edgeVectorUnit","sphereTrimesh_edgeVectorUnit","sphereTrimesh_localSpherePos","sphereTrimesh_tmp","localSphereAABB","sphereTrimesh_localSphereAABB","sphereTrimesh_v2","sphereTrimesh_relpos","sphereTrimesh_triangles","sphereRadius","sphereTrimesh_v","radiusSquared","positionAlongEdgeB","positionAlongEdgeA","sphereTrimesh_va","sphereTrimesh_vb","sphereTrimesh_vc","sphereTrimesh_normal","planePos","planeTrimesh_normal","planeTrimesh_relpos","planeTrimesh_projected","pointInPolygon_edge","pointInPolygon_edge_x_normal","pointInPolygon_vtp","edge_x_normal","vertex_to_p","OverlapKeeper","previous","getKey","tick","getDiff","additions","removals","al","bl","unpackAndPush","TupleDictionary","World","contacts","frictionEquations","quatNormalizeSkip","stepnumber","default_dt","nextId","hasActiveBodies","solver","narrowphase","collisionMatrix","collisionMatrixPrevious","contactmaterials","contactMaterialTable","defaultMaterial","doProfiling","profile","makeContactConstraints","accumulator","subsystems","addBodyEvent","removeBodyEvent","idToBodyMap","collisionMatrixTick","raycastClosest","raycastAll","tmpRay","raycastAny","getBodyById","getShapeById","addContactMaterial","cmat","removeContactMaterial","fixedStep","maxSubSteps","lastCallTime","timeSinceLastCalled","internalStep","substeps","World_step_p1","World_step_p2","profilingStart","World_step_frictionEquationPool","gx","gy","gz","Nsubsystems","Nconstraints","World_step_oldContacts","NoldContacts","NoldFrictionEquations","ncontacts","speedSquaredB","speedLimitSquaredB","speedSquaredA","speedLimitSquaredA","World_step_collideEvent","contact","emitContactEvents","ld","av","World_step_preStepEvent","clearForces","World_step_postStepEvent","hasBeginContact","hasEndContact","beginContactEvent","endContactEvent","hasBeginShapeContact","hasEndShapeContact","beginShapeContactEvent","endShapeContactEvent","globalThis","nowOffset","timing","navigationStart","ch2","durl","URL","createObjectURL","Blob","cwk","Worker","revokeObjectURL","encodeURI","wk","msg","transfer","onerror","onmessage","postMessage","u8","u16","u32","fleb","fdeb","clim","freb","eb","_a","fl","revfl","_b","fd","revfd","rev","hMap","cd","mb","le","co","rvb","sv","r_1","flt","fdt","flm","flrm","fdm","fdrm","bits16","shft","slc","inflt","dat","buf","st","noBuf","noSt","cbuf","nbuf","final","bt","lm","dm","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","lms","dms","lpos","sym","dsym","wbits","wbits16","hTree","et","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","clen","wfblk","wblk","syms","lf","li","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","ftlen","dtlen","ll","dl","llm","lcts","it","clct","deo","dflt","lvl","plvl","pre","post","lst","opt","msk_1","head","bs1_1","bs2_1","hsh","lc_1","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","nl","mmd","md","pti","lin","din","crct","crc","cr","adler","dopt","mem","mrg","wcln","fn","fnStr","td","ks","st_1","spInd","ch","cbfs","wrkr","fns","td_1","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","cbify","opts","terminate","consume","astrm","strm","ondata","ev","astrmify","b4","b8","filename","mtime","charCodeAt","flg","zs","lv","AsyncCmpStrm","Deflate","chunk","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","raw","AsyncGzip","gzip","gzipSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","Decompress","G","Z","_this_1","AsyncDecompress","decompress","decompressSync","fltn","TextEncoder","tds","dutf8","DecodeUTF8","EncodeUTF8","strToU8","str","latin1","ar_1","encode","ar","ai","strFromU8","ext","dbf","slzh","zh","fnl","es","z64e","sc","off","exfl","wzh","extra","exl","os","flag","compression","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","com","comment","header","chks","pAll","_i","chks_1","chk","ind","uf","nxt","dd","zip","tot","slft","term","tAll","cbf","oe","cdl","badd","loc","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","_","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","cmp_1","chks_2","sc_1","su_1","fn_1","d_1","file_1","ctr","chks_3","originalSize","state_1","register","unzip","_loop_3","c_1","no","infl","unzipSync","c_2","findSpan","U","calcBasisFunctions","span","saved","rv","calcBSplinePoint","C","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","rk","pk","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","calcKoverI","nom","calcRationalCurveDerivatives","Pders","Aders","wders","calcNURBSDerivatives","calcSurfacePoint","uspan","vspan","Nu","Nv","Sw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","hpoint","NURBSUtils","fbxTree","connections","sceneGraph","FBXLoader","FBXBuffer","isFbxFormatBinary","BinaryParser","FBXText","convertArrayBufferToString","isFbxFormatASCII","getFbxVersion","TextParser","textureLoader","FBXTreeParser","parseConnections","deformers","parseDeformers","geometryMap","GeometryParser","parseScene","connectionMap","rawConnections","Connections","rawConnection","fromID","toID","relationship","parents","parentRelationship","ID","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","RelativeFilename","Filename","arrayBufferContent","Content","base64Content","parseImage","content","fileName","textureMap","textureNodes","parseTexture","textureNode","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","Scaling","FileName","materialMap","materialNodes","parseMaterial","materialNode","ShadingModel","parseParameters","BumpFactor","Diffuse","DiffuseColor","DisplacementFactor","Emissive","EmissiveColor","EmissiveFactor","Opacity","ReflectionFactor","Shininess","Specular","SpecularColor","LayeredTexture","DeformerNodes","Deformer","deformerNode","relationships","attrType","parseSkeleton","geometryID","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","transformLink","TransformLink","Indexes","Weights","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","parentConnections","connection","bindSkeleton","createAmbientLight","transformData","parentMatrix","parentMatrixWorld","generateTransform","AnimationParser","buildSkeleton","createCamera","createLight","createMesh","createCurve","getTransformData","subBone","cameraAttribute","attr","NodeAttribute","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","innerWidth","innerHeight","AspectWidth","AspectHeight","FieldOfView","FocalLength","lightAttribute","LightType","Intensity","CastLightOnObject","FarAttenuationEnd","EnableFarAttenuation","InnerAngle","OuterAngle","CastShadows","FBX_Deformer","reduce","geo","inheritType","InheritType","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","Lcl_Rotation","postRotation","PostRotation","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","bindMatrices","parsePoseNodes","geoRelationships","geoConnParent","BindPoseNode","Pose","NbPoseNodes","poseNodes","PoseNode","poseNode","Matrix","GlobalSettings","ambientColor","AmbientColor","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","geoInfo","parseGeoNode","genBuffers","weightsIndices","vertexWeights","mappingType","prevMaterialIndex","currentIndex","lastGroup","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","UV","parseUVs","weightTable","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceColors","faceUVs","faceWeights","faceWeightIndices","polygonVertexIndex","endOfFace","weightIndices","wt","wIndex","Weight","weightIndex","comparedWeight","comparedWeightIndex","comparedWeightArray","genFace","parentGeo","parentGeoNode","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","Order","KnotVector","pointsValues","Form","animationClips","rawClips","parseClips","rawClip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","rawCurves","animationCurve","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","deformerID","morpherID","morphName","rawStacks","AnimationStack","rawTracks","generateTracks","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","interpolateRotations","quaternionValues","morphNum","lastValue","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","valuesSpan","absoluteSpan","numSubIntervals","nextValue","initialTime","timeSpan","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","FBXTree","matchComment","matchEmpty","matchBeginning","matchProperty","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","nodeAttrs","parseNodeAttr","currentNode","contentLine","propName","propValue","parentName","parseNodeSpecialProperty","connProps","rest","elem","append","parseNumberArray","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","BinaryReader","skip","getUint32","endOfContent","parseNode","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","fflate","reader2","littleEndian","dv","nullByte","CORRECT","cursor","versionRegExp","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lParentLX","lGlobalT","lLRM","lParentGRM","lParentTM","lParentGRSM","lParentGSM","lLSM","lGlobalRS","lParentLSM","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","ConvexHull","line3","closestPoint","this","newFaces","assigned","VertexList","unassigned","Face","outside","mark","HalfEdge","twin","VertexNode","compute","toBufferGeometry","fromGeometry","intersectRay","tNear","tFar","vN","vD","intersectsRay","addVertexToFace","insertBefore","removeVertexFromFace","removeAllVerticesFromFace","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","resolveUnassignedPoints","first","maxFace","computeExtremes","minVertices","maxVertices","computeInitialHull","extremes","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e2","insertAfter","meshes","getMeshes","normalizeGeometry","simplifyGeometry","vertexCount","positionArray","positionOffset","mergeBufferGeometries","getVertices","component","hashToIndex","newIndices","newPositions","decimalShift","log10","shiftMultiplier","PI_2","ShapeType","threeToCannon","createBoundingBoxShape","majorAxis","cylinderAxis","minorAxes","eulerX","eulerY","CQuaternion","createBoundingCylinderShape","createBoundingSphereShape","HULL","hullFaces","hullFace","createConvexPolyhedron","MESH","createTrimeshShape","createBoxShape","createCylinderShape","createPlaneShape","createSphereShape","localPosition","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","appendChild","getElementById","stackTrace","innerText","innerHTML","getParents","modules","dep","Function","deps","some"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '138';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nSource.prototype.isSource = true;\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tthis.texture.image = Object.assign( {}, source.texture.image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataArrayTexture.prototype.isDataArrayTexture = true;\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nWebGLArrayRenderTarget.prototype.isWebGLArrayRenderTarget = true;\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nData3DTexture.prototype.isData3DTexture = true;\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nWebGL3DRenderTarget.prototype.isWebGL3DRenderTarget = true;\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ]\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // standard, physical\n\t\trefractionRatio: { value: 0.98 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize - 32;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers( gl.getShaderSource( shader ) );\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight / 32 + 1 ) + 3;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage();\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor() {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.maxBones );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 30 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.useVertexTexture )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.depthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [ 36064 ];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t}\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t}\n\n\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst controller = controllers[ i ];\n\t\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. specular intensity map\n\t\t// 14. specular tint map\n\t\t// 15. transmission map\n\t\t// 16. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( parameters.context !== undefined ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: utils.convert( HalfFloatType ) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tif ( texture.isFramebufferTexture !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n * }\n */\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nFramebufferTexture.prototype.isFramebufferTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  ior: <float>,\n *  reflectivity: <float>,\n *\n *  sheen: <float>,\n *  sheenColor: <Color>,\n *  sheenColorMap: new THREE.Texture( <Image> ),\n *  sheenRoughness: <float>,\n *  sheenRoughnessMap: new THREE.Texture( <Image> ),\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> ),\n *\n *  thickness: <float>,\n *  thicknessMap: new THREE.Texture( <Image> ),\n *  attenuationDistance: <float>,\n *  attenuationColor: <Color>,\n *\n *  specularIntensity: <float>,\n *  specularIntensityMap: new THREE.Texture( <Image> ),\n *  specularColor: <Color>,\n *  specularColorMap: new THREE.Texture( <Image> )\n * }\n */\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n * }\n */\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nconst materialLib = {\n\tShadowMaterial,\n\tSpriteMaterial,\n\tRawShaderMaterial,\n\tShaderMaterial,\n\tPointsMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMeshPhongMaterial,\n\tMeshToonMaterial,\n\tMeshNormalMaterial,\n\tMeshLambertMaterial,\n\tMeshDepthMaterial,\n\tMeshDistanceMaterial,\n\tMeshBasicMaterial,\n\tMeshMatcapMaterial,\n\tLineDashedMaterial,\n\tLineBasicMaterial,\n\tMaterial\n};\n\nMaterial.fromType = function ( type ) {\n\n\treturn new materialLib[ type ]();\n\n};\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = Material.fromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nconst _floatView = new Float32Array( 1 );\nconst _int32View = new Int32Array( _floatView.buffer );\n\nclass DataUtils {\n\n\t// Converts float32 to float16 (stored as uint16 value).\n\n\tstatic toHalfFloat( val ) {\n\n\t\tif ( val > 65504 ) {\n\n\t\t\tconsole.warn( 'THREE.DataUtils.toHalfFloat(): value exceeds 65504.' );\n\n\t\t\tval = 65504; // maximum representable value in float16\n\n\t\t}\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst x = _int32View[ 0 ];\n\n\t\tlet bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tlet m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tconst e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nEuler.prototype.toVector3 = function () {\n\n\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n};\n\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n\n\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\treturn this;\n\n};\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t},\n\n\tvertexTangents: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\tgammaFactor: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\treturn 2;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tconst scope = this;\n\tconst audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\n//\n\nfunction ParametricGeometry() {\n\n\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\treturn new BufferGeometry();\n\n}\n\nfunction TextGeometry() {\n\n\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\treturn new BufferGeometry();\n\n}\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\tconst renderTarget = new WebGLRenderTarget( width, height, options );\n\trenderTarget.samples = 4;\n\treturn renderTarget;\n\n}\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\treturn new DataArrayTexture( data, width, height, depth );\n\n}\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\treturn new Data3DTexture( data, width, height, depth );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","/**\n * Records what objects are colliding with each other\n */\nclass ObjectCollisionMatrix {\n  /**\n   * The matrix storage.\n   */\n\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    this.matrix = {};\n  }\n  /**\n   * get\n   */\n\n\n  get(bi, bj) {\n    let {\n      id: i\n    } = bi;\n    let {\n      id: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return `${i}-${j}` in this.matrix;\n  }\n  /**\n   * set\n   */\n\n\n  set(bi, bj, value) {\n    let {\n      id: i\n    } = bi;\n    let {\n      id: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    if (value) {\n      this.matrix[`${i}-${j}`] = true;\n    } else {\n      delete this.matrix[`${i}-${j}`];\n    }\n  }\n  /**\n   * Empty the matrix\n   */\n\n\n  reset() {\n    this.matrix = {};\n  }\n  /**\n   * Set max number of objects\n   */\n\n\n  setNumObjects(n) {}\n\n}\n\n/**\n * A 3x3 matrix.\n * Authored by {@link http://github.com/schteppe/ schteppe}\n */\nclass Mat3 {\n  /**\n   * A vector of length 9, containing all matrix elements.\n   */\n\n  /**\n   * @param elements A vector of length 9, containing all matrix elements.\n   */\n  constructor(elements) {\n    if (elements === void 0) {\n      elements = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.elements = elements;\n  }\n  /**\n   * Sets the matrix to identity\n   * @todo Should perhaps be renamed to `setIdentity()` to be more clear.\n   * @todo Create another function that immediately creates an identity matrix eg. `eye()`\n   */\n\n\n  identity() {\n    const e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 1;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 1;\n  }\n  /**\n   * Set all elements to zero\n   */\n\n\n  setZero() {\n    const e = this.elements;\n    e[0] = 0;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 0;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 0;\n  }\n  /**\n   * Sets the matrix diagonal elements from a Vec3\n   */\n\n\n  setTrace(vector) {\n    const e = this.elements;\n    e[0] = vector.x;\n    e[4] = vector.y;\n    e[8] = vector.z;\n  }\n  /**\n   * Gets the matrix diagonal elements\n   */\n\n\n  getTrace(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const e = this.elements;\n    target.x = e[0];\n    target.y = e[4];\n    target.z = e[8];\n    return target;\n  }\n  /**\n   * Matrix-Vector multiplication\n   * @param v The vector to multiply with\n   * @param target Optional, target to save the result in.\n   */\n\n\n  vmult(v, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const e = this.elements;\n    const x = v.x;\n    const y = v.y;\n    const z = v.z;\n    target.x = e[0] * x + e[1] * y + e[2] * z;\n    target.y = e[3] * x + e[4] * y + e[5] * z;\n    target.z = e[6] * x + e[7] * y + e[8] * z;\n    return target;\n  }\n  /**\n   * Matrix-scalar multiplication\n   */\n\n\n  smult(s) {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i] *= s;\n    }\n  }\n  /**\n   * Matrix multiplication\n   * @param matrix Matrix to multiply with from left side.\n   */\n\n\n  mmult(matrix, target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const A = this.elements;\n    const B = matrix.elements;\n    const T = target.elements;\n    const a11 = A[0],\n          a12 = A[1],\n          a13 = A[2],\n          a21 = A[3],\n          a22 = A[4],\n          a23 = A[5],\n          a31 = A[6],\n          a32 = A[7],\n          a33 = A[8];\n    const b11 = B[0],\n          b12 = B[1],\n          b13 = B[2],\n          b21 = B[3],\n          b22 = B[4],\n          b23 = B[5],\n          b31 = B[6],\n          b32 = B[7],\n          b33 = B[8];\n    T[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    T[1] = a11 * b12 + a12 * b22 + a13 * b32;\n    T[2] = a11 * b13 + a12 * b23 + a13 * b33;\n    T[3] = a21 * b11 + a22 * b21 + a23 * b31;\n    T[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    T[5] = a21 * b13 + a22 * b23 + a23 * b33;\n    T[6] = a31 * b11 + a32 * b21 + a33 * b31;\n    T[7] = a31 * b12 + a32 * b22 + a33 * b32;\n    T[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return target;\n  }\n  /**\n   * Scale each column of the matrix\n   */\n\n\n  scale(vector, target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const e = this.elements;\n    const t = target.elements;\n\n    for (let i = 0; i !== 3; i++) {\n      t[3 * i + 0] = vector.x * e[3 * i + 0];\n      t[3 * i + 1] = vector.y * e[3 * i + 1];\n      t[3 * i + 2] = vector.z * e[3 * i + 2];\n    }\n\n    return target;\n  }\n  /**\n   * Solve Ax=b\n   * @param b The right hand side\n   * @param target Optional. Target vector to save in.\n   * @return The solution x\n   * @todo should reuse arrays\n   */\n\n\n  solve(b, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    // Construct equations\n    const nr = 3; // num rows\n\n    const nc = 4; // num cols\n\n    const eqns = [];\n    let i;\n    let j;\n\n    for (i = 0; i < nr * nc; i++) {\n      eqns.push(0);\n    }\n\n    for (i = 0; i < 3; i++) {\n      for (j = 0; j < 3; j++) {\n        eqns[i + nc * j] = this.elements[i + 3 * j];\n      }\n    }\n\n    eqns[3 + 4 * 0] = b.x;\n    eqns[3 + 4 * 1] = b.y;\n    eqns[3 + 4 * 2] = b.z; // Compute right upper triangular version of the matrix - Gauss elimination\n\n    let n = 3;\n    const k = n;\n    let np;\n    const kp = 4; // num rows\n\n    let p;\n\n    do {\n      i = k - n;\n\n      if (eqns[i + nc * i] === 0) {\n        // the pivot is null, swap lines\n        for (j = i + 1; j < k; j++) {\n          if (eqns[i + nc * j] !== 0) {\n            np = kp;\n\n            do {\n              // do ligne( i ) = ligne( i ) + ligne( k )\n              p = kp - np;\n              eqns[p + nc * i] += eqns[p + nc * j];\n            } while (--np);\n\n            break;\n          }\n        }\n      }\n\n      if (eqns[i + nc * i] !== 0) {\n        for (j = i + 1; j < k; j++) {\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n          np = kp;\n\n          do {\n            // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n            p = kp - np;\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n          } while (--np);\n        }\n      }\n    } while (--n); // Get the solution\n\n\n    target.z = eqns[2 * nc + 3] / eqns[2 * nc + 2];\n    target.y = (eqns[1 * nc + 3] - eqns[1 * nc + 2] * target.z) / eqns[1 * nc + 1];\n    target.x = (eqns[0 * nc + 3] - eqns[0 * nc + 2] * target.z - eqns[0 * nc + 1] * target.y) / eqns[0 * nc + 0];\n\n    if (isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x === Infinity || target.y === Infinity || target.z === Infinity) {\n      throw `Could not solve equation! Got x=[${target.toString()}], b=[${b.toString()}], A=[${this.toString()}]`;\n    }\n\n    return target;\n  }\n  /**\n   * Get an element in the matrix by index. Index starts at 0, not 1!!!\n   * @param value If provided, the matrix element will be set to this value.\n   */\n\n\n  e(row, column, value) {\n    if (value === undefined) {\n      return this.elements[column + 3 * row];\n    } else {\n      // Set value\n      this.elements[column + 3 * row] = value;\n    }\n  }\n  /**\n   * Copy another matrix into this matrix object.\n   */\n\n\n  copy(matrix) {\n    for (let i = 0; i < matrix.elements.length; i++) {\n      this.elements[i] = matrix.elements[i];\n    }\n\n    return this;\n  }\n  /**\n   * Returns a string representation of the matrix.\n   */\n\n\n  toString() {\n    let r = '';\n    const sep = ',';\n\n    for (let i = 0; i < 9; i++) {\n      r += this.elements[i] + sep;\n    }\n\n    return r;\n  }\n  /**\n   * reverse the matrix\n   * @param target Target matrix to save in.\n   * @return The solution x\n   */\n\n\n  reverse(target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    // Construct equations\n    const nr = 3; // num rows\n\n    const nc = 6; // num cols\n\n    const eqns = reverse_eqns;\n    let i;\n    let j;\n\n    for (i = 0; i < 3; i++) {\n      for (j = 0; j < 3; j++) {\n        eqns[i + nc * j] = this.elements[i + 3 * j];\n      }\n    }\n\n    eqns[3 + 6 * 0] = 1;\n    eqns[3 + 6 * 1] = 0;\n    eqns[3 + 6 * 2] = 0;\n    eqns[4 + 6 * 0] = 0;\n    eqns[4 + 6 * 1] = 1;\n    eqns[4 + 6 * 2] = 0;\n    eqns[5 + 6 * 0] = 0;\n    eqns[5 + 6 * 1] = 0;\n    eqns[5 + 6 * 2] = 1; // Compute right upper triangular version of the matrix - Gauss elimination\n\n    let n = 3;\n    const k = n;\n    let np;\n    const kp = nc; // num rows\n\n    let p;\n\n    do {\n      i = k - n;\n\n      if (eqns[i + nc * i] === 0) {\n        // the pivot is null, swap lines\n        for (j = i + 1; j < k; j++) {\n          if (eqns[i + nc * j] !== 0) {\n            np = kp;\n\n            do {\n              // do line( i ) = line( i ) + line( k )\n              p = kp - np;\n              eqns[p + nc * i] += eqns[p + nc * j];\n            } while (--np);\n\n            break;\n          }\n        }\n      }\n\n      if (eqns[i + nc * i] !== 0) {\n        for (j = i + 1; j < k; j++) {\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n          np = kp;\n\n          do {\n            // do line( k ) = line( k ) - multiplier * line( i )\n            p = kp - np;\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n          } while (--np);\n        }\n      }\n    } while (--n); // eliminate the upper left triangle of the matrix\n\n\n    i = 2;\n\n    do {\n      j = i - 1;\n\n      do {\n        const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n        np = nc;\n\n        do {\n          p = nc - np;\n          eqns[p + nc * j] = eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n        } while (--np);\n      } while (j--);\n    } while (--i); // operations on the diagonal\n\n\n    i = 2;\n\n    do {\n      const multiplier = 1 / eqns[i + nc * i];\n      np = nc;\n\n      do {\n        p = nc - np;\n        eqns[p + nc * i] = eqns[p + nc * i] * multiplier;\n      } while (--np);\n    } while (i--);\n\n    i = 2;\n\n    do {\n      j = 2;\n\n      do {\n        p = eqns[nr + j + nc * i];\n\n        if (isNaN(p) || p === Infinity) {\n          throw `Could not reverse! A=[${this.toString()}]`;\n        }\n\n        target.e(i, j, p);\n      } while (j--);\n    } while (i--);\n\n    return target;\n  }\n  /**\n   * Set the matrix from a quaterion\n   */\n\n\n  setRotationFromQuaternion(q) {\n    const x = q.x;\n    const y = q.y;\n    const z = q.z;\n    const w = q.w;\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const e = this.elements;\n    e[3 * 0 + 0] = 1 - (yy + zz);\n    e[3 * 0 + 1] = xy - wz;\n    e[3 * 0 + 2] = xz + wy;\n    e[3 * 1 + 0] = xy + wz;\n    e[3 * 1 + 1] = 1 - (xx + zz);\n    e[3 * 1 + 2] = yz - wx;\n    e[3 * 2 + 0] = xz - wy;\n    e[3 * 2 + 1] = yz + wx;\n    e[3 * 2 + 2] = 1 - (xx + yy);\n    return this;\n  }\n  /**\n   * Transpose the matrix\n   * @param target Optional. Where to store the result.\n   * @return The target Mat3, or a new Mat3 if target was omitted.\n   */\n\n\n  transpose(target) {\n    if (target === void 0) {\n      target = new Mat3();\n    }\n\n    const M = this.elements;\n    const T = target.elements;\n    let tmp; //Set diagonals\n\n    T[0] = M[0];\n    T[4] = M[4];\n    T[8] = M[8];\n    tmp = M[1];\n    T[1] = M[3];\n    T[3] = tmp;\n    tmp = M[2];\n    T[2] = M[6];\n    T[6] = tmp;\n    tmp = M[5];\n    T[5] = M[7];\n    T[7] = tmp;\n    return target;\n  }\n\n}\nconst reverse_eqns = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n/**\n * 3-dimensional vector\n * @example\n *     const v = new Vec3(1, 2, 3)\n *     console.log('x=' + v.x) // x=1\n */\n\nclass Vec3 {\n  constructor(x, y, z) {\n    if (x === void 0) {\n      x = 0.0;\n    }\n\n    if (y === void 0) {\n      y = 0.0;\n    }\n\n    if (z === void 0) {\n      z = 0.0;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  /**\n   * Vector cross product\n   * @param target Optional target to save in.\n   */\n\n\n  cross(vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const vx = vector.x;\n    const vy = vector.y;\n    const vz = vector.z;\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = y * vz - z * vy;\n    target.y = z * vx - x * vz;\n    target.z = x * vy - y * vx;\n    return target;\n  }\n  /**\n   * Set the vectors' 3 elements\n   */\n\n\n  set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  /**\n   * Set all components of the vector to zero.\n   */\n\n\n  setZero() {\n    this.x = this.y = this.z = 0;\n  }\n  /**\n   * Vector addition\n   */\n\n\n  vadd(vector, target) {\n    if (target) {\n      target.x = vector.x + this.x;\n      target.y = vector.y + this.y;\n      target.z = vector.z + this.z;\n    } else {\n      return new Vec3(this.x + vector.x, this.y + vector.y, this.z + vector.z);\n    }\n  }\n  /**\n   * Vector subtraction\n   * @param target Optional target to save in.\n   */\n\n\n  vsub(vector, target) {\n    if (target) {\n      target.x = this.x - vector.x;\n      target.y = this.y - vector.y;\n      target.z = this.z - vector.z;\n    } else {\n      return new Vec3(this.x - vector.x, this.y - vector.y, this.z - vector.z);\n    }\n  }\n  /**\n   * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n   *\n   * See {@link https://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf Umeå University Lecture}\n   */\n\n\n  crossmat() {\n    return new Mat3([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);\n  }\n  /**\n   * Normalize the vector. Note that this changes the values in the vector.\n    * @return Returns the norm of the vector\n   */\n\n\n  normalize() {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const n = Math.sqrt(x * x + y * y + z * z);\n\n    if (n > 0.0) {\n      const invN = 1 / n;\n      this.x *= invN;\n      this.y *= invN;\n      this.z *= invN;\n    } else {\n      // Make something up\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return n;\n  }\n  /**\n   * Get the version of this vector that is of length 1.\n   * @param target Optional target to save in\n   * @return Returns the unit vector\n   */\n\n\n  unit(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    let ninv = Math.sqrt(x * x + y * y + z * z);\n\n    if (ninv > 0.0) {\n      ninv = 1.0 / ninv;\n      target.x = x * ninv;\n      target.y = y * ninv;\n      target.z = z * ninv;\n    } else {\n      target.x = 1;\n      target.y = 0;\n      target.z = 0;\n    }\n\n    return target;\n  }\n  /**\n   * Get the length of the vector\n   */\n\n\n  length() {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Get the squared length of the vector.\n   */\n\n\n  lengthSquared() {\n    return this.dot(this);\n  }\n  /**\n   * Get distance from this point to another point\n   */\n\n\n  distanceTo(p) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const px = p.x;\n    const py = p.y;\n    const pz = p.z;\n    return Math.sqrt((px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z));\n  }\n  /**\n   * Get squared distance from this point to another point\n   */\n\n\n  distanceSquared(p) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const px = p.x;\n    const py = p.y;\n    const pz = p.z;\n    return (px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z);\n  }\n  /**\n   * Multiply all the components of the vector with a scalar.\n   * @param target The vector to save the result in.\n   */\n\n\n  scale(scalar, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = scalar * x;\n    target.y = scalar * y;\n    target.z = scalar * z;\n    return target;\n  }\n  /**\n   * Multiply the vector with an other vector, component-wise.\n   * @param target The vector to save the result in.\n   */\n\n\n  vmul(vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = vector.x * this.x;\n    target.y = vector.y * this.y;\n    target.z = vector.z * this.z;\n    return target;\n  }\n  /**\n   * Scale a vector and add it to this vector. Save the result in \"target\". (target = this + vector * scalar)\n   * @param target The vector to save the result in.\n   */\n\n\n  addScaledVector(scalar, vector, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = this.x + scalar * vector.x;\n    target.y = this.y + scalar * vector.y;\n    target.z = this.z + scalar * vector.z;\n    return target;\n  }\n  /**\n   * Calculate dot product\n   * @param vector\n   */\n\n\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n  }\n\n  isZero() {\n    return this.x === 0 && this.y === 0 && this.z === 0;\n  }\n  /**\n   * Make the vector point in the opposite direction.\n   * @param target Optional target to save in\n   */\n\n\n  negate(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    return target;\n  }\n  /**\n   * Compute two artificial tangents to the vector\n   * @param t1 Vector object to save the first tangent in\n   * @param t2 Vector object to save the second tangent in\n   */\n\n\n  tangents(t1, t2) {\n    const norm = this.length();\n\n    if (norm > 0.0) {\n      const n = Vec3_tangents_n;\n      const inorm = 1 / norm;\n      n.set(this.x * inorm, this.y * inorm, this.z * inorm);\n      const randVec = Vec3_tangents_randVec;\n\n      if (Math.abs(n.x) < 0.9) {\n        randVec.set(1, 0, 0);\n        n.cross(randVec, t1);\n      } else {\n        randVec.set(0, 1, 0);\n        n.cross(randVec, t1);\n      }\n\n      n.cross(t1, t2);\n    } else {\n      // The normal length is zero, make something up\n      t1.set(1, 0, 0);\n      t2.set(0, 1, 0);\n    }\n  }\n  /**\n   * Converts to a more readable format\n   */\n\n\n  toString() {\n    return `${this.x},${this.y},${this.z}`;\n  }\n  /**\n   * Converts to an array\n   */\n\n\n  toArray() {\n    return [this.x, this.y, this.z];\n  }\n  /**\n   * Copies value of source to this vector.\n   */\n\n\n  copy(vector) {\n    this.x = vector.x;\n    this.y = vector.y;\n    this.z = vector.z;\n    return this;\n  }\n  /**\n   * Do a linear interpolation between two vectors\n   * @param t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n   */\n\n\n  lerp(vector, t, target) {\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    target.x = x + (vector.x - x) * t;\n    target.y = y + (vector.y - y) * t;\n    target.z = z + (vector.z - z) * t;\n  }\n  /**\n   * Check if a vector equals is almost equal to another one.\n   */\n\n\n  almostEquals(vector, precision) {\n    if (precision === void 0) {\n      precision = 1e-6;\n    }\n\n    if (Math.abs(this.x - vector.x) > precision || Math.abs(this.y - vector.y) > precision || Math.abs(this.z - vector.z) > precision) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if a vector is almost zero\n   */\n\n\n  almostZero(precision) {\n    if (precision === void 0) {\n      precision = 1e-6;\n    }\n\n    if (Math.abs(this.x) > precision || Math.abs(this.y) > precision || Math.abs(this.z) > precision) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if the vector is anti-parallel to another vector.\n   * @param precision Set to zero for exact comparisons\n   */\n\n\n  isAntiparallelTo(vector, precision) {\n    this.negate(antip_neg);\n    return antip_neg.almostEquals(vector, precision);\n  }\n  /**\n   * Clone the vector\n   */\n\n\n  clone() {\n    return new Vec3(this.x, this.y, this.z);\n  }\n\n}\nVec3.ZERO = new Vec3(0, 0, 0);\nVec3.UNIT_X = new Vec3(1, 0, 0);\nVec3.UNIT_Y = new Vec3(0, 1, 0);\nVec3.UNIT_Z = new Vec3(0, 0, 1);\nconst Vec3_tangents_n = new Vec3();\nconst Vec3_tangents_randVec = new Vec3();\nconst antip_neg = new Vec3();\n\n/**\n * Axis aligned bounding box class.\n */\nclass AABB {\n  /**\n   * The lower bound of the bounding box\n   */\n\n  /**\n   * The upper bound of the bounding box\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.lowerBound = new Vec3();\n    this.upperBound = new Vec3();\n\n    if (options.lowerBound) {\n      this.lowerBound.copy(options.lowerBound);\n    }\n\n    if (options.upperBound) {\n      this.upperBound.copy(options.upperBound);\n    }\n  }\n  /**\n   * Set the AABB bounds from a set of points.\n   * @param points An array of Vec3's.\n   * @return The self object\n   */\n\n\n  setFromPoints(points, position, quaternion, skinSize) {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    const q = quaternion; // Set to the first point\n\n    l.copy(points[0]);\n\n    if (q) {\n      q.vmult(l, l);\n    }\n\n    u.copy(l);\n\n    for (let i = 1; i < points.length; i++) {\n      let p = points[i];\n\n      if (q) {\n        q.vmult(p, tmp$1);\n        p = tmp$1;\n      }\n\n      if (p.x > u.x) {\n        u.x = p.x;\n      }\n\n      if (p.x < l.x) {\n        l.x = p.x;\n      }\n\n      if (p.y > u.y) {\n        u.y = p.y;\n      }\n\n      if (p.y < l.y) {\n        l.y = p.y;\n      }\n\n      if (p.z > u.z) {\n        u.z = p.z;\n      }\n\n      if (p.z < l.z) {\n        l.z = p.z;\n      }\n    } // Add offset\n\n\n    if (position) {\n      position.vadd(l, l);\n      position.vadd(u, u);\n    }\n\n    if (skinSize) {\n      l.x -= skinSize;\n      l.y -= skinSize;\n      l.z -= skinSize;\n      u.x += skinSize;\n      u.y += skinSize;\n      u.z += skinSize;\n    }\n\n    return this;\n  }\n  /**\n   * Copy bounds from an AABB to this AABB\n   * @param aabb Source to copy from\n   * @return The this object, for chainability\n   */\n\n\n  copy(aabb) {\n    this.lowerBound.copy(aabb.lowerBound);\n    this.upperBound.copy(aabb.upperBound);\n    return this;\n  }\n  /**\n   * Clone an AABB\n   */\n\n\n  clone() {\n    return new AABB().copy(this);\n  }\n  /**\n   * Extend this AABB so that it covers the given AABB too.\n   */\n\n\n  extend(aabb) {\n    this.lowerBound.x = Math.min(this.lowerBound.x, aabb.lowerBound.x);\n    this.upperBound.x = Math.max(this.upperBound.x, aabb.upperBound.x);\n    this.lowerBound.y = Math.min(this.lowerBound.y, aabb.lowerBound.y);\n    this.upperBound.y = Math.max(this.upperBound.y, aabb.upperBound.y);\n    this.lowerBound.z = Math.min(this.lowerBound.z, aabb.lowerBound.z);\n    this.upperBound.z = Math.max(this.upperBound.z, aabb.upperBound.z);\n  }\n  /**\n   * Returns true if the given AABB overlaps this AABB.\n   */\n\n\n  overlaps(aabb) {\n    const l1 = this.lowerBound;\n    const u1 = this.upperBound;\n    const l2 = aabb.lowerBound;\n    const u2 = aabb.upperBound; //      l2        u2\n    //      |---------|\n    // |--------|\n    // l1       u1\n\n    const overlapsX = l2.x <= u1.x && u1.x <= u2.x || l1.x <= u2.x && u2.x <= u1.x;\n    const overlapsY = l2.y <= u1.y && u1.y <= u2.y || l1.y <= u2.y && u2.y <= u1.y;\n    const overlapsZ = l2.z <= u1.z && u1.z <= u2.z || l1.z <= u2.z && u2.z <= u1.z;\n    return overlapsX && overlapsY && overlapsZ;\n  } // Mostly for debugging\n\n\n  volume() {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    return (u.x - l.x) * (u.y - l.y) * (u.z - l.z);\n  }\n  /**\n   * Returns true if the given AABB is fully contained in this AABB.\n   */\n\n\n  contains(aabb) {\n    const l1 = this.lowerBound;\n    const u1 = this.upperBound;\n    const l2 = aabb.lowerBound;\n    const u2 = aabb.upperBound; //      l2        u2\n    //      |---------|\n    // |---------------|\n    // l1              u1\n\n    return l1.x <= l2.x && u1.x >= u2.x && l1.y <= l2.y && u1.y >= u2.y && l1.z <= l2.z && u1.z >= u2.z;\n  }\n\n  getCorners(a, b, c, d, e, f, g, h) {\n    const l = this.lowerBound;\n    const u = this.upperBound;\n    a.copy(l);\n    b.set(u.x, l.y, l.z);\n    c.set(u.x, u.y, l.z);\n    d.set(l.x, u.y, u.z);\n    e.set(u.x, l.y, u.z);\n    f.set(l.x, u.y, l.z);\n    g.set(l.x, l.y, u.z);\n    h.copy(u);\n  }\n  /**\n   * Get the representation of an AABB in another frame.\n   * @return The \"target\" AABB object.\n   */\n\n\n  toLocalFrame(frame, target) {\n    const corners = transformIntoFrame_corners;\n    const a = corners[0];\n    const b = corners[1];\n    const c = corners[2];\n    const d = corners[3];\n    const e = corners[4];\n    const f = corners[5];\n    const g = corners[6];\n    const h = corners[7]; // Get corners in current frame\n\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n    for (let i = 0; i !== 8; i++) {\n      const corner = corners[i];\n      frame.pointToLocal(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n  }\n  /**\n   * Get the representation of an AABB in the global frame.\n   * @return The \"target\" AABB object.\n   */\n\n\n  toWorldFrame(frame, target) {\n    const corners = transformIntoFrame_corners;\n    const a = corners[0];\n    const b = corners[1];\n    const c = corners[2];\n    const d = corners[3];\n    const e = corners[4];\n    const f = corners[5];\n    const g = corners[6];\n    const h = corners[7]; // Get corners in current frame\n\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n    for (let i = 0; i !== 8; i++) {\n      const corner = corners[i];\n      frame.pointToWorld(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n  }\n  /**\n   * Check if the AABB is hit by a ray.\n   */\n\n\n  overlapsRay(ray) {\n    const {\n      direction,\n      from\n    } = ray; // const t = 0\n    // ray.direction is unit direction vector of ray\n\n    const dirFracX = 1 / direction.x;\n    const dirFracY = 1 / direction.y;\n    const dirFracZ = 1 / direction.z; // this.lowerBound is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\n\n    const t1 = (this.lowerBound.x - from.x) * dirFracX;\n    const t2 = (this.upperBound.x - from.x) * dirFracX;\n    const t3 = (this.lowerBound.y - from.y) * dirFracY;\n    const t4 = (this.upperBound.y - from.y) * dirFracY;\n    const t5 = (this.lowerBound.z - from.z) * dirFracZ;\n    const t6 = (this.upperBound.z - from.z) * dirFracZ; // const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)));\n    // const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)));\n\n    const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n    const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6)); // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\n\n    if (tmax < 0) {\n      //t = tmax;\n      return false;\n    } // if tmin > tmax, ray doesn't intersect AABB\n\n\n    if (tmin > tmax) {\n      //t = tmax;\n      return false;\n    }\n\n    return true;\n  }\n\n}\nconst tmp$1 = new Vec3();\nconst transformIntoFrame_corners = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n/**\n * Collision \"matrix\".\n * It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n */\nclass ArrayCollisionMatrix {\n  /**\n   * The matrix storage.\n   */\n  constructor() {\n    this.matrix = [];\n  }\n  /**\n   * Get an element\n   */\n\n\n  get(bi, bj) {\n    let {\n      index: i\n    } = bi;\n    let {\n      index: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return this.matrix[(i * (i + 1) >> 1) + j - 1];\n  }\n  /**\n   * Set an element\n   */\n\n\n  set(bi, bj, value) {\n    let {\n      index: i\n    } = bi;\n    let {\n      index: j\n    } = bj;\n\n    if (j > i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    this.matrix[(i * (i + 1) >> 1) + j - 1] = value ? 1 : 0;\n  }\n  /**\n   * Sets all elements to zero\n   */\n\n\n  reset() {\n    for (let i = 0, l = this.matrix.length; i !== l; i++) {\n      this.matrix[i] = 0;\n    }\n  }\n  /**\n   * Sets the max number of objects\n   */\n\n\n  setNumObjects(n) {\n    this.matrix.length = n * (n - 1) >> 1;\n  }\n\n}\n\n/**\n * Base class for objects that dispatches events.\n */\nclass EventTarget {\n  /**\n   * Add an event listener\n   * @return The self object, for chainability.\n   */\n  addEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      this._listeners = {};\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (!listeners[type].includes(listener)) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  }\n  /**\n   * Check if an event listener is added\n   */\n\n\n  hasEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].includes(listener)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Check if any event listener of the given type is added\n   */\n\n\n  hasAnyEventListener(type) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    const listeners = this._listeners;\n    return listeners[type] !== undefined;\n  }\n  /**\n   * Remove an event listener\n   * @return The self object, for chainability.\n   */\n\n\n  removeEventListener(type, listener) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      return this;\n    }\n\n    const index = listeners[type].indexOf(listener);\n\n    if (index !== -1) {\n      listeners[type].splice(index, 1);\n    }\n\n    return this;\n  }\n  /**\n   * Emit an event.\n   * @return The self object, for chainability.\n   */\n\n\n  dispatchEvent(event) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      for (let i = 0, l = listenerArray.length; i < l; i++) {\n        listenerArray[i].call(this, event);\n      }\n    }\n\n    return this;\n  }\n\n}\n\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @param x Multiplier of the imaginary basis vector i.\n * @param y Multiplier of the imaginary basis vector j.\n * @param z Multiplier of the imaginary basis vector k.\n * @param w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\n\nclass Quaternion {\n  constructor(x, y, z, w) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (w === void 0) {\n      w = 1;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n  /**\n   * Set the value of the quaternion.\n   */\n\n\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  /**\n   * Convert to a readable format\n   * @return \"x,y,z,w\"\n   */\n\n\n  toString() {\n    return `${this.x},${this.y},${this.z},${this.w}`;\n  }\n  /**\n   * Convert to an Array\n   * @return [x, y, z, w]\n   */\n\n\n  toArray() {\n    return [this.x, this.y, this.z, this.w];\n  }\n  /**\n   * Set the quaternion components given an axis and an angle in radians.\n   */\n\n\n  setFromAxisAngle(vector, angle) {\n    const s = Math.sin(angle * 0.5);\n    this.x = vector.x * s;\n    this.y = vector.y * s;\n    this.z = vector.z * s;\n    this.w = Math.cos(angle * 0.5);\n    return this;\n  }\n  /**\n   * Converts the quaternion to [ axis, angle ] representation.\n   * @param targetAxis A vector object to reuse for storing the axis.\n   * @return An array, first element is the axis and the second is the angle in radians.\n   */\n\n\n  toAxisAngle(targetAxis) {\n    if (targetAxis === void 0) {\n      targetAxis = new Vec3();\n    }\n\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n\n    const angle = 2 * Math.acos(this.w);\n    const s = Math.sqrt(1 - this.w * this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n\n    if (s < 0.001) {\n      // test to avoid divide by zero, s is always positive due to sqrt\n      // if s close to zero then direction of axis not important\n      targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n\n      targetAxis.y = this.y;\n      targetAxis.z = this.z;\n    } else {\n      targetAxis.x = this.x / s; // normalise axis\n\n      targetAxis.y = this.y / s;\n      targetAxis.z = this.z / s;\n    }\n\n    return [targetAxis, angle];\n  }\n  /**\n   * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n   */\n\n\n  setFromVectors(u, v) {\n    if (u.isAntiparallelTo(v)) {\n      const t1 = sfv_t1;\n      const t2 = sfv_t2;\n      u.tangents(t1, t2);\n      this.setFromAxisAngle(t1, Math.PI);\n    } else {\n      const a = u.cross(v);\n      this.x = a.x;\n      this.y = a.y;\n      this.z = a.z;\n      this.w = Math.sqrt(u.length() ** 2 * v.length() ** 2) + u.dot(v);\n      this.normalize();\n    }\n\n    return this;\n  }\n  /**\n   * Multiply the quaternion with an other quaternion.\n   */\n\n\n  mult(quat, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = this.x;\n    const ay = this.y;\n    const az = this.z;\n    const aw = this.w;\n    const bx = quat.x;\n    const by = quat.y;\n    const bz = quat.z;\n    const bw = quat.w;\n    target.x = ax * bw + aw * bx + ay * bz - az * by;\n    target.y = ay * bw + aw * by + az * bx - ax * bz;\n    target.z = az * bw + aw * bz + ax * by - ay * bx;\n    target.w = aw * bw - ax * bx - ay * by - az * bz;\n    return target;\n  }\n  /**\n   * Get the inverse quaternion rotation.\n   */\n\n\n  inverse(target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const w = this.w;\n    this.conjugate(target);\n    const inorm2 = 1 / (x * x + y * y + z * z + w * w);\n    target.x *= inorm2;\n    target.y *= inorm2;\n    target.z *= inorm2;\n    target.w *= inorm2;\n    return target;\n  }\n  /**\n   * Get the quaternion conjugate\n   */\n\n\n  conjugate(target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    target.w = this.w;\n    return target;\n  }\n  /**\n   * Normalize the quaternion. Note that this changes the values of the quaternion.\n   */\n\n\n  normalize() {\n    let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    } else {\n      l = 1 / l;\n      this.x *= l;\n      this.y *= l;\n      this.z *= l;\n      this.w *= l;\n    }\n\n    return this;\n  }\n  /**\n   * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n   * @author unphased, https://github.com/unphased\n   */\n\n\n  normalizeFast() {\n    const f = (3.0 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2.0;\n\n    if (f === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    } else {\n      this.x *= f;\n      this.y *= f;\n      this.z *= f;\n      this.w *= f;\n    }\n\n    return this;\n  }\n  /**\n   * Multiply the quaternion by a vector\n   */\n\n\n  vmult(v, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const x = v.x;\n    const y = v.y;\n    const z = v.z;\n    const qx = this.x;\n    const qy = this.y;\n    const qz = this.z;\n    const qw = this.w; // q*v\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return target;\n  }\n  /**\n   * Copies value of source to this quaternion.\n   * @return this\n   */\n\n\n  copy(quat) {\n    this.x = quat.x;\n    this.y = quat.y;\n    this.z = quat.z;\n    this.w = quat.w;\n    return this;\n  }\n  /**\n   * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: https://www.euclideanspace.com/maths/standards/index.htm\n   * @param order Three-character string, defaults to \"YZX\"\n   */\n\n\n  toEuler(target, order) {\n    if (order === void 0) {\n      order = 'YZX';\n    }\n\n    let heading;\n    let attitude;\n    let bank;\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n    const w = this.w;\n\n    switch (order) {\n      case 'YZX':\n        const test = x * y + z * w;\n\n        if (test > 0.499) {\n          // singularity at north pole\n          heading = 2 * Math.atan2(x, w);\n          attitude = Math.PI / 2;\n          bank = 0;\n        }\n\n        if (test < -0.499) {\n          // singularity at south pole\n          heading = -2 * Math.atan2(x, w);\n          attitude = -Math.PI / 2;\n          bank = 0;\n        }\n\n        if (heading === undefined) {\n          const sqx = x * x;\n          const sqy = y * y;\n          const sqz = z * z;\n          heading = Math.atan2(2 * y * w - 2 * x * z, 1 - 2 * sqy - 2 * sqz); // Heading\n\n          attitude = Math.asin(2 * test); // attitude\n\n          bank = Math.atan2(2 * x * w - 2 * y * z, 1 - 2 * sqx - 2 * sqz); // bank\n        }\n\n        break;\n\n      default:\n        throw new Error(`Euler order ${order} not supported yet.`);\n    }\n\n    target.y = heading;\n    target.z = attitude;\n    target.x = bank;\n  }\n  /**\n   * @param order The order to apply angles: 'XYZ' or 'YXZ' or any other combination.\n   *\n   * See {@link https://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors MathWorks} reference\n   */\n\n\n  setFromEuler(x, y, z, order) {\n    if (order === void 0) {\n      order = 'XYZ';\n    }\n\n    const c1 = Math.cos(x / 2);\n    const c2 = Math.cos(y / 2);\n    const c3 = Math.cos(z / 2);\n    const s1 = Math.sin(x / 2);\n    const s2 = Math.sin(y / 2);\n    const s3 = Math.sin(z / 2);\n\n    if (order === 'XYZ') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Quaternion(this.x, this.y, this.z, this.w);\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   *\n   * @param toQuat second operand\n   * @param t interpolation amount between the self quaternion and toQuat\n   * @param target A quaternion to store the result in. If not provided, a new one will be created.\n   * @returns {Quaternion} The \"target\" object\n   */\n\n\n  slerp(toQuat, t, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = this.x;\n    const ay = this.y;\n    const az = this.z;\n    const aw = this.w;\n    let bx = toQuat.x;\n    let by = toQuat.y;\n    let bz = toQuat.z;\n    let bw = toQuat.w;\n    let omega;\n    let cosom;\n    let sinom;\n    let scale0;\n    let scale1; // calc cosine\n\n    cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    } // calculate coefficients\n\n\n    if (1.0 - cosom > 0.000001) {\n      // standard case (slerp)\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      // \"from\" and \"to\" quaternions are very close\n      //  ... so we can do a linear interpolation\n      scale0 = 1.0 - t;\n      scale1 = t;\n    } // calculate final values\n\n\n    target.x = scale0 * ax + scale1 * bx;\n    target.y = scale0 * ay + scale1 * by;\n    target.z = scale0 * az + scale1 * bz;\n    target.w = scale0 * aw + scale1 * bw;\n    return target;\n  }\n  /**\n   * Rotate an absolute orientation quaternion given an angular velocity and a time step.\n   */\n\n\n  integrate(angularVelocity, dt, angularFactor, target) {\n    if (target === void 0) {\n      target = new Quaternion();\n    }\n\n    const ax = angularVelocity.x * angularFactor.x,\n          ay = angularVelocity.y * angularFactor.y,\n          az = angularVelocity.z * angularFactor.z,\n          bx = this.x,\n          by = this.y,\n          bz = this.z,\n          bw = this.w;\n    const half_dt = dt * 0.5;\n    target.x += half_dt * (ax * bw + ay * bz - az * by);\n    target.y += half_dt * (ay * bw + az * bx - ax * bz);\n    target.z += half_dt * (az * bw + ax * by - ay * bx);\n    target.w += half_dt * (-ax * bx - ay * by - az * bz);\n    return target;\n  }\n\n}\nconst sfv_t1 = new Vec3();\nconst sfv_t2 = new Vec3();\n\n/**\n * The available shape types.\n */\nconst SHAPE_TYPES = {\n  /** SPHERE */\n  SPHERE: 1,\n\n  /** PLANE */\n  PLANE: 2,\n\n  /** BOX */\n  BOX: 4,\n\n  /** COMPOUND */\n  COMPOUND: 8,\n\n  /** CONVEXPOLYHEDRON */\n  CONVEXPOLYHEDRON: 16,\n\n  /** HEIGHTFIELD */\n  HEIGHTFIELD: 32,\n\n  /** PARTICLE */\n  PARTICLE: 64,\n\n  /** CYLINDER */\n  CYLINDER: 128,\n\n  /** TRIMESH */\n  TRIMESH: 256\n};\n/**\n * ShapeType\n */\n\n/**\n * Base class for shapes\n */\nclass Shape {\n  /**\n   * Identifier of the Shape.\n   */\n\n  /**\n   * The type of this shape. Must be set to an int > 0 by subclasses.\n   */\n\n  /**\n   * The local bounding sphere radius of this shape.\n   */\n\n  /**\n   * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n   * @default true\n   */\n\n  /**\n   * @default 1\n   */\n\n  /**\n   * @default -1\n   */\n\n  /**\n   * Optional material of the shape that regulates contact properties.\n   */\n\n  /**\n   * The body to which the shape is added to.\n   */\n\n  /**\n   * All the Shape types.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.id = Shape.idCounter++;\n    this.type = options.type || 0;\n    this.boundingSphereRadius = 0;\n    this.collisionResponse = options.collisionResponse ? options.collisionResponse : true;\n    this.collisionFilterGroup = options.collisionFilterGroup !== undefined ? options.collisionFilterGroup : 1;\n    this.collisionFilterMask = options.collisionFilterMask !== undefined ? options.collisionFilterMask : -1;\n    this.material = options.material ? options.material : null;\n    this.body = null;\n  }\n  /**\n   * Computes the bounding sphere radius.\n   * The result is stored in the property `.boundingSphereRadius`\n   */\n\n\n  updateBoundingSphereRadius() {\n    throw `computeBoundingSphereRadius() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * Get the volume of this shape\n   */\n\n\n  volume() {\n    throw `volume() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * Calculates the inertia in the local frame for this shape.\n   * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    throw `calculateLocalInertia() not implemented for shape type ${this.type}`;\n  }\n  /**\n   * @todo use abstract for these kind of methods\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    throw `calculateWorldAABB() not implemented for shape type ${this.type}`;\n  }\n\n}\nShape.idCounter = 0;\nShape.types = SHAPE_TYPES;\n\n/**\n * Transformation utilities.\n */\nclass Transform {\n  /**\n   * position\n   */\n\n  /**\n   * quaternion\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.position = new Vec3();\n    this.quaternion = new Quaternion();\n\n    if (options.position) {\n      this.position.copy(options.position);\n    }\n\n    if (options.quaternion) {\n      this.quaternion.copy(options.quaternion);\n    }\n  }\n  /**\n   * Get a global point in local transform coordinates.\n   */\n\n\n  pointToLocal(worldPoint, result) {\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n  }\n  /**\n   * Get a local point in global transform coordinates.\n   */\n\n\n  pointToWorld(localPoint, result) {\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n  }\n  /**\n   * vectorToWorldFrame\n   */\n\n\n  vectorToWorldFrame(localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * pointToLocalFrame\n   */\n\n\n  static pointToLocalFrame(position, quaternion, worldPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat$1);\n    tmpQuat$1.vmult(result, result);\n    return result;\n  }\n  /**\n   * pointToWorldFrame\n   */\n\n\n  static pointToWorldFrame(position, quaternion, localPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n  }\n  /**\n   * vectorToWorldFrame\n   */\n\n\n  static vectorToWorldFrame(quaternion, localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * vectorToLocalFrame\n   */\n\n\n  static vectorToLocalFrame(position, quaternion, worldVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n  }\n\n}\nconst tmpQuat$1 = new Quaternion();\n\n/**\n * A set of polygons describing a convex shape.\n *\n * The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see https://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n * @example\n *     const convexShape = new CANNON.ConvexPolyhedron({ vertices, faces })\n *     const convexBody = new CANNON.Body({ mass: 1, shape: convexShape })\n *     world.addBody(convexBody)\n */\nclass ConvexPolyhedron extends Shape {\n  /** vertices */\n\n  /**\n   * Array of integer arrays, indicating which vertices each face consists of\n   */\n\n  /** faceNormals */\n\n  /** worldVertices */\n\n  /** worldVerticesNeedsUpdate */\n\n  /** worldFaceNormals */\n\n  /** worldFaceNormalsNeedsUpdate */\n\n  /**\n   * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n   */\n\n  /** uniqueEdges */\n\n  /**\n   * @param vertices An array of Vec3's\n   * @param faces Array of integer arrays, describing which vertices that is included in each face.\n   */\n  constructor(props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    const {\n      vertices = [],\n      faces = [],\n      normals = [],\n      axes,\n      boundingSphereRadius\n    } = props;\n    super({\n      type: Shape.types.CONVEXPOLYHEDRON\n    });\n    this.vertices = vertices;\n    this.faces = faces;\n    this.faceNormals = normals;\n\n    if (this.faceNormals.length === 0) {\n      this.computeNormals();\n    }\n\n    if (!boundingSphereRadius) {\n      this.updateBoundingSphereRadius();\n    } else {\n      this.boundingSphereRadius = boundingSphereRadius;\n    }\n\n    this.worldVertices = []; // World transformed version of .vertices\n\n    this.worldVerticesNeedsUpdate = true;\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n    this.worldFaceNormalsNeedsUpdate = true;\n    this.uniqueAxes = axes ? axes.slice() : null;\n    this.uniqueEdges = [];\n    this.computeEdges();\n  }\n  /**\n   * Computes uniqueEdges\n   */\n\n\n  computeEdges() {\n    const faces = this.faces;\n    const vertices = this.vertices;\n    const edges = this.uniqueEdges;\n    edges.length = 0;\n    const edge = new Vec3();\n\n    for (let i = 0; i !== faces.length; i++) {\n      const face = faces[i];\n      const numVertices = face.length;\n\n      for (let j = 0; j !== numVertices; j++) {\n        const k = (j + 1) % numVertices;\n        vertices[face[j]].vsub(vertices[face[k]], edge);\n        edge.normalize();\n        let found = false;\n\n        for (let p = 0; p !== edges.length; p++) {\n          if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          edges.push(edge.clone());\n        }\n      }\n    }\n  }\n  /**\n   * Compute the normals of the faces.\n   * Will reuse existing Vec3 objects in the `faceNormals` array if they exist.\n   */\n\n\n  computeNormals() {\n    this.faceNormals.length = this.faces.length; // Generate normals\n\n    for (let i = 0; i < this.faces.length; i++) {\n      // Check so all vertices exists for this face\n      for (let j = 0; j < this.faces[i].length; j++) {\n        if (!this.vertices[this.faces[i][j]]) {\n          throw new Error(`Vertex ${this.faces[i][j]} not found!`);\n        }\n      }\n\n      const n = this.faceNormals[i] || new Vec3();\n      this.getFaceNormal(i, n);\n      n.negate(n);\n      this.faceNormals[i] = n;\n      const vertex = this.vertices[this.faces[i][0]];\n\n      if (n.dot(vertex) < 0) {\n        console.error(`.faceNormals[${i}] = Vec3(${n.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);\n\n        for (let j = 0; j < this.faces[i].length; j++) {\n          console.warn(`.vertices[${this.faces[i][j]}] = Vec3(${this.vertices[this.faces[i][j]].toString()})`);\n        }\n      }\n    }\n  }\n  /**\n   * Compute the normal of a face from its vertices\n   */\n\n\n  getFaceNormal(i, target) {\n    const f = this.faces[i];\n    const va = this.vertices[f[0]];\n    const vb = this.vertices[f[1]];\n    const vc = this.vertices[f[2]];\n    ConvexPolyhedron.computeNormal(va, vb, vc, target);\n  }\n  /**\n   * Get face normal given 3 vertices\n   */\n\n\n  static computeNormal(va, vb, vc, target) {\n    const cb = new Vec3();\n    const ab = new Vec3();\n    vb.vsub(va, ab);\n    vc.vsub(vb, cb);\n    cb.cross(ab, target);\n\n    if (!target.isZero()) {\n      target.normalize();\n    }\n  }\n  /**\n   * @param minDist Clamp distance\n   * @param result The an array of contact point objects, see clipFaceAgainstHull\n   */\n\n\n  clipAgainstHull(posA, quatA, hullB, posB, quatB, separatingNormal, minDist, maxDist, result) {\n    const WorldNormal = new Vec3();\n    let closestFaceB = -1;\n    let dmax = -Number.MAX_VALUE;\n\n    for (let face = 0; face < hullB.faces.length; face++) {\n      WorldNormal.copy(hullB.faceNormals[face]);\n      quatB.vmult(WorldNormal, WorldNormal);\n      const d = WorldNormal.dot(separatingNormal);\n\n      if (d > dmax) {\n        dmax = d;\n        closestFaceB = face;\n      }\n    }\n\n    const worldVertsB1 = [];\n\n    for (let i = 0; i < hullB.faces[closestFaceB].length; i++) {\n      const b = hullB.vertices[hullB.faces[closestFaceB][i]];\n      const worldb = new Vec3();\n      worldb.copy(b);\n      quatB.vmult(worldb, worldb);\n      posB.vadd(worldb, worldb);\n      worldVertsB1.push(worldb);\n    }\n\n    if (closestFaceB >= 0) {\n      this.clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result);\n    }\n  }\n  /**\n   * Find the separating axis between this hull and another\n   * @param target The target vector to save the axis in\n   * @return Returns false if a separation is found, else true\n   */\n\n\n  findSeparatingAxis(hullB, posA, quatA, posB, quatB, target, faceListA, faceListB) {\n    const faceANormalWS3 = new Vec3();\n    const Worldnormal1 = new Vec3();\n    const deltaC = new Vec3();\n    const worldEdge0 = new Vec3();\n    const worldEdge1 = new Vec3();\n    const Cross = new Vec3();\n    let dmin = Number.MAX_VALUE;\n    const hullA = this;\n\n    if (!hullA.uniqueAxes) {\n      const numFacesA = faceListA ? faceListA.length : hullA.faces.length; // Test face normals from hullA\n\n      for (let i = 0; i < numFacesA; i++) {\n        const fi = faceListA ? faceListA[i] : i; // Get world face normal\n\n        faceANormalWS3.copy(hullA.faceNormals[fi]);\n        quatA.vmult(faceANormalWS3, faceANormalWS3);\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(faceANormalWS3);\n        }\n      }\n    } else {\n      // Test unique axes\n      for (let i = 0; i !== hullA.uniqueAxes.length; i++) {\n        // Get world axis\n        quatA.vmult(hullA.uniqueAxes[i], faceANormalWS3);\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(faceANormalWS3);\n        }\n      }\n    }\n\n    if (!hullB.uniqueAxes) {\n      // Test face normals from hullB\n      const numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n\n      for (let i = 0; i < numFacesB; i++) {\n        const fi = faceListB ? faceListB[i] : i;\n        Worldnormal1.copy(hullB.faceNormals[fi]);\n        quatB.vmult(Worldnormal1, Worldnormal1);\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(Worldnormal1);\n        }\n      }\n    } else {\n      // Test unique axes in B\n      for (let i = 0; i !== hullB.uniqueAxes.length; i++) {\n        quatB.vmult(hullB.uniqueAxes[i], Worldnormal1);\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n        if (d === false) {\n          return false;\n        }\n\n        if (d < dmin) {\n          dmin = d;\n          target.copy(Worldnormal1);\n        }\n      }\n    } // Test edges\n\n\n    for (let e0 = 0; e0 !== hullA.uniqueEdges.length; e0++) {\n      // Get world edge\n      quatA.vmult(hullA.uniqueEdges[e0], worldEdge0);\n\n      for (let e1 = 0; e1 !== hullB.uniqueEdges.length; e1++) {\n        // Get world edge 2\n        quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n        worldEdge0.cross(worldEdge1, Cross);\n\n        if (!Cross.almostZero()) {\n          Cross.normalize();\n          const dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n\n          if (dist === false) {\n            return false;\n          }\n\n          if (dist < dmin) {\n            dmin = dist;\n            target.copy(Cross);\n          }\n        }\n      }\n    }\n\n    posB.vsub(posA, deltaC);\n\n    if (deltaC.dot(target) > 0.0) {\n      target.negate(target);\n    }\n\n    return true;\n  }\n  /**\n   * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n   * @return The overlap depth, or FALSE if no penetration.\n   */\n\n\n  testSepAxis(axis, hullB, posA, quatA, posB, quatB) {\n    const hullA = this;\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n    const maxA = maxminA[0];\n    const minA = maxminA[1];\n    const maxB = maxminB[0];\n    const minB = maxminB[1];\n\n    if (maxA < minB || maxB < minA) {\n      return false; // Separated\n    }\n\n    const d0 = maxA - minB;\n    const d1 = maxB - minA;\n    const depth = d0 < d1 ? d0 : d1;\n    return depth;\n  }\n  /**\n   * calculateLocalInertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    const aabbmax = new Vec3();\n    const aabbmin = new Vec3();\n    this.computeLocalAABB(aabbmin, aabbmax);\n    const x = aabbmax.x - aabbmin.x;\n    const y = aabbmax.y - aabbmin.y;\n    const z = aabbmax.z - aabbmin.z;\n    target.x = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z);\n    target.y = 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z);\n    target.z = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x);\n  }\n  /**\n   * @param face_i Index of the face\n   */\n\n\n  getPlaneConstantOfFace(face_i) {\n    const f = this.faces[face_i];\n    const n = this.faceNormals[face_i];\n    const v = this.vertices[f[0]];\n    const c = -n.dot(v);\n    return c;\n  }\n  /**\n   * Clip a face against a hull.\n   * @param worldVertsB1 An array of Vec3 with vertices in the world frame.\n   * @param minDist Distance clamping\n   * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n   */\n\n\n  clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result) {\n    const faceANormalWS = new Vec3();\n    const edge0 = new Vec3();\n    const WorldEdge0 = new Vec3();\n    const worldPlaneAnormal1 = new Vec3();\n    const planeNormalWS1 = new Vec3();\n    const worldA1 = new Vec3();\n    const localPlaneNormal = new Vec3();\n    const planeNormalWS = new Vec3();\n    const hullA = this;\n    const worldVertsB2 = [];\n    const pVtxIn = worldVertsB1;\n    const pVtxOut = worldVertsB2;\n    let closestFaceA = -1;\n    let dmin = Number.MAX_VALUE; // Find the face with normal closest to the separating axis\n\n    for (let face = 0; face < hullA.faces.length; face++) {\n      faceANormalWS.copy(hullA.faceNormals[face]);\n      quatA.vmult(faceANormalWS, faceANormalWS);\n      const d = faceANormalWS.dot(separatingNormal);\n\n      if (d < dmin) {\n        dmin = d;\n        closestFaceA = face;\n      }\n    }\n\n    if (closestFaceA < 0) {\n      return;\n    } // Get the face and construct connected faces\n\n\n    const polyA = hullA.faces[closestFaceA];\n    polyA.connectedFaces = [];\n\n    for (let i = 0; i < hullA.faces.length; i++) {\n      for (let j = 0; j < hullA.faces[i].length; j++) {\n        if (\n        /* Sharing a vertex*/\n        polyA.indexOf(hullA.faces[i][j]) !== -1 &&\n        /* Not the one we are looking for connections from */\n        i !== closestFaceA &&\n        /* Not already added */\n        polyA.connectedFaces.indexOf(i) === -1) {\n          polyA.connectedFaces.push(i);\n        }\n      }\n    } // Clip the polygon to the back of the planes of all faces of hull A,\n    // that are adjacent to the witness face\n\n\n    const numVerticesA = polyA.length;\n\n    for (let i = 0; i < numVerticesA; i++) {\n      const a = hullA.vertices[polyA[i]];\n      const b = hullA.vertices[polyA[(i + 1) % numVerticesA]];\n      a.vsub(b, edge0);\n      WorldEdge0.copy(edge0);\n      quatA.vmult(WorldEdge0, WorldEdge0);\n      posA.vadd(WorldEdge0, WorldEdge0);\n      worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);\n      quatA.vmult(worldPlaneAnormal1, worldPlaneAnormal1);\n      posA.vadd(worldPlaneAnormal1, worldPlaneAnormal1);\n      WorldEdge0.cross(worldPlaneAnormal1, planeNormalWS1);\n      planeNormalWS1.negate(planeNormalWS1);\n      worldA1.copy(a);\n      quatA.vmult(worldA1, worldA1);\n      posA.vadd(worldA1, worldA1);\n      const otherFace = polyA.connectedFaces[i];\n      localPlaneNormal.copy(this.faceNormals[otherFace]);\n      const localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n      planeNormalWS.copy(localPlaneNormal);\n      quatA.vmult(planeNormalWS, planeNormalWS);\n      const planeEqWS = localPlaneEq - planeNormalWS.dot(posA); // Clip face against our constructed plane\n\n      this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS); // Throw away all clipped points, but save the remaining until next clip\n\n      while (pVtxIn.length) {\n        pVtxIn.shift();\n      }\n\n      while (pVtxOut.length) {\n        pVtxIn.push(pVtxOut.shift());\n      }\n    } // only keep contact points that are behind the witness face\n\n\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n    const localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n    planeNormalWS.copy(localPlaneNormal);\n    quatA.vmult(planeNormalWS, planeNormalWS);\n    const planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n\n    for (let i = 0; i < pVtxIn.length; i++) {\n      let depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; // ???\n\n      if (depth <= minDist) {\n        console.log(`clamped: depth=${depth} to minDist=${minDist}`);\n        depth = minDist;\n      }\n\n      if (depth <= maxDist) {\n        const point = pVtxIn[i];\n\n        if (depth <= 1e-6) {\n          const p = {\n            point,\n            normal: planeNormalWS,\n            depth\n          };\n          result.push(p);\n        }\n      }\n    }\n  }\n  /**\n   * Clip a face in a hull against the back of a plane.\n   * @param planeConstant The constant in the mathematical plane equation\n   */\n\n\n  clipFaceAgainstPlane(inVertices, outVertices, planeNormal, planeConstant) {\n    let n_dot_first;\n    let n_dot_last;\n    const numVerts = inVertices.length;\n\n    if (numVerts < 2) {\n      return outVertices;\n    }\n\n    let firstVertex = inVertices[inVertices.length - 1];\n    let lastVertex = inVertices[0];\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n    for (let vi = 0; vi < numVerts; vi++) {\n      lastVertex = inVertices[vi];\n      n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n\n      if (n_dot_first < 0) {\n        if (n_dot_last < 0) {\n          // Start < 0, end < 0, so output lastVertex\n          const newv = new Vec3();\n          newv.copy(lastVertex);\n          outVertices.push(newv);\n        } else {\n          // Start < 0, end >= 0, so output intersection\n          const newv = new Vec3();\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n          outVertices.push(newv);\n        }\n      } else {\n        if (n_dot_last < 0) {\n          // Start >= 0, end < 0 so output intersection and end\n          const newv = new Vec3();\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n          outVertices.push(newv);\n          outVertices.push(lastVertex);\n        }\n      }\n\n      firstVertex = lastVertex;\n      n_dot_first = n_dot_last;\n    }\n\n    return outVertices;\n  }\n  /**\n   * Updates `.worldVertices` and sets `.worldVerticesNeedsUpdate` to false.\n   */\n\n\n  computeWorldVertices(position, quat) {\n    while (this.worldVertices.length < this.vertices.length) {\n      this.worldVertices.push(new Vec3());\n    }\n\n    const verts = this.vertices;\n    const worldVerts = this.worldVertices;\n\n    for (let i = 0; i !== this.vertices.length; i++) {\n      quat.vmult(verts[i], worldVerts[i]);\n      position.vadd(worldVerts[i], worldVerts[i]);\n    }\n\n    this.worldVerticesNeedsUpdate = false;\n  }\n\n  computeLocalAABB(aabbmin, aabbmax) {\n    const vertices = this.vertices;\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    for (let i = 0; i < this.vertices.length; i++) {\n      const v = vertices[i];\n\n      if (v.x < aabbmin.x) {\n        aabbmin.x = v.x;\n      } else if (v.x > aabbmax.x) {\n        aabbmax.x = v.x;\n      }\n\n      if (v.y < aabbmin.y) {\n        aabbmin.y = v.y;\n      } else if (v.y > aabbmax.y) {\n        aabbmax.y = v.y;\n      }\n\n      if (v.z < aabbmin.z) {\n        aabbmin.z = v.z;\n      } else if (v.z > aabbmax.z) {\n        aabbmax.z = v.z;\n      }\n    }\n  }\n  /**\n   * Updates `worldVertices` and sets `worldVerticesNeedsUpdate` to false.\n   */\n\n\n  computeWorldFaceNormals(quat) {\n    const N = this.faceNormals.length;\n\n    while (this.worldFaceNormals.length < N) {\n      this.worldFaceNormals.push(new Vec3());\n    }\n\n    const normals = this.faceNormals;\n    const worldNormals = this.worldFaceNormals;\n\n    for (let i = 0; i !== N; i++) {\n      quat.vmult(normals[i], worldNormals[i]);\n    }\n\n    this.worldFaceNormalsNeedsUpdate = false;\n  }\n  /**\n   * updateBoundingSphereRadius\n   */\n\n\n  updateBoundingSphereRadius() {\n    // Assume points are distributed with local (0,0,0) as center\n    let max2 = 0;\n    const verts = this.vertices;\n\n    for (let i = 0; i !== verts.length; i++) {\n      const norm2 = verts[i].lengthSquared();\n\n      if (norm2 > max2) {\n        max2 = norm2;\n      }\n    }\n\n    this.boundingSphereRadius = Math.sqrt(max2);\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const verts = this.vertices;\n    let minx;\n    let miny;\n    let minz;\n    let maxx;\n    let maxy;\n    let maxz;\n    let tempWorldVertex = new Vec3();\n\n    for (let i = 0; i < verts.length; i++) {\n      tempWorldVertex.copy(verts[i]);\n      quat.vmult(tempWorldVertex, tempWorldVertex);\n      pos.vadd(tempWorldVertex, tempWorldVertex);\n      const v = tempWorldVertex;\n\n      if (minx === undefined || v.x < minx) {\n        minx = v.x;\n      }\n\n      if (maxx === undefined || v.x > maxx) {\n        maxx = v.x;\n      }\n\n      if (miny === undefined || v.y < miny) {\n        miny = v.y;\n      }\n\n      if (maxy === undefined || v.y > maxy) {\n        maxy = v.y;\n      }\n\n      if (minz === undefined || v.z < minz) {\n        minz = v.z;\n      }\n\n      if (maxz === undefined || v.z > maxz) {\n        maxz = v.z;\n      }\n    }\n\n    min.set(minx, miny, minz);\n    max.set(maxx, maxy, maxz);\n  }\n  /**\n   * Get approximate convex volume\n   */\n\n\n  volume() {\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n  }\n  /**\n   * Get an average of all the vertices positions\n   */\n\n\n  getAveragePointLocal(target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const verts = this.vertices;\n\n    for (let i = 0; i < verts.length; i++) {\n      target.vadd(verts[i], target);\n    }\n\n    target.scale(1 / verts.length, target);\n    return target;\n  }\n  /**\n   * Transform all local points. Will change the .vertices\n   */\n\n\n  transformAllPoints(offset, quat) {\n    const n = this.vertices.length;\n    const verts = this.vertices; // Apply rotation\n\n    if (quat) {\n      // Rotate vertices\n      for (let i = 0; i < n; i++) {\n        const v = verts[i];\n        quat.vmult(v, v);\n      } // Rotate face normals\n\n\n      for (let i = 0; i < this.faceNormals.length; i++) {\n        const v = this.faceNormals[i];\n        quat.vmult(v, v);\n      }\n      /*\n            // Rotate edges\n            for(let i=0; i<this.uniqueEdges.length; i++){\n                const v = this.uniqueEdges[i];\n                quat.vmult(v,v);\n            }*/\n\n    } // Apply offset\n\n\n    if (offset) {\n      for (let i = 0; i < n; i++) {\n        const v = verts[i];\n        v.vadd(offset, v);\n      }\n    }\n  }\n  /**\n   * Checks whether p is inside the polyhedra. Must be in local coords.\n   * The point lies outside of the convex hull of the other points if and only if the direction\n   * of all the vectors from it to those other points are on less than one half of a sphere around it.\n   * @param p A point given in local coordinates\n   */\n\n\n  pointIsInside(p) {\n    const verts = this.vertices;\n    const faces = this.faces;\n    const normals = this.faceNormals;\n    const positiveResult = null;\n    const pointInside = new Vec3();\n    this.getAveragePointLocal(pointInside);\n\n    for (let i = 0; i < this.faces.length; i++) {\n      let n = normals[i];\n      const v = verts[faces[i][0]]; // We only need one point in the face\n      // This dot product determines which side of the edge the point is\n\n      const vToP = new Vec3();\n      p.vsub(v, vToP);\n      const r1 = n.dot(vToP);\n      const vToPointInside = new Vec3();\n      pointInside.vsub(v, vToPointInside);\n      const r2 = n.dot(vToPointInside);\n\n      if (r1 < 0 && r2 > 0 || r1 > 0 && r2 < 0) {\n        return false; // Encountered some other sign. Exit.\n      }\n    } // If we got here, all dot products were of the same sign.\n\n\n    return positiveResult ? 1 : -1;\n  }\n  /**\n   * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis.\n   * Results are saved in the array maxmin.\n   * @param result result[0] and result[1] will be set to maximum and minimum, respectively.\n   */\n\n\n  static project(shape, axis, pos, quat, result) {\n    const n = shape.vertices.length;\n    project_worldVertex;\n    const localAxis = project_localAxis;\n    let max = 0;\n    let min = 0;\n    const localOrigin = project_localOrigin;\n    const vs = shape.vertices;\n    localOrigin.setZero(); // Transform the axis to local\n\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n    const add = localOrigin.dot(localAxis);\n    min = max = vs[0].dot(localAxis);\n\n    for (let i = 1; i < n; i++) {\n      const val = vs[i].dot(localAxis);\n\n      if (val > max) {\n        max = val;\n      }\n\n      if (val < min) {\n        min = val;\n      }\n    }\n\n    min -= add;\n    max -= add;\n\n    if (min > max) {\n      // Inconsistent - swap\n      const temp = min;\n      min = max;\n      max = temp;\n    } // Output\n\n\n    result[0] = max;\n    result[1] = min;\n  }\n\n}\nconst maxminA = [];\nconst maxminB = [];\nconst project_worldVertex = new Vec3();\nconst project_localAxis = new Vec3();\nconst project_localOrigin = new Vec3();\n\n/**\n * A 3d box shape.\n * @example\n *     const size = 1\n *     const halfExtents = new CANNON.Vec3(size, size, size)\n *     const boxShape = new CANNON.Box(halfExtents)\n *     const boxBody = new CANNON.Body({ mass: 1, shape: boxShape })\n *     world.addBody(boxBody)\n */\nclass Box extends Shape {\n  /**\n   * The half extents of the box.\n   */\n\n  /**\n   * Used by the contact generator to make contacts with other convex polyhedra for example.\n   */\n  constructor(halfExtents) {\n    super({\n      type: Shape.types.BOX\n    });\n    this.halfExtents = halfExtents;\n    this.convexPolyhedronRepresentation = null;\n    this.updateConvexPolyhedronRepresentation();\n    this.updateBoundingSphereRadius();\n  }\n  /**\n   * Updates the local convex polyhedron representation used for some collisions.\n   */\n\n\n  updateConvexPolyhedronRepresentation() {\n    const sx = this.halfExtents.x;\n    const sy = this.halfExtents.y;\n    const sz = this.halfExtents.z;\n    const V = Vec3;\n    const vertices = [new V(-sx, -sy, -sz), new V(sx, -sy, -sz), new V(sx, sy, -sz), new V(-sx, sy, -sz), new V(-sx, -sy, sz), new V(sx, -sy, sz), new V(sx, sy, sz), new V(-sx, sy, sz)];\n    const faces = [[3, 2, 1, 0], // -z\n    [4, 5, 6, 7], // +z\n    [5, 4, 0, 1], // -y\n    [2, 3, 7, 6], // +y\n    [0, 4, 7, 3], // -x\n    [1, 2, 6, 5] // +x\n    ];\n    const axes = [new V(0, 0, 1), new V(0, 1, 0), new V(1, 0, 0)];\n    const h = new ConvexPolyhedron({\n      vertices,\n      faces,\n      axes\n    });\n    this.convexPolyhedronRepresentation = h;\n    h.material = this.material;\n  }\n  /**\n   * Calculate the inertia of the box.\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    Box.calculateInertia(this.halfExtents, mass, target);\n    return target;\n  }\n\n  static calculateInertia(halfExtents, mass, target) {\n    const e = halfExtents;\n    target.x = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.z * 2 * e.z);\n    target.y = 1.0 / 12.0 * mass * (2 * e.x * 2 * e.x + 2 * e.z * 2 * e.z);\n    target.z = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.x * 2 * e.x);\n  }\n  /**\n   * Get the box 6 side normals\n   * @param sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n   * @param quat Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n   */\n\n\n  getSideNormals(sixTargetVectors, quat) {\n    const sides = sixTargetVectors;\n    const ex = this.halfExtents;\n    sides[0].set(ex.x, 0, 0);\n    sides[1].set(0, ex.y, 0);\n    sides[2].set(0, 0, ex.z);\n    sides[3].set(-ex.x, 0, 0);\n    sides[4].set(0, -ex.y, 0);\n    sides[5].set(0, 0, -ex.z);\n\n    if (quat !== undefined) {\n      for (let i = 0; i !== sides.length; i++) {\n        quat.vmult(sides[i], sides[i]);\n      }\n    }\n\n    return sides;\n  }\n  /**\n   * Returns the volume of the box.\n   */\n\n\n  volume() {\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n  }\n  /**\n   * updateBoundingSphereRadius\n   */\n\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = this.halfExtents.length();\n  }\n  /**\n   * forEachWorldCorner\n   */\n\n\n  forEachWorldCorner(pos, quat, callback) {\n    const e = this.halfExtents;\n    const corners = [[e.x, e.y, e.z], [-e.x, e.y, e.z], [-e.x, -e.y, e.z], [-e.x, -e.y, -e.z], [e.x, -e.y, -e.z], [e.x, e.y, -e.z], [-e.x, e.y, -e.z], [e.x, -e.y, e.z]];\n\n    for (let i = 0; i < corners.length; i++) {\n      worldCornerTempPos.set(corners[i][0], corners[i][1], corners[i][2]);\n      quat.vmult(worldCornerTempPos, worldCornerTempPos);\n      pos.vadd(worldCornerTempPos, worldCornerTempPos);\n      callback(worldCornerTempPos.x, worldCornerTempPos.y, worldCornerTempPos.z);\n    }\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const e = this.halfExtents;\n    worldCornersTemp[0].set(e.x, e.y, e.z);\n    worldCornersTemp[1].set(-e.x, e.y, e.z);\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\n    worldCornersTemp[5].set(e.x, e.y, -e.z);\n    worldCornersTemp[6].set(-e.x, e.y, -e.z);\n    worldCornersTemp[7].set(e.x, -e.y, e.z);\n    const wc = worldCornersTemp[0];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    max.copy(wc);\n    min.copy(wc);\n\n    for (let i = 1; i < 8; i++) {\n      const wc = worldCornersTemp[i];\n      quat.vmult(wc, wc);\n      pos.vadd(wc, wc);\n      const x = wc.x;\n      const y = wc.y;\n      const z = wc.z;\n\n      if (x > max.x) {\n        max.x = x;\n      }\n\n      if (y > max.y) {\n        max.y = y;\n      }\n\n      if (z > max.z) {\n        max.z = z;\n      }\n\n      if (x < min.x) {\n        min.x = x;\n      }\n\n      if (y < min.y) {\n        min.y = y;\n      }\n\n      if (z < min.z) {\n        min.z = z;\n      }\n    } // Get each axis max\n    // min.set(Infinity,Infinity,Infinity);\n    // max.set(-Infinity,-Infinity,-Infinity);\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\n    //     if(x > max.x){\n    //         max.x = x;\n    //     }\n    //     if(y > max.y){\n    //         max.y = y;\n    //     }\n    //     if(z > max.z){\n    //         max.z = z;\n    //     }\n    //     if(x < min.x){\n    //         min.x = x;\n    //     }\n    //     if(y < min.y){\n    //         min.y = y;\n    //     }\n    //     if(z < min.z){\n    //         min.z = z;\n    //     }\n    // });\n\n  }\n\n}\nconst worldCornerTempPos = new Vec3();\nconst worldCornersTemp = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n/**\n * BODY_TYPES\n */\nconst BODY_TYPES = {\n  /** DYNAMIC */\n  DYNAMIC: 1,\n\n  /** STATIC */\n  STATIC: 2,\n\n  /** KINEMATIC */\n  KINEMATIC: 4\n};\n/**\n * BodyType\n */\n\n/**\n * BODY_SLEEP_STATES\n */\nconst BODY_SLEEP_STATES = {\n  /** AWAKE */\n  AWAKE: 0,\n\n  /** SLEEPY */\n  SLEEPY: 1,\n\n  /** SLEEPING */\n  SLEEPING: 2\n};\n/**\n * BodySleepState\n */\n\n/**\n * Base class for all body types.\n * @example\n *     const shape = new CANNON.Sphere(1)\n *     const body = new CANNON.Body({\n *       mass: 1,\n *       shape,\n *     })\n *     world.addBody(body)\n */\nclass Body extends EventTarget {\n  /**\n   * Dispatched after two bodies collide. This event is dispatched on each\n   * of the two bodies involved in the collision.\n   * @event collide\n   * @param body The body that was involved in the collision.\n   * @param contact The details of the collision.\n   */\n\n  /**\n   * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n   */\n\n  /**\n   * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n   */\n\n  /**\n   * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n   */\n\n  /**\n   * AWAKE\n   */\n\n  /**\n   * SLEEPY\n   */\n\n  /**\n   * SLEEPING\n   */\n\n  /**\n   * Dispatched after a sleeping body has woken up.\n   * @event wakeup\n   */\n\n  /**\n   * Dispatched after a body has gone in to the sleepy state.\n   * @event sleepy\n   */\n\n  /**\n   * Dispatched after a body has fallen asleep.\n   * @event sleep\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super();\n    this.id = Body.idCounter++;\n    this.index = -1;\n    this.world = null;\n    this.vlambda = new Vec3();\n    this.collisionFilterGroup = typeof options.collisionFilterGroup === 'number' ? options.collisionFilterGroup : 1;\n    this.collisionFilterMask = typeof options.collisionFilterMask === 'number' ? options.collisionFilterMask : -1;\n    this.collisionResponse = typeof options.collisionResponse === 'boolean' ? options.collisionResponse : true;\n    this.position = new Vec3();\n    this.previousPosition = new Vec3();\n    this.interpolatedPosition = new Vec3();\n    this.initPosition = new Vec3();\n\n    if (options.position) {\n      this.position.copy(options.position);\n      this.previousPosition.copy(options.position);\n      this.interpolatedPosition.copy(options.position);\n      this.initPosition.copy(options.position);\n    }\n\n    this.velocity = new Vec3();\n\n    if (options.velocity) {\n      this.velocity.copy(options.velocity);\n    }\n\n    this.initVelocity = new Vec3();\n    this.force = new Vec3();\n    const mass = typeof options.mass === 'number' ? options.mass : 0;\n    this.mass = mass;\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\n    this.material = options.material || null;\n    this.linearDamping = typeof options.linearDamping === 'number' ? options.linearDamping : 0.01;\n    this.type = mass <= 0.0 ? Body.STATIC : Body.DYNAMIC;\n\n    if (typeof options.type === typeof Body.STATIC) {\n      this.type = options.type;\n    }\n\n    this.allowSleep = typeof options.allowSleep !== 'undefined' ? options.allowSleep : true;\n    this.sleepState = Body.AWAKE;\n    this.sleepSpeedLimit = typeof options.sleepSpeedLimit !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n    this.sleepTimeLimit = typeof options.sleepTimeLimit !== 'undefined' ? options.sleepTimeLimit : 1;\n    this.timeLastSleepy = 0;\n    this.wakeUpAfterNarrowphase = false;\n    this.torque = new Vec3();\n    this.quaternion = new Quaternion();\n    this.initQuaternion = new Quaternion();\n    this.previousQuaternion = new Quaternion();\n    this.interpolatedQuaternion = new Quaternion();\n\n    if (options.quaternion) {\n      this.quaternion.copy(options.quaternion);\n      this.initQuaternion.copy(options.quaternion);\n      this.previousQuaternion.copy(options.quaternion);\n      this.interpolatedQuaternion.copy(options.quaternion);\n    }\n\n    this.angularVelocity = new Vec3();\n\n    if (options.angularVelocity) {\n      this.angularVelocity.copy(options.angularVelocity);\n    }\n\n    this.initAngularVelocity = new Vec3();\n    this.shapes = [];\n    this.shapeOffsets = [];\n    this.shapeOrientations = [];\n    this.inertia = new Vec3();\n    this.invInertia = new Vec3();\n    this.invInertiaWorld = new Mat3();\n    this.invMassSolve = 0;\n    this.invInertiaSolve = new Vec3();\n    this.invInertiaWorldSolve = new Mat3();\n    this.fixedRotation = typeof options.fixedRotation !== 'undefined' ? options.fixedRotation : false;\n    this.angularDamping = typeof options.angularDamping !== 'undefined' ? options.angularDamping : 0.01;\n    this.linearFactor = new Vec3(1, 1, 1);\n\n    if (options.linearFactor) {\n      this.linearFactor.copy(options.linearFactor);\n    }\n\n    this.angularFactor = new Vec3(1, 1, 1);\n\n    if (options.angularFactor) {\n      this.angularFactor.copy(options.angularFactor);\n    }\n\n    this.aabb = new AABB();\n    this.aabbNeedsUpdate = true;\n    this.boundingRadius = 0;\n    this.wlambda = new Vec3();\n    this.isTrigger = Boolean(options.isTrigger);\n\n    if (options.shape) {\n      this.addShape(options.shape);\n    }\n\n    this.updateMassProperties();\n  }\n  /**\n   * Wake the body up.\n   */\n\n\n  wakeUp() {\n    const prevState = this.sleepState;\n    this.sleepState = Body.AWAKE;\n    this.wakeUpAfterNarrowphase = false;\n\n    if (prevState === Body.SLEEPING) {\n      this.dispatchEvent(Body.wakeupEvent);\n    }\n  }\n  /**\n   * Force body sleep\n   */\n\n\n  sleep() {\n    this.sleepState = Body.SLEEPING;\n    this.velocity.set(0, 0, 0);\n    this.angularVelocity.set(0, 0, 0);\n    this.wakeUpAfterNarrowphase = false;\n  }\n  /**\n   * Called every timestep to update internal sleep timer and change sleep state if needed.\n   * @param time The world time in seconds\n   */\n\n\n  sleepTick(time) {\n    if (this.allowSleep) {\n      const sleepState = this.sleepState;\n      const speedSquared = this.velocity.lengthSquared() + this.angularVelocity.lengthSquared();\n      const speedLimitSquared = this.sleepSpeedLimit ** 2;\n\n      if (sleepState === Body.AWAKE && speedSquared < speedLimitSquared) {\n        this.sleepState = Body.SLEEPY; // Sleepy\n\n        this.timeLastSleepy = time;\n        this.dispatchEvent(Body.sleepyEvent);\n      } else if (sleepState === Body.SLEEPY && speedSquared > speedLimitSquared) {\n        this.wakeUp(); // Wake up\n      } else if (sleepState === Body.SLEEPY && time - this.timeLastSleepy > this.sleepTimeLimit) {\n        this.sleep(); // Sleeping\n\n        this.dispatchEvent(Body.sleepEvent);\n      }\n    }\n  }\n  /**\n   * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n   */\n\n\n  updateSolveMassProperties() {\n    if (this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC) {\n      this.invMassSolve = 0;\n      this.invInertiaSolve.setZero();\n      this.invInertiaWorldSolve.setZero();\n    } else {\n      this.invMassSolve = this.invMass;\n      this.invInertiaSolve.copy(this.invInertia);\n      this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n    }\n  }\n  /**\n   * Convert a world point to local body frame.\n   */\n\n\n  pointToLocalFrame(worldPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    worldPoint.vsub(this.position, result);\n    this.quaternion.conjugate().vmult(result, result);\n    return result;\n  }\n  /**\n   * Convert a world vector to local body frame.\n   */\n\n\n  vectorToLocalFrame(worldVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.conjugate().vmult(worldVector, result);\n    return result;\n  }\n  /**\n   * Convert a local body point to world frame.\n   */\n\n\n  pointToWorldFrame(localPoint, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localPoint, result);\n    result.vadd(this.position, result);\n    return result;\n  }\n  /**\n   * Convert a local body point to world frame.\n   */\n\n\n  vectorToWorldFrame(localVector, result) {\n    if (result === void 0) {\n      result = new Vec3();\n    }\n\n    this.quaternion.vmult(localVector, result);\n    return result;\n  }\n  /**\n   * Add a shape to the body with a local offset and orientation.\n   * @return The body object, for chainability.\n   */\n\n\n  addShape(shape, _offset, _orientation) {\n    const offset = new Vec3();\n    const orientation = new Quaternion();\n\n    if (_offset) {\n      offset.copy(_offset);\n    }\n\n    if (_orientation) {\n      orientation.copy(_orientation);\n    }\n\n    this.shapes.push(shape);\n    this.shapeOffsets.push(offset);\n    this.shapeOrientations.push(orientation);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n    this.aabbNeedsUpdate = true;\n    shape.body = this;\n    return this;\n  }\n  /**\n   * Remove a shape from the body.\n   * @return The body object, for chainability.\n   */\n\n\n  removeShape(shape) {\n    const index = this.shapes.indexOf(shape);\n\n    if (index === -1) {\n      console.warn('Shape does not belong to the body');\n      return this;\n    }\n\n    this.shapes.splice(index, 1);\n    this.shapeOffsets.splice(index, 1);\n    this.shapeOrientations.splice(index, 1);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n    this.aabbNeedsUpdate = true;\n    shape.body = null;\n    return this;\n  }\n  /**\n   * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n   */\n\n\n  updateBoundingRadius() {\n    const shapes = this.shapes;\n    const shapeOffsets = this.shapeOffsets;\n    const N = shapes.length;\n    let radius = 0;\n\n    for (let i = 0; i !== N; i++) {\n      const shape = shapes[i];\n      shape.updateBoundingSphereRadius();\n      const offset = shapeOffsets[i].length();\n      const r = shape.boundingSphereRadius;\n\n      if (offset + r > radius) {\n        radius = offset + r;\n      }\n    }\n\n    this.boundingRadius = radius;\n  }\n  /**\n   * Updates the .aabb\n   */\n\n\n  updateAABB() {\n    const shapes = this.shapes;\n    const shapeOffsets = this.shapeOffsets;\n    const shapeOrientations = this.shapeOrientations;\n    const N = shapes.length;\n    const offset = tmpVec;\n    const orientation = tmpQuat;\n    const bodyQuat = this.quaternion;\n    const aabb = this.aabb;\n    const shapeAABB = updateAABB_shapeAABB;\n\n    for (let i = 0; i !== N; i++) {\n      const shape = shapes[i]; // Get shape world position\n\n      bodyQuat.vmult(shapeOffsets[i], offset);\n      offset.vadd(this.position, offset); // Get shape world quaternion\n\n      bodyQuat.mult(shapeOrientations[i], orientation); // Get shape AABB\n\n      shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n      if (i === 0) {\n        aabb.copy(shapeAABB);\n      } else {\n        aabb.extend(shapeAABB);\n      }\n    }\n\n    this.aabbNeedsUpdate = false;\n  }\n  /**\n   * Update `.inertiaWorld` and `.invInertiaWorld`\n   */\n\n\n  updateInertiaWorld(force) {\n    const I = this.invInertia;\n\n    if (I.x === I.y && I.y === I.z && !force) ; else {\n      const m1 = uiw_m1;\n      const m2 = uiw_m2;\n      uiw_m3;\n      m1.setRotationFromQuaternion(this.quaternion);\n      m1.transpose(m2);\n      m1.scale(I, m1);\n      m1.mmult(m2, this.invInertiaWorld);\n    }\n  }\n  /**\n   * Apply force to a point of the body. This could for example be a point on the Body surface.\n   * Applying force this way will add to Body.force and Body.torque.\n   * @param force The amount of force to add.\n   * @param relativePoint A point relative to the center of mass to apply the force on.\n   */\n\n\n  applyForce(force, relativePoint) {\n    if (relativePoint === void 0) {\n      relativePoint = new Vec3();\n    }\n\n    // Needed?\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Compute produced rotational force\n\n\n    const rotForce = Body_applyForce_rotForce;\n    relativePoint.cross(force, rotForce); // Add linear force\n\n    this.force.vadd(force, this.force); // Add rotational force\n\n    this.torque.vadd(rotForce, this.torque);\n  }\n  /**\n   * Apply force to a local point in the body.\n   * @param force The force vector to apply, defined locally in the body frame.\n   * @param localPoint A local point in the body to apply the force on.\n   */\n\n\n  applyLocalForce(localForce, localPoint) {\n    if (localPoint === void 0) {\n      localPoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    const worldForce = Body_applyLocalForce_worldForce;\n    const relativePointWorld = Body_applyLocalForce_relativePointWorld; // Transform the force vector to world space\n\n    this.vectorToWorldFrame(localForce, worldForce);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n    this.applyForce(worldForce, relativePointWorld);\n  }\n  /**\n   * Apply torque to the body.\n   * @param torque The amount of torque to add.\n   */\n\n\n  applyTorque(torque) {\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Add rotational force\n\n\n    this.torque.vadd(torque, this.torque);\n  }\n  /**\n   * Apply impulse to a point of the body. This could for example be a point on the Body surface.\n   * An impulse is a force added to a body during a short period of time (impulse = force * time).\n   * Impulses will be added to Body.velocity and Body.angularVelocity.\n   * @param impulse The amount of impulse to add.\n   * @param relativePoint A point relative to the center of mass to apply the force on.\n   */\n\n\n  applyImpulse(impulse, relativePoint) {\n    if (relativePoint === void 0) {\n      relativePoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    if (this.sleepState === Body.SLEEPING) {\n      this.wakeUp();\n    } // Compute point position relative to the body center\n\n\n    const r = relativePoint; // Compute produced central impulse velocity\n\n    const velo = Body_applyImpulse_velo;\n    velo.copy(impulse);\n    velo.scale(this.invMass, velo); // Add linear impulse\n\n    this.velocity.vadd(velo, this.velocity); // Compute produced rotational impulse velocity\n\n    const rotVelo = Body_applyImpulse_rotVelo;\n    r.cross(impulse, rotVelo);\n    /*\n     rotVelo.x *= this.invInertia.x;\n     rotVelo.y *= this.invInertia.y;\n     rotVelo.z *= this.invInertia.z;\n     */\n\n    this.invInertiaWorld.vmult(rotVelo, rotVelo); // Add rotational Impulse\n\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n  }\n  /**\n   * Apply locally-defined impulse to a local point in the body.\n   * @param force The force vector to apply, defined locally in the body frame.\n   * @param localPoint A local point in the body to apply the force on.\n   */\n\n\n  applyLocalImpulse(localImpulse, localPoint) {\n    if (localPoint === void 0) {\n      localPoint = new Vec3();\n    }\n\n    if (this.type !== Body.DYNAMIC) {\n      return;\n    }\n\n    const worldImpulse = Body_applyLocalImpulse_worldImpulse;\n    const relativePointWorld = Body_applyLocalImpulse_relativePoint; // Transform the force vector to world space\n\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n    this.applyImpulse(worldImpulse, relativePointWorld);\n  }\n  /**\n   * Should be called whenever you change the body shape or mass.\n   */\n\n\n  updateMassProperties() {\n    const halfExtents = Body_updateMassProperties_halfExtents;\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n    const I = this.inertia;\n    const fixed = this.fixedRotation; // Approximate with AABB box\n\n    this.updateAABB();\n    halfExtents.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2);\n    Box.calculateInertia(halfExtents, this.mass, I);\n    this.invInertia.set(I.x > 0 && !fixed ? 1.0 / I.x : 0, I.y > 0 && !fixed ? 1.0 / I.y : 0, I.z > 0 && !fixed ? 1.0 / I.z : 0);\n    this.updateInertiaWorld(true);\n  }\n  /**\n   * Get world velocity of a point in the body.\n   * @param worldPoint\n   * @param result\n   * @return The result vector.\n   */\n\n\n  getVelocityAtWorldPoint(worldPoint, result) {\n    const r = new Vec3();\n    worldPoint.vsub(this.position, r);\n    this.angularVelocity.cross(r, result);\n    this.velocity.vadd(result, result);\n    return result;\n  }\n  /**\n   * Move the body forward in time.\n   * @param dt Time step\n   * @param quatNormalize Set to true to normalize the body quaternion\n   * @param quatNormalizeFast If the quaternion should be normalized using \"fast\" quaternion normalization\n   */\n\n\n  integrate(dt, quatNormalize, quatNormalizeFast) {\n    // Save previous position\n    this.previousPosition.copy(this.position);\n    this.previousQuaternion.copy(this.quaternion);\n\n    if (!(this.type === Body.DYNAMIC || this.type === Body.KINEMATIC) || this.sleepState === Body.SLEEPING) {\n      // Only for dynamic\n      return;\n    }\n\n    const velo = this.velocity;\n    const angularVelo = this.angularVelocity;\n    const pos = this.position;\n    const force = this.force;\n    const torque = this.torque;\n    const quat = this.quaternion;\n    const invMass = this.invMass;\n    const invInertia = this.invInertiaWorld;\n    const linearFactor = this.linearFactor;\n    const iMdt = invMass * dt;\n    velo.x += force.x * iMdt * linearFactor.x;\n    velo.y += force.y * iMdt * linearFactor.y;\n    velo.z += force.z * iMdt * linearFactor.z;\n    const e = invInertia.elements;\n    const angularFactor = this.angularFactor;\n    const tx = torque.x * angularFactor.x;\n    const ty = torque.y * angularFactor.y;\n    const tz = torque.z * angularFactor.z;\n    angularVelo.x += dt * (e[0] * tx + e[1] * ty + e[2] * tz);\n    angularVelo.y += dt * (e[3] * tx + e[4] * ty + e[5] * tz);\n    angularVelo.z += dt * (e[6] * tx + e[7] * ty + e[8] * tz); // Use new velocity  - leap frog\n\n    pos.x += velo.x * dt;\n    pos.y += velo.y * dt;\n    pos.z += velo.z * dt;\n    quat.integrate(this.angularVelocity, dt, this.angularFactor, quat);\n\n    if (quatNormalize) {\n      if (quatNormalizeFast) {\n        quat.normalizeFast();\n      } else {\n        quat.normalize();\n      }\n    }\n\n    this.aabbNeedsUpdate = true; // Update world inertia\n\n    this.updateInertiaWorld();\n  }\n\n}\nBody.idCounter = 0;\nBody.COLLIDE_EVENT_NAME = 'collide';\nBody.DYNAMIC = BODY_TYPES.DYNAMIC;\nBody.STATIC = BODY_TYPES.STATIC;\nBody.KINEMATIC = BODY_TYPES.KINEMATIC;\nBody.AWAKE = BODY_SLEEP_STATES.AWAKE;\nBody.SLEEPY = BODY_SLEEP_STATES.SLEEPY;\nBody.SLEEPING = BODY_SLEEP_STATES.SLEEPING;\nBody.wakeupEvent = {\n  type: 'wakeup'\n};\nBody.sleepyEvent = {\n  type: 'sleepy'\n};\nBody.sleepEvent = {\n  type: 'sleep'\n};\nconst tmpVec = new Vec3();\nconst tmpQuat = new Quaternion();\nconst updateAABB_shapeAABB = new AABB();\nconst uiw_m1 = new Mat3();\nconst uiw_m2 = new Mat3();\nconst uiw_m3 = new Mat3();\nconst Body_applyForce_rotForce = new Vec3();\nconst Body_applyLocalForce_worldForce = new Vec3();\nconst Body_applyLocalForce_relativePointWorld = new Vec3();\nconst Body_applyImpulse_velo = new Vec3();\nconst Body_applyImpulse_rotVelo = new Vec3();\nconst Body_applyLocalImpulse_worldImpulse = new Vec3();\nconst Body_applyLocalImpulse_relativePoint = new Vec3();\nconst Body_updateMassProperties_halfExtents = new Vec3();\n\n/**\n * Base class for broadphase implementations\n * @author schteppe\n */\nclass Broadphase {\n  /**\n   * The world to search for collisions in.\n   */\n\n  /**\n   * If set to true, the broadphase uses bounding boxes for intersection tests, else it uses bounding spheres.\n   */\n\n  /**\n   * Set to true if the objects in the world moved.\n   */\n  constructor() {\n    this.world = null;\n    this.useBoundingBoxes = false;\n    this.dirty = true;\n  }\n  /**\n   * Get the collision pairs from the world\n   * @param world The world to search in\n   * @param p1 Empty array to be filled with body objects\n   * @param p2 Empty array to be filled with body objects\n   */\n\n\n  collisionPairs(world, p1, p2) {\n    throw new Error('collisionPairs not implemented for this BroadPhase class!');\n  }\n  /**\n   * Check if a body pair needs to be intersection tested at all.\n   */\n\n\n  needBroadphaseCollision(bodyA, bodyB) {\n    // Check collision filter masks\n    if ((bodyA.collisionFilterGroup & bodyB.collisionFilterMask) === 0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask) === 0) {\n      return false;\n    } // Check types\n\n\n    if (((bodyA.type & Body.STATIC) !== 0 || bodyA.sleepState === Body.SLEEPING) && ((bodyB.type & Body.STATIC) !== 0 || bodyB.sleepState === Body.SLEEPING)) {\n      // Both bodies are static or sleeping. Skip.\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Check if the bounding volumes of two bodies intersect.\n   */\n\n\n  intersectionTest(bodyA, bodyB, pairs1, pairs2) {\n    if (this.useBoundingBoxes) {\n      this.doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2);\n    } else {\n      this.doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2);\n    }\n  }\n  /**\n   * Check if the bounding spheres of two bodies are intersecting.\n   * @param pairs1 bodyA is appended to this array if intersection\n   * @param pairs2 bodyB is appended to this array if intersection\n   */\n\n\n  doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2) {\n    const r = Broadphase_collisionPairs_r;\n    bodyB.position.vsub(bodyA.position, r);\n    const boundingRadiusSum2 = (bodyA.boundingRadius + bodyB.boundingRadius) ** 2;\n    const norm2 = r.lengthSquared();\n\n    if (norm2 < boundingRadiusSum2) {\n      pairs1.push(bodyA);\n      pairs2.push(bodyB);\n    }\n  }\n  /**\n   * Check if the bounding boxes of two bodies are intersecting.\n   */\n\n\n  doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2) {\n    if (bodyA.aabbNeedsUpdate) {\n      bodyA.updateAABB();\n    }\n\n    if (bodyB.aabbNeedsUpdate) {\n      bodyB.updateAABB();\n    } // Check AABB / AABB\n\n\n    if (bodyA.aabb.overlaps(bodyB.aabb)) {\n      pairs1.push(bodyA);\n      pairs2.push(bodyB);\n    }\n  }\n  /**\n   * Removes duplicate pairs from the pair arrays.\n   */\n\n\n  makePairsUnique(pairs1, pairs2) {\n    const t = Broadphase_makePairsUnique_temp;\n    const p1 = Broadphase_makePairsUnique_p1;\n    const p2 = Broadphase_makePairsUnique_p2;\n    const N = pairs1.length;\n\n    for (let i = 0; i !== N; i++) {\n      p1[i] = pairs1[i];\n      p2[i] = pairs2[i];\n    }\n\n    pairs1.length = 0;\n    pairs2.length = 0;\n\n    for (let i = 0; i !== N; i++) {\n      const id1 = p1[i].id;\n      const id2 = p2[i].id;\n      const key = id1 < id2 ? `${id1},${id2}` : `${id2},${id1}`;\n      t[key] = i;\n      t.keys.push(key);\n    }\n\n    for (let i = 0; i !== t.keys.length; i++) {\n      const key = t.keys.pop();\n      const pairIndex = t[key];\n      pairs1.push(p1[pairIndex]);\n      pairs2.push(p2[pairIndex]);\n      delete t[key];\n    }\n  }\n  /**\n   * To be implemented by subcasses\n   */\n\n\n  setWorld(world) {}\n  /**\n   * Check if the bounding spheres of two bodies overlap.\n   */\n\n\n  static boundingSphereCheck(bodyA, bodyB) {\n    const dist = new Vec3(); // bsc_dist;\n\n    bodyA.position.vsub(bodyB.position, dist);\n    const sa = bodyA.shapes[0];\n    const sb = bodyB.shapes[0];\n    return Math.pow(sa.boundingSphereRadius + sb.boundingSphereRadius, 2) > dist.lengthSquared();\n  }\n  /**\n   * Returns all the bodies within the AABB.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n    return [];\n  }\n\n} // Temp objects\n\nconst Broadphase_collisionPairs_r = new Vec3();\nnew Vec3();\nnew Quaternion();\nnew Vec3();\nconst Broadphase_makePairsUnique_temp = {\n  keys: []\n};\nconst Broadphase_makePairsUnique_p1 = [];\nconst Broadphase_makePairsUnique_p2 = [];\nnew Vec3();\n\n/**\n * Axis aligned uniform grid broadphase.\n * @todo Needs support for more than just planes and spheres.\n */\nclass GridBroadphase extends Broadphase {\n  /**\n   * Number of boxes along x\n   */\n\n  /**\n   * Number of boxes along y\n   */\n\n  /**\n   * Number of boxes along z\n   */\n\n  /**\n   * aabbMin\n   */\n\n  /**\n   * aabbMax\n   */\n\n  /**\n   * bins\n   */\n\n  /**\n   * binLengths\n   */\n\n  /**\n   * @param nx Number of boxes along x.\n   * @param ny Number of boxes along y.\n   * @param nz Number of boxes along z.\n   */\n  constructor(aabbMin, aabbMax, nx, ny, nz) {\n    if (aabbMin === void 0) {\n      aabbMin = new Vec3(100, 100, 100);\n    }\n\n    if (aabbMax === void 0) {\n      aabbMax = new Vec3(-100, -100, -100);\n    }\n\n    if (nx === void 0) {\n      nx = 10;\n    }\n\n    if (ny === void 0) {\n      ny = 10;\n    }\n\n    if (nz === void 0) {\n      nz = 10;\n    }\n\n    super();\n    this.nx = nx;\n    this.ny = ny;\n    this.nz = nz;\n    this.aabbMin = aabbMin;\n    this.aabbMax = aabbMax;\n    const nbins = this.nx * this.ny * this.nz;\n\n    if (nbins <= 0) {\n      throw \"GridBroadphase: Each dimension's n must be >0\";\n    }\n\n    this.bins = [];\n    this.binLengths = []; // Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\n    this.bins.length = nbins;\n    this.binLengths.length = nbins;\n\n    for (let i = 0; i < nbins; i++) {\n      this.bins[i] = [];\n      this.binLengths[i] = 0;\n    }\n  }\n  /**\n   * Get all the collision pairs in the physics world\n   */\n\n\n  collisionPairs(world, pairs1, pairs2) {\n    const N = world.bodies.length;\n    const bodies = world.bodies;\n    const max = this.aabbMax;\n    const min = this.aabbMin;\n    const nx = this.nx;\n    const ny = this.ny;\n    const nz = this.nz;\n    const xstep = ny * nz;\n    const ystep = nz;\n    const zstep = 1;\n    const xmax = max.x;\n    const ymax = max.y;\n    const zmax = max.z;\n    const xmin = min.x;\n    const ymin = min.y;\n    const zmin = min.z;\n    const xmult = nx / (xmax - xmin);\n    const ymult = ny / (ymax - ymin);\n    const zmult = nz / (zmax - zmin);\n    const binsizeX = (xmax - xmin) / nx;\n    const binsizeY = (ymax - ymin) / ny;\n    const binsizeZ = (zmax - zmin) / nz;\n    const binRadius = Math.sqrt(binsizeX * binsizeX + binsizeY * binsizeY + binsizeZ * binsizeZ) * 0.5;\n    const types = Shape.types;\n    const SPHERE = types.SPHERE;\n    const PLANE = types.PLANE;\n    types.BOX;\n    types.COMPOUND;\n    types.CONVEXPOLYHEDRON;\n    const bins = this.bins;\n    const binLengths = this.binLengths;\n    const Nbins = this.bins.length; // Reset bins\n\n    for (let i = 0; i !== Nbins; i++) {\n      binLengths[i] = 0;\n    }\n\n    const ceil = Math.ceil;\n\n    function addBoxToBins(x0, y0, z0, x1, y1, z1, bi) {\n      let xoff0 = (x0 - xmin) * xmult | 0;\n      let yoff0 = (y0 - ymin) * ymult | 0;\n      let zoff0 = (z0 - zmin) * zmult | 0;\n      let xoff1 = ceil((x1 - xmin) * xmult);\n      let yoff1 = ceil((y1 - ymin) * ymult);\n      let zoff1 = ceil((z1 - zmin) * zmult);\n\n      if (xoff0 < 0) {\n        xoff0 = 0;\n      } else if (xoff0 >= nx) {\n        xoff0 = nx - 1;\n      }\n\n      if (yoff0 < 0) {\n        yoff0 = 0;\n      } else if (yoff0 >= ny) {\n        yoff0 = ny - 1;\n      }\n\n      if (zoff0 < 0) {\n        zoff0 = 0;\n      } else if (zoff0 >= nz) {\n        zoff0 = nz - 1;\n      }\n\n      if (xoff1 < 0) {\n        xoff1 = 0;\n      } else if (xoff1 >= nx) {\n        xoff1 = nx - 1;\n      }\n\n      if (yoff1 < 0) {\n        yoff1 = 0;\n      } else if (yoff1 >= ny) {\n        yoff1 = ny - 1;\n      }\n\n      if (zoff1 < 0) {\n        zoff1 = 0;\n      } else if (zoff1 >= nz) {\n        zoff1 = nz - 1;\n      }\n\n      xoff0 *= xstep;\n      yoff0 *= ystep;\n      zoff0 *= zstep;\n      xoff1 *= xstep;\n      yoff1 *= ystep;\n      zoff1 *= zstep;\n\n      for (let xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n        for (let yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n          for (let zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n            const idx = xoff + yoff + zoff;\n            bins[idx][binLengths[idx]++] = bi;\n          }\n        }\n      }\n    } // Put all bodies into the bins\n\n\n    for (let i = 0; i !== N; i++) {\n      const bi = bodies[i];\n      const si = bi.shapes[0];\n\n      switch (si.type) {\n        case SPHERE:\n          {\n            const shape = si; // Put in bin\n            // check if overlap with other bins\n\n            const x = bi.position.x;\n            const y = bi.position.y;\n            const z = bi.position.z;\n            const r = shape.radius;\n            addBoxToBins(x - r, y - r, z - r, x + r, y + r, z + r, bi);\n            break;\n          }\n\n        case PLANE:\n          {\n            const shape = si;\n\n            if (shape.worldNormalNeedsUpdate) {\n              shape.computeWorldNormal(bi.quaternion);\n            }\n\n            const planeNormal = shape.worldNormal; //Relative position from origin of plane object to the first bin\n            //Incremented as we iterate through the bins\n\n            const xreset = xmin + binsizeX * 0.5 - bi.position.x;\n            const yreset = ymin + binsizeY * 0.5 - bi.position.y;\n            const zreset = zmin + binsizeZ * 0.5 - bi.position.z;\n            const d = GridBroadphase_collisionPairs_d;\n            d.set(xreset, yreset, zreset);\n\n            for (let xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n              for (let yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n                for (let zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n                  if (d.dot(planeNormal) < binRadius) {\n                    const idx = xoff + yoff + zoff;\n                    bins[idx][binLengths[idx]++] = bi;\n                  }\n                }\n              }\n            }\n\n            break;\n          }\n\n        default:\n          {\n            if (bi.aabbNeedsUpdate) {\n              bi.updateAABB();\n            }\n\n            addBoxToBins(bi.aabb.lowerBound.x, bi.aabb.lowerBound.y, bi.aabb.lowerBound.z, bi.aabb.upperBound.x, bi.aabb.upperBound.y, bi.aabb.upperBound.z, bi);\n            break;\n          }\n      }\n    } // Check each bin\n\n\n    for (let i = 0; i !== Nbins; i++) {\n      const binLength = binLengths[i]; //Skip bins with no potential collisions\n\n      if (binLength > 1) {\n        const bin = bins[i]; // Do N^2 broadphase inside\n\n        for (let xi = 0; xi !== binLength; xi++) {\n          const bi = bin[xi];\n\n          for (let yi = 0; yi !== xi; yi++) {\n            const bj = bin[yi];\n\n            if (this.needBroadphaseCollision(bi, bj)) {\n              this.intersectionTest(bi, bj, pairs1, pairs2);\n            }\n          }\n        }\n      }\n    } //\tfor (let zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n    //\t\tconsole.log(\"layer \"+zi);\n    //\t\tfor (let yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n    //\t\t\tconst row = '';\n    //\t\t\tfor (let xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n    //\t\t\t\tconst idx = xoff + yoff + zoff;\n    //\t\t\t\trow += ' ' + binLengths[idx];\n    //\t\t\t}\n    //\t\t\tconsole.log(row);\n    //\t\t}\n    //\t}\n\n\n    this.makePairsUnique(pairs1, pairs2);\n  }\n\n}\nconst GridBroadphase_collisionPairs_d = new Vec3();\nnew Vec3();\n\n/**\n * Naive broadphase implementation, used in lack of better ones.\n *\n * The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 _(which is bad)_\n */\nclass NaiveBroadphase extends Broadphase {\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * Get all the collision pairs in the physics world\n   */\n\n\n  collisionPairs(world, pairs1, pairs2) {\n    const bodies = world.bodies;\n    const n = bodies.length;\n    let bi;\n    let bj; // Naive N^2 ftw!\n\n    for (let i = 0; i !== n; i++) {\n      for (let j = 0; j !== i; j++) {\n        bi = bodies[i];\n        bj = bodies[j];\n\n        if (!this.needBroadphaseCollision(bi, bj)) {\n          continue;\n        }\n\n        this.intersectionTest(bi, bj, pairs1, pairs2);\n      }\n    }\n  }\n  /**\n   * Returns all the bodies within an AABB.\n   * @param result An array to store resulting bodies in.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    for (let i = 0; i < world.bodies.length; i++) {\n      const b = world.bodies[i];\n\n      if (b.aabbNeedsUpdate) {\n        b.updateAABB();\n      } // Ugly hack until Body gets aabb\n\n\n      if (b.aabb.overlaps(aabb)) {\n        result.push(b);\n      }\n    }\n\n    return result;\n  }\n\n}\n\n/**\n * Storage for Ray casting data\n */\nclass RaycastResult {\n  /**\n   * rayFromWorld\n   */\n\n  /**\n   * rayToWorld\n   */\n\n  /**\n   * hitNormalWorld\n   */\n\n  /**\n   * hitPointWorld\n   */\n\n  /**\n   * hasHit\n   */\n\n  /**\n   * shape\n   */\n\n  /**\n   * body\n   */\n\n  /**\n   * The index of the hit triangle, if the hit shape was a trimesh\n   */\n\n  /**\n   * Distance to the hit. Will be set to -1 if there was no hit\n   */\n\n  /**\n   * If the ray should stop traversing the bodies\n   */\n  constructor() {\n    this.rayFromWorld = new Vec3();\n    this.rayToWorld = new Vec3();\n    this.hitNormalWorld = new Vec3();\n    this.hitPointWorld = new Vec3();\n    this.hasHit = false;\n    this.shape = null;\n    this.body = null;\n    this.hitFaceIndex = -1;\n    this.distance = -1;\n    this.shouldStop = false;\n  }\n  /**\n   * Reset all result data.\n   */\n\n\n  reset() {\n    this.rayFromWorld.setZero();\n    this.rayToWorld.setZero();\n    this.hitNormalWorld.setZero();\n    this.hitPointWorld.setZero();\n    this.hasHit = false;\n    this.shape = null;\n    this.body = null;\n    this.hitFaceIndex = -1;\n    this.distance = -1;\n    this.shouldStop = false;\n  }\n  /**\n   * abort\n   */\n\n\n  abort() {\n    this.shouldStop = true;\n  }\n  /**\n   * Set result data.\n   */\n\n\n  set(rayFromWorld, rayToWorld, hitNormalWorld, hitPointWorld, shape, body, distance) {\n    this.rayFromWorld.copy(rayFromWorld);\n    this.rayToWorld.copy(rayToWorld);\n    this.hitNormalWorld.copy(hitNormalWorld);\n    this.hitPointWorld.copy(hitPointWorld);\n    this.shape = shape;\n    this.body = body;\n    this.distance = distance;\n  }\n\n}\n\nlet _Shape$types$SPHERE, _Shape$types$PLANE, _Shape$types$BOX, _Shape$types$CYLINDER, _Shape$types$CONVEXPO, _Shape$types$HEIGHTFI, _Shape$types$TRIMESH;\n\n/**\n * RAY_MODES\n */\nconst RAY_MODES = {\n  /** CLOSEST */\n  CLOSEST: 1,\n\n  /** ANY */\n  ANY: 2,\n\n  /** ALL */\n  ALL: 4\n};\n/**\n * RayMode\n */\n\n_Shape$types$SPHERE = Shape.types.SPHERE;\n_Shape$types$PLANE = Shape.types.PLANE;\n_Shape$types$BOX = Shape.types.BOX;\n_Shape$types$CYLINDER = Shape.types.CYLINDER;\n_Shape$types$CONVEXPO = Shape.types.CONVEXPOLYHEDRON;\n_Shape$types$HEIGHTFI = Shape.types.HEIGHTFIELD;\n_Shape$types$TRIMESH = Shape.types.TRIMESH;\n\n/**\n * A line in 3D space that intersects bodies and return points.\n */\nclass Ray {\n  /**\n   * from\n   */\n\n  /**\n   * to\n   */\n\n  /**\n   * direction\n   */\n\n  /**\n   * The precision of the ray. Used when checking parallelity etc.\n   * @default 0.0001\n   */\n\n  /**\n   * Set to `false` if you don't want the Ray to take `collisionResponse` flags into account on bodies and shapes.\n   * @default true\n   */\n\n  /**\n   * If set to `true`, the ray skips any hits with normal.dot(rayDirection) < 0.\n   * @default false\n   */\n\n  /**\n   * collisionFilterMask\n   * @default -1\n   */\n\n  /**\n   * collisionFilterGroup\n   * @default -1\n   */\n\n  /**\n   * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n   * @default RAY.ANY\n   */\n\n  /**\n   * Current result object.\n   */\n\n  /**\n   * Will be set to `true` during intersectWorld() if the ray hit anything.\n   */\n\n  /**\n   * User-provided result callback. Will be used if mode is Ray.ALL.\n   */\n\n  /**\n   * CLOSEST\n   */\n\n  /**\n   * ANY\n   */\n\n  /**\n   * ALL\n   */\n  get [_Shape$types$SPHERE]() {\n    return this._intersectSphere;\n  }\n\n  get [_Shape$types$PLANE]() {\n    return this._intersectPlane;\n  }\n\n  get [_Shape$types$BOX]() {\n    return this._intersectBox;\n  }\n\n  get [_Shape$types$CYLINDER]() {\n    return this._intersectConvex;\n  }\n\n  get [_Shape$types$CONVEXPO]() {\n    return this._intersectConvex;\n  }\n\n  get [_Shape$types$HEIGHTFI]() {\n    return this._intersectHeightfield;\n  }\n\n  get [_Shape$types$TRIMESH]() {\n    return this._intersectTrimesh;\n  }\n\n  constructor(from, to) {\n    if (from === void 0) {\n      from = new Vec3();\n    }\n\n    if (to === void 0) {\n      to = new Vec3();\n    }\n\n    this.from = from.clone();\n    this.to = to.clone();\n    this.direction = new Vec3();\n    this.precision = 0.0001;\n    this.checkCollisionResponse = true;\n    this.skipBackfaces = false;\n    this.collisionFilterMask = -1;\n    this.collisionFilterGroup = -1;\n    this.mode = Ray.ANY;\n    this.result = new RaycastResult();\n    this.hasHit = false;\n\n    this.callback = result => {};\n  }\n  /**\n   * Do itersection against all bodies in the given World.\n   * @return True if the ray hit anything, otherwise false.\n   */\n\n\n  intersectWorld(world, options) {\n    this.mode = options.mode || Ray.ANY;\n    this.result = options.result || new RaycastResult();\n    this.skipBackfaces = !!options.skipBackfaces;\n    this.collisionFilterMask = typeof options.collisionFilterMask !== 'undefined' ? options.collisionFilterMask : -1;\n    this.collisionFilterGroup = typeof options.collisionFilterGroup !== 'undefined' ? options.collisionFilterGroup : -1;\n    this.checkCollisionResponse = typeof options.checkCollisionResponse !== 'undefined' ? options.checkCollisionResponse : true;\n\n    if (options.from) {\n      this.from.copy(options.from);\n    }\n\n    if (options.to) {\n      this.to.copy(options.to);\n    }\n\n    this.callback = options.callback || (() => {});\n\n    this.hasHit = false;\n    this.result.reset();\n    this.updateDirection();\n    this.getAABB(tmpAABB$1);\n    tmpArray.length = 0;\n    world.broadphase.aabbQuery(world, tmpAABB$1, tmpArray);\n    this.intersectBodies(tmpArray);\n    return this.hasHit;\n  }\n  /**\n   * Shoot a ray at a body, get back information about the hit.\n   * @deprecated @param result set the result property of the Ray instead.\n   */\n\n\n  intersectBody(body, result) {\n    if (result) {\n      this.result = result;\n      this.updateDirection();\n    }\n\n    const checkCollisionResponse = this.checkCollisionResponse;\n\n    if (checkCollisionResponse && !body.collisionResponse) {\n      return;\n    }\n\n    if ((this.collisionFilterGroup & body.collisionFilterMask) === 0 || (body.collisionFilterGroup & this.collisionFilterMask) === 0) {\n      return;\n    }\n\n    const xi = intersectBody_xi;\n    const qi = intersectBody_qi;\n\n    for (let i = 0, N = body.shapes.length; i < N; i++) {\n      const shape = body.shapes[i];\n\n      if (checkCollisionResponse && !shape.collisionResponse) {\n        continue; // Skip\n      }\n\n      body.quaternion.mult(body.shapeOrientations[i], qi);\n      body.quaternion.vmult(body.shapeOffsets[i], xi);\n      xi.vadd(body.position, xi);\n      this.intersectShape(shape, qi, xi, body);\n\n      if (this.result.shouldStop) {\n        break;\n      }\n    }\n  }\n  /**\n   * Shoot a ray at an array bodies, get back information about the hit.\n   * @param bodies An array of Body objects.\n   * @deprecated @param result set the result property of the Ray instead.\n   *\n   */\n\n\n  intersectBodies(bodies, result) {\n    if (result) {\n      this.result = result;\n      this.updateDirection();\n    }\n\n    for (let i = 0, l = bodies.length; !this.result.shouldStop && i < l; i++) {\n      this.intersectBody(bodies[i]);\n    }\n  }\n  /**\n   * Updates the direction vector.\n   */\n\n\n  updateDirection() {\n    this.to.vsub(this.from, this.direction);\n    this.direction.normalize();\n  }\n\n  intersectShape(shape, quat, position, body) {\n    const from = this.from; // Checking boundingSphere\n\n    const distance = distanceFromIntersection(from, this.direction, position);\n\n    if (distance > shape.boundingSphereRadius) {\n      return;\n    }\n\n    const intersectMethod = this[shape.type];\n\n    if (intersectMethod) {\n      intersectMethod.call(this, shape, quat, position, body, shape);\n    }\n  }\n\n  _intersectBox(box, quat, position, body, reportedShape) {\n    return this._intersectConvex(box.convexPolyhedronRepresentation, quat, position, body, reportedShape);\n  }\n\n  _intersectPlane(shape, quat, position, body, reportedShape) {\n    const from = this.from;\n    const to = this.to;\n    const direction = this.direction; // Get plane normal\n\n    const worldNormal = new Vec3(0, 0, 1);\n    quat.vmult(worldNormal, worldNormal);\n    const len = new Vec3();\n    from.vsub(position, len);\n    const planeToFrom = len.dot(worldNormal);\n    to.vsub(position, len);\n    const planeToTo = len.dot(worldNormal);\n\n    if (planeToFrom * planeToTo > 0) {\n      // \"from\" and \"to\" are on the same side of the plane... bail out\n      return;\n    }\n\n    if (from.distanceTo(to) < planeToFrom) {\n      return;\n    }\n\n    const n_dot_dir = worldNormal.dot(direction);\n\n    if (Math.abs(n_dot_dir) < this.precision) {\n      // No intersection\n      return;\n    }\n\n    const planePointToFrom = new Vec3();\n    const dir_scaled_with_t = new Vec3();\n    const hitPointWorld = new Vec3();\n    from.vsub(position, planePointToFrom);\n    const t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n    direction.scale(t, dir_scaled_with_t);\n    from.vadd(dir_scaled_with_t, hitPointWorld);\n    this.reportIntersection(worldNormal, hitPointWorld, reportedShape, body, -1);\n  }\n  /**\n   * Get the world AABB of the ray.\n   */\n\n\n  getAABB(aabb) {\n    const {\n      lowerBound,\n      upperBound\n    } = aabb;\n    const to = this.to;\n    const from = this.from;\n    lowerBound.x = Math.min(to.x, from.x);\n    lowerBound.y = Math.min(to.y, from.y);\n    lowerBound.z = Math.min(to.z, from.z);\n    upperBound.x = Math.max(to.x, from.x);\n    upperBound.y = Math.max(to.y, from.y);\n    upperBound.z = Math.max(to.z, from.z);\n  }\n\n  _intersectHeightfield(shape, quat, position, body, reportedShape) {\n    shape.data;\n    shape.elementSize; // Convert the ray to local heightfield coordinates\n\n    const localRay = intersectHeightfield_localRay; //new Ray(this.from, this.to);\n\n    localRay.from.copy(this.from);\n    localRay.to.copy(this.to);\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n    localRay.updateDirection(); // Get the index of the data points to test against\n\n    const index = intersectHeightfield_index;\n    let iMinX;\n    let iMinY;\n    let iMaxX;\n    let iMaxY; // Set to max\n\n    iMinX = iMinY = 0;\n    iMaxX = iMaxY = shape.data.length - 1;\n    const aabb = new AABB();\n    localRay.getAABB(aabb);\n    shape.getIndexOfPosition(aabb.lowerBound.x, aabb.lowerBound.y, index, true);\n    iMinX = Math.max(iMinX, index[0]);\n    iMinY = Math.max(iMinY, index[1]);\n    shape.getIndexOfPosition(aabb.upperBound.x, aabb.upperBound.y, index, true);\n    iMaxX = Math.min(iMaxX, index[0] + 1);\n    iMaxY = Math.min(iMaxY, index[1] + 1);\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        if (this.result.shouldStop) {\n          return;\n        }\n\n        shape.getAabbAtIndex(i, j, aabb);\n\n        if (!aabb.overlapsRay(localRay)) {\n          continue;\n        } // Lower triangle\n\n\n        shape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n\n        if (this.result.shouldStop) {\n          return;\n        } // Upper triangle\n\n\n        shape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n      }\n    }\n  }\n\n  _intersectSphere(sphere, quat, position, body, reportedShape) {\n    const from = this.from;\n    const to = this.to;\n    const r = sphere.radius;\n    const a = (to.x - from.x) ** 2 + (to.y - from.y) ** 2 + (to.z - from.z) ** 2;\n    const b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n    const c = (from.x - position.x) ** 2 + (from.y - position.y) ** 2 + (from.z - position.z) ** 2 - r ** 2;\n    const delta = b ** 2 - 4 * a * c;\n    const intersectionPoint = Ray_intersectSphere_intersectionPoint;\n    const normal = Ray_intersectSphere_normal;\n\n    if (delta < 0) {\n      // No intersection\n      return;\n    } else if (delta === 0) {\n      // single intersection point\n      from.lerp(to, delta, intersectionPoint);\n      intersectionPoint.vsub(position, normal);\n      normal.normalize();\n      this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n    } else {\n      const d1 = (-b - Math.sqrt(delta)) / (2 * a);\n      const d2 = (-b + Math.sqrt(delta)) / (2 * a);\n\n      if (d1 >= 0 && d1 <= 1) {\n        from.lerp(to, d1, intersectionPoint);\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n      }\n\n      if (this.result.shouldStop) {\n        return;\n      }\n\n      if (d2 >= 0 && d2 <= 1) {\n        from.lerp(to, d2, intersectionPoint);\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n      }\n    }\n  }\n\n  _intersectConvex(shape, quat, position, body, reportedShape, options) {\n    intersectConvex_minDistNormal;\n    const normal = intersectConvex_normal;\n    const vector = intersectConvex_vector;\n    intersectConvex_minDistIntersect;\n    const faceList = options && options.faceList || null; // Checking faces\n\n    const faces = shape.faces;\n    const vertices = shape.vertices;\n    const normals = shape.faceNormals;\n    const direction = this.direction;\n    const from = this.from;\n    const to = this.to;\n    const fromToDistance = from.distanceTo(to);\n    const Nfaces = faceList ? faceList.length : faces.length;\n    const result = this.result;\n\n    for (let j = 0; !result.shouldStop && j < Nfaces; j++) {\n      const fi = faceList ? faceList[j] : j;\n      const face = faces[fi];\n      const faceNormal = normals[fi];\n      const q = quat;\n      const x = position; // determine if ray intersects the plane of the face\n      // note: this works regardless of the direction of the face normal\n      // Get plane point in world coordinates...\n\n      vector.copy(vertices[face[0]]);\n      q.vmult(vector, vector);\n      vector.vadd(x, vector); // ...but make it relative to the ray from. We'll fix this later.\n\n      vector.vsub(from, vector); // Get plane normal\n\n      q.vmult(faceNormal, normal); // If this dot product is negative, we have something interesting\n\n      const dot = direction.dot(normal); // Bail out if ray and plane are parallel\n\n      if (Math.abs(dot) < this.precision) {\n        continue;\n      } // calc distance to plane\n\n\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n      if (scalar < 0) {\n        continue;\n      } // if (dot < 0) {\n      // Intersection point is from + direction * scalar\n\n\n      direction.scale(scalar, intersectPoint);\n      intersectPoint.vadd(from, intersectPoint); // a is the point we compare points b and c with.\n\n      a.copy(vertices[face[0]]);\n      q.vmult(a, a);\n      x.vadd(a, a);\n\n      for (let i = 1; !result.shouldStop && i < face.length - 1; i++) {\n        // Transform 3 vertices to world coords\n        b.copy(vertices[face[i]]);\n        c.copy(vertices[face[i + 1]]);\n        q.vmult(b, b);\n        q.vmult(c, c);\n        x.vadd(b, b);\n        x.vadd(c, c);\n        const distance = intersectPoint.distanceTo(from);\n\n        if (!(Ray.pointInTriangle(intersectPoint, a, b, c) || Ray.pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance) {\n          continue;\n        }\n\n        this.reportIntersection(normal, intersectPoint, reportedShape, body, fi);\n      } // }\n\n    }\n  }\n  /**\n   * @todo Optimize by transforming the world to local space first.\n   * @todo Use Octree lookup\n   */\n\n\n  _intersectTrimesh(mesh, quat, position, body, reportedShape, options) {\n    const normal = intersectTrimesh_normal;\n    const triangles = intersectTrimesh_triangles;\n    const treeTransform = intersectTrimesh_treeTransform;\n    const vector = intersectConvex_vector;\n    const localDirection = intersectTrimesh_localDirection;\n    const localFrom = intersectTrimesh_localFrom;\n    const localTo = intersectTrimesh_localTo;\n    const worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n    const worldNormal = intersectTrimesh_worldNormal; // Checking faces\n\n    const indices = mesh.indices;\n    mesh.vertices; // const normals = mesh.faceNormals\n\n    const from = this.from;\n    const to = this.to;\n    const direction = this.direction;\n    treeTransform.position.copy(position);\n    treeTransform.quaternion.copy(quat); // Transform ray to local space!\n\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\n    Transform.pointToLocalFrame(position, quat, to, localTo);\n    localTo.x *= mesh.scale.x;\n    localTo.y *= mesh.scale.y;\n    localTo.z *= mesh.scale.z;\n    localFrom.x *= mesh.scale.x;\n    localFrom.y *= mesh.scale.y;\n    localFrom.z *= mesh.scale.z;\n    localTo.vsub(localFrom, localDirection);\n    localDirection.normalize();\n    const fromToDistanceSquared = localFrom.distanceSquared(localTo);\n    mesh.tree.rayQuery(this, treeTransform, triangles);\n\n    for (let i = 0, N = triangles.length; !this.result.shouldStop && i !== N; i++) {\n      const trianglesIndex = triangles[i];\n      mesh.getNormal(trianglesIndex, normal); // determine if ray intersects the plane of the face\n      // note: this works regardless of the direction of the face normal\n      // Get plane point in world coordinates...\n\n      mesh.getVertex(indices[trianglesIndex * 3], a); // ...but make it relative to the ray from. We'll fix this later.\n\n      a.vsub(localFrom, vector); // If this dot product is negative, we have something interesting\n\n      const dot = localDirection.dot(normal); // Bail out if ray and plane are parallel\n      // if (Math.abs( dot ) < this.precision){\n      //     continue;\n      // }\n      // calc distance to plane\n\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n      if (scalar < 0) {\n        continue;\n      } // Intersection point is from + direction * scalar\n\n\n      localDirection.scale(scalar, intersectPoint);\n      intersectPoint.vadd(localFrom, intersectPoint); // Get triangle vertices\n\n      mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n      mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n      const squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n      if (!(Ray.pointInTriangle(intersectPoint, b, a, c) || Ray.pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared) {\n        continue;\n      } // transform intersectpoint and normal to world\n\n\n      Transform.vectorToWorldFrame(quat, normal, worldNormal);\n      Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n      this.reportIntersection(worldNormal, worldIntersectPoint, reportedShape, body, trianglesIndex);\n    }\n\n    triangles.length = 0;\n  }\n  /**\n   * @return True if the intersections should continue\n   */\n\n\n  reportIntersection(normal, hitPointWorld, shape, body, hitFaceIndex) {\n    const from = this.from;\n    const to = this.to;\n    const distance = from.distanceTo(hitPointWorld);\n    const result = this.result; // Skip back faces?\n\n    if (this.skipBackfaces && normal.dot(this.direction) > 0) {\n      return;\n    }\n\n    result.hitFaceIndex = typeof hitFaceIndex !== 'undefined' ? hitFaceIndex : -1;\n\n    switch (this.mode) {\n      case Ray.ALL:\n        this.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        result.hasHit = true;\n        this.callback(result);\n        break;\n\n      case Ray.CLOSEST:\n        // Store if closer than current closest\n        if (distance < result.distance || !result.hasHit) {\n          this.hasHit = true;\n          result.hasHit = true;\n          result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        }\n\n        break;\n\n      case Ray.ANY:\n        // Report and stop.\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n        result.shouldStop = true;\n        break;\n    }\n  }\n  /**\n   * As per \"Barycentric Technique\" as named\n   * {@link https://www.blackpawn.com/texts/pointinpoly/default.html here} but without the division\n   */\n\n\n  static pointInTriangle(p, a, b, c) {\n    c.vsub(a, v0);\n    b.vsub(a, v1);\n    p.vsub(a, v2);\n    const dot00 = v0.dot(v0);\n    const dot01 = v0.dot(v1);\n    const dot02 = v0.dot(v2);\n    const dot11 = v1.dot(v1);\n    const dot12 = v1.dot(v2);\n    let u;\n    let v;\n    return (u = dot11 * dot02 - dot01 * dot12) >= 0 && (v = dot00 * dot12 - dot01 * dot02) >= 0 && u + v < dot00 * dot11 - dot01 * dot01;\n  }\n\n}\nRay.CLOSEST = RAY_MODES.CLOSEST;\nRay.ANY = RAY_MODES.ANY;\nRay.ALL = RAY_MODES.ALL;\nconst tmpAABB$1 = new AABB();\nconst tmpArray = [];\nconst v1 = new Vec3();\nconst v2 = new Vec3();\nconst intersectBody_xi = new Vec3();\nconst intersectBody_qi = new Quaternion();\nconst intersectPoint = new Vec3();\nconst a = new Vec3();\nconst b = new Vec3();\nconst c = new Vec3();\nnew Vec3();\nnew RaycastResult();\nconst intersectConvexOptions = {\n  faceList: [0]\n};\nconst worldPillarOffset = new Vec3();\nconst intersectHeightfield_localRay = new Ray();\nconst intersectHeightfield_index = [];\nconst Ray_intersectSphere_intersectionPoint = new Vec3();\nconst Ray_intersectSphere_normal = new Vec3();\nconst intersectConvex_normal = new Vec3();\nconst intersectConvex_minDistNormal = new Vec3();\nconst intersectConvex_minDistIntersect = new Vec3();\nconst intersectConvex_vector = new Vec3();\nconst intersectTrimesh_normal = new Vec3();\nconst intersectTrimesh_localDirection = new Vec3();\nconst intersectTrimesh_localFrom = new Vec3();\nconst intersectTrimesh_localTo = new Vec3();\nconst intersectTrimesh_worldNormal = new Vec3();\nconst intersectTrimesh_worldIntersectPoint = new Vec3();\nnew AABB();\nconst intersectTrimesh_triangles = [];\nconst intersectTrimesh_treeTransform = new Transform();\nconst v0 = new Vec3();\nconst intersect = new Vec3();\n\nfunction distanceFromIntersection(from, direction, position) {\n  // v0 is vector from from to position\n  position.vsub(from, v0);\n  const dot = v0.dot(direction); // intersect = direction*dot + from\n\n  direction.scale(dot, intersect);\n  intersect.vadd(from, intersect);\n  const distance = position.distanceTo(intersect);\n  return distance;\n}\n\n/**\n * Sweep and prune broadphase along one axis.\n */\nclass SAPBroadphase extends Broadphase {\n  /**\n   * List of bodies currently in the broadphase.\n   */\n\n  /**\n   * The world to search in.\n   */\n\n  /**\n   * Axis to sort the bodies along.\n   * Set to 0 for x axis, and 1 for y axis.\n   * For best performance, pick the axis where bodies are most distributed.\n   */\n\n  /**\n   * Check if the bounds of two bodies overlap, along the given SAP axis.\n   */\n  static checkBounds(bi, bj, axisIndex) {\n    let biPos;\n    let bjPos;\n\n    if (axisIndex === 0) {\n      biPos = bi.position.x;\n      bjPos = bj.position.x;\n    } else if (axisIndex === 1) {\n      biPos = bi.position.y;\n      bjPos = bj.position.y;\n    } else if (axisIndex === 2) {\n      biPos = bi.position.z;\n      bjPos = bj.position.z;\n    }\n\n    const ri = bi.boundingRadius,\n          rj = bj.boundingRadius,\n          boundA2 = biPos + ri,\n          boundB1 = bjPos - rj;\n    return boundB1 < boundA2;\n  } // Note: these are identical, save for x/y/z lowerbound\n\n  /**\n   * insertionSortX\n   */\n\n\n  static insertionSortX(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n  /**\n   * insertionSortY\n   */\n\n\n  static insertionSortY(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n  /**\n   * insertionSortZ\n   */\n\n\n  static insertionSortZ(a) {\n    for (let i = 1, l = a.length; i < l; i++) {\n      const v = a[i];\n      let j;\n\n      for (j = i - 1; j >= 0; j--) {\n        if (a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z) {\n          break;\n        }\n\n        a[j + 1] = a[j];\n      }\n\n      a[j + 1] = v;\n    }\n\n    return a;\n  }\n\n  constructor(world) {\n    super();\n    this.axisList = [];\n    this.world = null;\n    this.axisIndex = 0;\n    const axisList = this.axisList;\n\n    this._addBodyHandler = event => {\n      axisList.push(event.body);\n    };\n\n    this._removeBodyHandler = event => {\n      const idx = axisList.indexOf(event.body);\n\n      if (idx !== -1) {\n        axisList.splice(idx, 1);\n      }\n    };\n\n    if (world) {\n      this.setWorld(world);\n    }\n  }\n  /**\n   * Change the world\n   */\n\n\n  setWorld(world) {\n    // Clear the old axis array\n    this.axisList.length = 0; // Add all bodies from the new world\n\n    for (let i = 0; i < world.bodies.length; i++) {\n      this.axisList.push(world.bodies[i]);\n    } // Remove old handlers, if any\n\n\n    world.removeEventListener('addBody', this._addBodyHandler);\n    world.removeEventListener('removeBody', this._removeBodyHandler); // Add handlers to update the list of bodies.\n\n    world.addEventListener('addBody', this._addBodyHandler);\n    world.addEventListener('removeBody', this._removeBodyHandler);\n    this.world = world;\n    this.dirty = true;\n  }\n  /**\n   * Collect all collision pairs\n   */\n\n\n  collisionPairs(world, p1, p2) {\n    const bodies = this.axisList;\n    const N = bodies.length;\n    const axisIndex = this.axisIndex;\n    let i;\n    let j;\n\n    if (this.dirty) {\n      this.sortList();\n      this.dirty = false;\n    } // Look through the list\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      for (j = i + 1; j < N; j++) {\n        const bj = bodies[j];\n\n        if (!this.needBroadphaseCollision(bi, bj)) {\n          continue;\n        }\n\n        if (!SAPBroadphase.checkBounds(bi, bj, axisIndex)) {\n          break;\n        }\n\n        this.intersectionTest(bi, bj, p1, p2);\n      }\n    }\n  }\n\n  sortList() {\n    const axisList = this.axisList;\n    const axisIndex = this.axisIndex;\n    const N = axisList.length; // Update AABBs\n\n    for (let i = 0; i !== N; i++) {\n      const bi = axisList[i];\n\n      if (bi.aabbNeedsUpdate) {\n        bi.updateAABB();\n      }\n    } // Sort the list\n\n\n    if (axisIndex === 0) {\n      SAPBroadphase.insertionSortX(axisList);\n    } else if (axisIndex === 1) {\n      SAPBroadphase.insertionSortY(axisList);\n    } else if (axisIndex === 2) {\n      SAPBroadphase.insertionSortZ(axisList);\n    }\n  }\n  /**\n   * Computes the variance of the body positions and estimates the best axis to use.\n   * Will automatically set property `axisIndex`.\n   */\n\n\n  autoDetectAxis() {\n    let sumX = 0;\n    let sumX2 = 0;\n    let sumY = 0;\n    let sumY2 = 0;\n    let sumZ = 0;\n    let sumZ2 = 0;\n    const bodies = this.axisList;\n    const N = bodies.length;\n    const invN = 1 / N;\n\n    for (let i = 0; i !== N; i++) {\n      const b = bodies[i];\n      const centerX = b.position.x;\n      sumX += centerX;\n      sumX2 += centerX * centerX;\n      const centerY = b.position.y;\n      sumY += centerY;\n      sumY2 += centerY * centerY;\n      const centerZ = b.position.z;\n      sumZ += centerZ;\n      sumZ2 += centerZ * centerZ;\n    }\n\n    const varianceX = sumX2 - sumX * sumX * invN;\n    const varianceY = sumY2 - sumY * sumY * invN;\n    const varianceZ = sumZ2 - sumZ * sumZ * invN;\n\n    if (varianceX > varianceY) {\n      if (varianceX > varianceZ) {\n        this.axisIndex = 0;\n      } else {\n        this.axisIndex = 2;\n      }\n    } else if (varianceY > varianceZ) {\n      this.axisIndex = 1;\n    } else {\n      this.axisIndex = 2;\n    }\n  }\n  /**\n   * Returns all the bodies within an AABB.\n   * @param result An array to store resulting bodies in.\n   */\n\n\n  aabbQuery(world, aabb, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    if (this.dirty) {\n      this.sortList();\n      this.dirty = false;\n    }\n\n    const axisIndex = this.axisIndex;\n    let axis = 'x';\n\n    if (axisIndex === 1) {\n      axis = 'y';\n    }\n\n    if (axisIndex === 2) {\n      axis = 'z';\n    }\n\n    const axisList = this.axisList;\n    aabb.lowerBound[axis];\n    aabb.upperBound[axis];\n\n    for (let i = 0; i < axisList.length; i++) {\n      const b = axisList[i];\n\n      if (b.aabbNeedsUpdate) {\n        b.updateAABB();\n      }\n\n      if (b.aabb.overlaps(aabb)) {\n        result.push(b);\n      }\n    }\n\n    return result;\n  }\n\n}\n\nclass Utils {\n  /**\n   * Extend an options object with default values.\n   * @param options The options object. May be falsy: in this case, a new object is created and returned.\n   * @param defaults An object containing default values.\n   * @return The modified options object.\n   */\n  static defaults(options, defaults) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    for (let key in defaults) {\n      if (!(key in options)) {\n        options[key] = defaults[key];\n      }\n    }\n\n    return options;\n  }\n\n}\n\n/**\n * Constraint base class\n */\nclass Constraint {\n  /**\n   * Equations to be solved in this constraint.\n   */\n\n  /**\n   * Body A.\n   */\n\n  /**\n   * Body B.\n   */\n\n  /**\n   * Set to false if you don't want the bodies to collide when they are connected.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      collideConnected: true,\n      wakeUpBodies: true\n    });\n    this.equations = [];\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.id = Constraint.idCounter++;\n    this.collideConnected = options.collideConnected;\n\n    if (options.wakeUpBodies) {\n      if (bodyA) {\n        bodyA.wakeUp();\n      }\n\n      if (bodyB) {\n        bodyB.wakeUp();\n      }\n    }\n  }\n  /**\n   * Update all the equations with data.\n   */\n\n\n  update() {\n    throw new Error('method update() not implmemented in this Constraint subclass!');\n  }\n  /**\n   * Enables all equations in the constraint.\n   */\n\n\n  enable() {\n    const eqs = this.equations;\n\n    for (let i = 0; i < eqs.length; i++) {\n      eqs[i].enabled = true;\n    }\n  }\n  /**\n   * Disables all equations in the constraint.\n   */\n\n\n  disable() {\n    const eqs = this.equations;\n\n    for (let i = 0; i < eqs.length; i++) {\n      eqs[i].enabled = false;\n    }\n  }\n\n}\nConstraint.idCounter = 0;\n\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n */\n\nclass JacobianElement {\n  /**\n   * spatial\n   */\n\n  /**\n   * rotational\n   */\n  constructor() {\n    this.spatial = new Vec3();\n    this.rotational = new Vec3();\n  }\n  /**\n   * Multiply with other JacobianElement\n   */\n\n\n  multiplyElement(element) {\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n  }\n  /**\n   * Multiply with two vectors\n   */\n\n\n  multiplyVectors(spatial, rotational) {\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n  }\n\n}\n\n/**\n * Equation base class.\n *\n * `a`, `b` and `eps` are {@link https://www8.cs.umu.se/kurser/5DV058/VT15/lectures/SPOOKlabnotes.pdf SPOOK} parameters that default to `0.0`. See {@link https://github.com/schteppe/cannon.js/issues/238#issuecomment-147172327 this exchange} for more details on Cannon's physics implementation.\n */\nclass Equation {\n  /**\n   * Minimum (read: negative max) force to be applied by the constraint.\n   */\n\n  /**\n   * Maximum (read: positive max) force to be applied by the constraint.\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * SPOOK parameter\n   */\n\n  /**\n   * A number, proportional to the force added to the bodies.\n   */\n  constructor(bi, bj, minForce, maxForce) {\n    if (minForce === void 0) {\n      minForce = -1e6;\n    }\n\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    this.id = Equation.idCounter++;\n    this.minForce = minForce;\n    this.maxForce = maxForce;\n    this.bi = bi;\n    this.bj = bj;\n    this.a = 0.0; // SPOOK parameter\n\n    this.b = 0.0; // SPOOK parameter\n\n    this.eps = 0.0; // SPOOK parameter\n\n    this.jacobianElementA = new JacobianElement();\n    this.jacobianElementB = new JacobianElement();\n    this.enabled = true;\n    this.multiplier = 0;\n    this.setSpookParams(1e7, 4, 1 / 60); // Set typical spook params\n  }\n  /**\n   * Recalculates a, b, and eps.\n   *\n   * The Equation constructor sets typical SPOOK parameters as such:\n   * * `stiffness` = 1e7\n   * * `relaxation` = 4\n   * * `timeStep`= 1 / 60, _note the hardcoded refresh rate._\n   */\n\n\n  setSpookParams(stiffness, relaxation, timeStep) {\n    const d = relaxation;\n    const k = stiffness;\n    const h = timeStep;\n    this.a = 4.0 / (h * (1 + 4 * d));\n    this.b = 4.0 * d / (1 + 4 * d);\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n  }\n  /**\n   * Computes the right hand side of the SPOOK equation\n   */\n\n\n  computeB(a, b, h) {\n    const GW = this.computeGW();\n    const Gq = this.computeGq();\n    const GiMf = this.computeGiMf();\n    return -Gq * a - GW * b - GiMf * h;\n  }\n  /**\n   * Computes G*q, where q are the generalized body coordinates\n   */\n\n\n  computeGq() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const xi = bi.position;\n    const xj = bj.position;\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n  }\n  /**\n   * Computes G*W, where W are the body velocities\n   */\n\n\n  computeGW() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const vi = bi.velocity;\n    const vj = bj.velocity;\n    const wi = bi.angularVelocity;\n    const wj = bj.angularVelocity;\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n  }\n  /**\n   * Computes G*Wlambda, where W are the body velocities\n   */\n\n\n  computeGWlambda() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const vi = bi.vlambda;\n    const vj = bj.vlambda;\n    const wi = bi.wlambda;\n    const wj = bj.wlambda;\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n  }\n  /**\n   * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n   */\n\n\n  computeGiMf() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const fi = bi.force;\n    const ti = bi.torque;\n    const fj = bj.force;\n    const tj = bj.torque;\n    const invMassi = bi.invMassSolve;\n    const invMassj = bj.invMassSolve;\n    fi.scale(invMassi, iMfi);\n    fj.scale(invMassj, iMfj);\n    bi.invInertiaWorldSolve.vmult(ti, invIi_vmult_taui);\n    bj.invInertiaWorldSolve.vmult(tj, invIj_vmult_tauj);\n    return GA.multiplyVectors(iMfi, invIi_vmult_taui) + GB.multiplyVectors(iMfj, invIj_vmult_tauj);\n  }\n  /**\n   * Computes G*inv(M)*G'\n   */\n\n\n  computeGiMGt() {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const invMassi = bi.invMassSolve;\n    const invMassj = bj.invMassSolve;\n    const invIi = bi.invInertiaWorldSolve;\n    const invIj = bj.invInertiaWorldSolve;\n    let result = invMassi + invMassj;\n    invIi.vmult(GA.rotational, tmp);\n    result += tmp.dot(GA.rotational);\n    invIj.vmult(GB.rotational, tmp);\n    result += tmp.dot(GB.rotational);\n    return result;\n  }\n  /**\n   * Add constraint velocity to the bodies.\n   */\n\n\n  addToWlambda(deltalambda) {\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const bi = this.bi;\n    const bj = this.bj;\n    const temp = addToWlambda_temp; // Add to linear velocity\n    // v_lambda += inv(M) * delta_lamba * G\n\n    bi.vlambda.addScaledVector(bi.invMassSolve * deltalambda, GA.spatial, bi.vlambda);\n    bj.vlambda.addScaledVector(bj.invMassSolve * deltalambda, GB.spatial, bj.vlambda); // Add to angular velocity\n\n    bi.invInertiaWorldSolve.vmult(GA.rotational, temp);\n    bi.wlambda.addScaledVector(deltalambda, temp, bi.wlambda);\n    bj.invInertiaWorldSolve.vmult(GB.rotational, temp);\n    bj.wlambda.addScaledVector(deltalambda, temp, bj.wlambda);\n  }\n  /**\n   * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n   */\n\n\n  computeC() {\n    return this.computeGiMGt() + this.eps;\n  }\n\n}\nEquation.idCounter = 0;\nconst iMfi = new Vec3();\nconst iMfj = new Vec3();\nconst invIi_vmult_taui = new Vec3();\nconst invIj_vmult_tauj = new Vec3();\nconst tmp = new Vec3();\nconst addToWlambda_temp = new Vec3();\n\n/**\n * Contact/non-penetration constraint equation\n */\nclass ContactEquation extends Equation {\n  /**\n   * \"bounciness\": u1 = -e*u0\n   */\n\n  /**\n   * World-oriented vector that goes from the center of bi to the contact point.\n   */\n\n  /**\n   * World-oriented vector that starts in body j position and goes to the contact point.\n   */\n\n  /**\n   * Contact normal, pointing out of body i.\n   */\n  constructor(bodyA, bodyB, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB, 0, maxForce);\n    this.restitution = 0.0;\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.ni = new Vec3();\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const bi = this.bi;\n    const bj = this.bj;\n    const ri = this.ri;\n    const rj = this.rj;\n    const rixn = ContactEquation_computeB_temp1;\n    const rjxn = ContactEquation_computeB_temp2;\n    const vi = bi.velocity;\n    const wi = bi.angularVelocity;\n    bi.force;\n    bi.torque;\n    const vj = bj.velocity;\n    const wj = bj.angularVelocity;\n    bj.force;\n    bj.torque;\n    const penetrationVec = ContactEquation_computeB_temp3;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    const n = this.ni; // Caluclate cross products\n\n    ri.cross(n, rixn);\n    rj.cross(n, rjxn); // g = xj+rj -(xi+ri)\n    // G = [ -ni  -rixn  ni  rjxn ]\n\n    n.negate(GA.spatial);\n    rixn.negate(GA.rotational);\n    GB.spatial.copy(n);\n    GB.rotational.copy(rjxn); // Calculate the penetration vector\n\n    penetrationVec.copy(bj.position);\n    penetrationVec.vadd(rj, penetrationVec);\n    penetrationVec.vsub(bi.position, penetrationVec);\n    penetrationVec.vsub(ri, penetrationVec);\n    const g = n.dot(penetrationVec); // Compute iteration\n\n    const ePlusOne = this.restitution + 1;\n    const GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n  /**\n   * Get the current relative velocity in the contact point.\n   */\n\n\n  getImpactVelocityAlongNormal() {\n    const vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n    const vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n    const xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n    const xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n    const relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n    this.bi.position.vadd(this.ri, xi);\n    this.bj.position.vadd(this.rj, xj);\n    this.bi.getVelocityAtWorldPoint(xi, vi);\n    this.bj.getVelocityAtWorldPoint(xj, vj);\n    vi.vsub(vj, relVel);\n    return this.ni.dot(relVel);\n  }\n\n}\nconst ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\n\nconst ContactEquation_computeB_temp2 = new Vec3();\nconst ContactEquation_computeB_temp3 = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nconst ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n\n/**\n * Connects two bodies at given offset points.\n * @example\n *     const bodyA = new Body({ mass: 1 })\n *     const bodyB = new Body({ mass: 1 })\n *     bodyA.position.set(-1, 0, 0)\n *     bodyB.position.set(1, 0, 0)\n *     bodyA.addShape(shapeA)\n *     bodyB.addShape(shapeB)\n *     world.addBody(bodyA)\n *     world.addBody(bodyB)\n *     const localPivotA = new Vec3(1, 0, 0)\n *     const localPivotB = new Vec3(-1, 0, 0)\n *     const constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB)\n *     world.addConstraint(constraint)\n */\nclass PointToPointConstraint extends Constraint {\n  /**\n   * Pivot, defined locally in bodyA.\n   */\n\n  /**\n   * Pivot, defined locally in bodyB.\n   */\n\n  /**\n   * @param pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n   * @param bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n   * @param pivotB The point relative to the center of mass of bodyB which bodyB is constrained to.\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\n   */\n  constructor(bodyA, pivotA, bodyB, pivotB, maxForce) {\n    if (pivotA === void 0) {\n      pivotA = new Vec3();\n    }\n\n    if (pivotB === void 0) {\n      pivotB = new Vec3();\n    }\n\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB);\n    this.pivotA = pivotA.clone();\n    this.pivotB = pivotB.clone();\n    const x = this.equationX = new ContactEquation(bodyA, bodyB);\n    const y = this.equationY = new ContactEquation(bodyA, bodyB);\n    const z = this.equationZ = new ContactEquation(bodyA, bodyB); // Equations to be fed to the solver\n\n    this.equations.push(x, y, z); // Make the equations bidirectional\n\n    x.minForce = y.minForce = z.minForce = -maxForce;\n    x.maxForce = y.maxForce = z.maxForce = maxForce;\n    x.ni.set(1, 0, 0);\n    y.ni.set(0, 1, 0);\n    z.ni.set(0, 0, 1);\n  }\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const x = this.equationX;\n    const y = this.equationY;\n    const z = this.equationZ; // Rotate the pivots to world space\n\n    bodyA.quaternion.vmult(this.pivotA, x.ri);\n    bodyB.quaternion.vmult(this.pivotB, x.rj);\n    y.ri.copy(x.ri);\n    y.rj.copy(x.rj);\n    z.ri.copy(x.ri);\n    z.rj.copy(x.rj);\n  }\n\n}\n\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n */\nclass ConeEquation extends Equation {\n  /**\n   * Local axis in A\n   */\n\n  /**\n   * Local axis in B\n   */\n\n  /**\n   * The \"cone angle\" to keep\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const ni = this.axisA;\n    const nj = this.axisB;\n    const nixnj = tmpVec1$2;\n    const njxni = tmpVec2$2;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // Caluclate cross products\n\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni); // The angle between two vector is:\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n    // g = a * b\n    // gdot = (b x a) * wi + (a x b) * wj\n    // G = [0 bxa 0 axb]\n    // W = [vi wi vj wj]\n\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n    const g = Math.cos(this.angle) - ni.dot(nj);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst tmpVec1$2 = new Vec3();\nconst tmpVec2$2 = new Vec3();\n\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n */\nclass RotationalEquation extends Equation {\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * maxAngle\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n    this.maxAngle = Math.PI / 2;\n  }\n\n  computeB(h) {\n    const a = this.a;\n    const b = this.b;\n    const ni = this.axisA;\n    const nj = this.axisB;\n    const nixnj = tmpVec1$1;\n    const njxni = tmpVec2$1;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // Caluclate cross products\n\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni); // g = ni * nj\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\n    // G = [0 njxni 0 nixnj]\n    // W = [vi wi vj wj]\n\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n    const g = Math.cos(this.maxAngle) - ni.dot(nj);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -g * a - GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst tmpVec1$1 = new Vec3();\nconst tmpVec2$1 = new Vec3();\n\n/**\n * A Cone Twist constraint, useful for ragdolls.\n */\nclass ConeTwistConstraint extends PointToPointConstraint {\n  /**\n   * The axis direction for the constraint of the body A.\n   */\n\n  /**\n   * The axis direction for the constraint of the body B.\n   */\n\n  /**\n   * The aperture angle of the cone.\n   */\n\n  /**\n   * The twist angle of the joint.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n    this.collideConnected = !!options.collideConnected;\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n    const c = this.coneEquation = new ConeEquation(bodyA, bodyB, options);\n    const t = this.twistEquation = new RotationalEquation(bodyA, bodyB, options);\n    this.twistAngle = typeof options.twistAngle !== 'undefined' ? options.twistAngle : 0; // Make the cone equation push the bodies toward the cone axis, not outward\n\n    c.maxForce = 0;\n    c.minForce = -maxForce; // Make the twist equation add torque toward the initial position\n\n    t.maxForce = 0;\n    t.minForce = -maxForce;\n    this.equations.push(c, t);\n  }\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const cone = this.coneEquation;\n    const twist = this.twistEquation;\n    super.update(); // Update the axes to the cone constraint\n\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB); // Update the world axes in the twist constraint\n\n    this.axisA.tangents(twist.axisA, twist.axisA);\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n    this.axisB.tangents(twist.axisB, twist.axisB);\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n    cone.angle = this.angle;\n    twist.maxAngle = this.twistAngle;\n  }\n\n}\nnew Vec3();\nnew Vec3();\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n */\nclass DistanceConstraint extends Constraint {\n  /**\n   * The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n   */\n\n  /**\n   * @param distance The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB.\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\n   */\n  constructor(bodyA, bodyB, distance, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB);\n\n    if (typeof distance === 'undefined') {\n      distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    this.distance = distance;\n    const eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq); // Make it bidirectional\n\n    eq.minForce = -maxForce;\n    eq.maxForce = maxForce;\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const eq = this.distanceEquation;\n    const halfDist = this.distance * 0.5;\n    const normal = eq.ni;\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.scale(halfDist, eq.ri);\n    normal.scale(-halfDist, eq.rj);\n  }\n\n}\n\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n */\nclass LockConstraint extends PointToPointConstraint {\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n    const pivotA = new Vec3();\n    const pivotB = new Vec3();\n    const halfWay = new Vec3();\n    bodyA.position.vadd(bodyB.position, halfWay);\n    halfWay.scale(0.5, halfWay);\n    bodyB.pointToLocalFrame(halfWay, pivotB);\n    bodyA.pointToLocalFrame(halfWay, pivotA); // The point-to-point constraint will keep a point shared between the bodies\n\n    super(bodyA, pivotA, bodyB, pivotB, maxForce); // Store initial rotation of the bodies as unit vectors in the local body spaces\n\n    this.xA = bodyA.vectorToLocalFrame(Vec3.UNIT_X);\n    this.xB = bodyB.vectorToLocalFrame(Vec3.UNIT_X);\n    this.yA = bodyA.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.yB = bodyB.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.zA = bodyA.vectorToLocalFrame(Vec3.UNIT_Z);\n    this.zB = bodyB.vectorToLocalFrame(Vec3.UNIT_Z); // ...and the following rotational equations will keep all rotational DOF's in place\n\n    const r1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n    const r2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n    const r3 = this.rotationalEquation3 = new RotationalEquation(bodyA, bodyB, options);\n    this.equations.push(r1, r2, r3);\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    this.motorEquation;\n    const r1 = this.rotationalEquation1;\n    const r2 = this.rotationalEquation2;\n    const r3 = this.rotationalEquation3;\n    LockConstraint_update_tmpVec1;\n    LockConstraint_update_tmpVec2;\n    super.update(); // These vector pairs must be orthogonal\n\n    bodyA.vectorToWorldFrame(this.xA, r1.axisA);\n    bodyB.vectorToWorldFrame(this.yB, r1.axisB);\n    bodyA.vectorToWorldFrame(this.yA, r2.axisA);\n    bodyB.vectorToWorldFrame(this.zB, r2.axisB);\n    bodyA.vectorToWorldFrame(this.zA, r3.axisA);\n    bodyB.vectorToWorldFrame(this.xB, r3.axisB);\n  }\n\n}\nconst LockConstraint_update_tmpVec1 = new Vec3();\nconst LockConstraint_update_tmpVec2 = new Vec3();\n\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n */\nclass RotationalMotorEquation extends Equation {\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * World oriented rotational axis.\n   */\n\n  /**\n   * Motor velocity.\n   */\n  constructor(bodyA, bodyB, maxForce) {\n    if (maxForce === void 0) {\n      maxForce = 1e6;\n    }\n\n    super(bodyA, bodyB, -maxForce, maxForce);\n    this.axisA = new Vec3();\n    this.axisB = new Vec3();\n    this.targetVelocity = 0;\n  }\n\n  computeB(h) {\n    this.a;\n    const b = this.b;\n    this.bi;\n    this.bj;\n    const axisA = this.axisA;\n    const axisB = this.axisB;\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB; // g = 0\n    // gdot = axisA * wi - axisB * wj\n    // gdot = G * W = G * [vi wi vj wj]\n    // =>\n    // G = [0 axisA 0 -axisB]\n\n    GA.rotational.copy(axisA);\n    axisB.negate(GB.rotational);\n    const GW = this.computeGW() - this.targetVelocity;\n    const GiMf = this.computeGiMf();\n    const B = -GW * b - h * GiMf;\n    return B;\n  }\n\n}\n\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n */\nclass HingeConstraint extends PointToPointConstraint {\n  /**\n   * Rotation axis, defined locally in bodyA.\n   */\n\n  /**\n   * Rotation axis, defined locally in bodyB.\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\n    const axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    axisA.normalize();\n    const axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1, 0, 0);\n    axisB.normalize();\n    this.collideConnected = !!options.collideConnected;\n    const rotational1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n    const rotational2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n    const motor = this.motorEquation = new RotationalMotorEquation(bodyA, bodyB, maxForce);\n    motor.enabled = false; // Not enabled by default\n    // Equations to be fed to the solver\n\n    this.equations.push(rotational1, rotational2, motor);\n  }\n  /**\n   * enableMotor\n   */\n\n\n  enableMotor() {\n    this.motorEquation.enabled = true;\n  }\n  /**\n   * disableMotor\n   */\n\n\n  disableMotor() {\n    this.motorEquation.enabled = false;\n  }\n  /**\n   * setMotorSpeed\n   */\n\n\n  setMotorSpeed(speed) {\n    this.motorEquation.targetVelocity = speed;\n  }\n  /**\n   * setMotorMaxForce\n   */\n\n\n  setMotorMaxForce(maxForce) {\n    this.motorEquation.maxForce = maxForce;\n    this.motorEquation.minForce = -maxForce;\n  }\n  /**\n   * update\n   */\n\n\n  update() {\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const motor = this.motorEquation;\n    const r1 = this.rotationalEquation1;\n    const r2 = this.rotationalEquation2;\n    const worldAxisA = HingeConstraint_update_tmpVec1;\n    const worldAxisB = HingeConstraint_update_tmpVec2;\n    const axisA = this.axisA;\n    const axisB = this.axisB;\n    super.update(); // Get world axes\n\n    bodyA.quaternion.vmult(axisA, worldAxisA);\n    bodyB.quaternion.vmult(axisB, worldAxisB);\n    worldAxisA.tangents(r1.axisA, r2.axisA);\n    r1.axisB.copy(worldAxisB);\n    r2.axisB.copy(worldAxisB);\n\n    if (this.motorEquation.enabled) {\n      bodyA.quaternion.vmult(this.axisA, motor.axisA);\n      bodyB.quaternion.vmult(this.axisB, motor.axisB);\n    }\n  }\n\n}\nconst HingeConstraint_update_tmpVec1 = new Vec3();\nconst HingeConstraint_update_tmpVec2 = new Vec3();\n\n/**\n * Constrains the slipping in a contact along a tangent\n */\nclass FrictionEquation extends Equation {\n  // Tangent\n\n  /**\n   * @param slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n   */\n  constructor(bodyA, bodyB, slipForce) {\n    super(bodyA, bodyB, -slipForce, slipForce);\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.t = new Vec3();\n  }\n\n  computeB(h) {\n    this.a;\n    const b = this.b;\n    this.bi;\n    this.bj;\n    const ri = this.ri;\n    const rj = this.rj;\n    const rixt = FrictionEquation_computeB_temp1;\n    const rjxt = FrictionEquation_computeB_temp2;\n    const t = this.t; // Caluclate cross products\n\n    ri.cross(t, rixt);\n    rj.cross(t, rjxt); // G = [-t -rixt t rjxt]\n    // And remember, this is a pure velocity constraint, g is always zero!\n\n    const GA = this.jacobianElementA;\n    const GB = this.jacobianElementB;\n    t.negate(GA.spatial);\n    rixt.negate(GA.rotational);\n    GB.spatial.copy(t);\n    GB.rotational.copy(rjxt);\n    const GW = this.computeGW();\n    const GiMf = this.computeGiMf();\n    const B = -GW * b - h * GiMf;\n    return B;\n  }\n\n}\nconst FrictionEquation_computeB_temp1 = new Vec3();\nconst FrictionEquation_computeB_temp2 = new Vec3();\n\n/**\n * Defines what happens when two materials meet.\n * @todo Refactor materials to materialA and materialB\n */\nclass ContactMaterial {\n  /**\n   * Identifier of this material.\n   */\n\n  /**\n   * Participating materials.\n   */\n\n  /**\n   * Friction coefficient.\n   * @default 0.3\n   */\n\n  /**\n   * Restitution coefficient.\n   * @default 0.3\n   */\n\n  /**\n   * Stiffness of the produced contact equations.\n   * @default 1e7\n   */\n\n  /**\n   * Relaxation time of the produced contact equations.\n   * @default 3\n   */\n\n  /**\n   * Stiffness of the produced friction equations.\n   * @default 1e7\n   */\n\n  /**\n   * Relaxation time of the produced friction equations\n   * @default 3\n   */\n  constructor(m1, m2, options) {\n    options = Utils.defaults(options, {\n      friction: 0.3,\n      restitution: 0.3,\n      contactEquationStiffness: 1e7,\n      contactEquationRelaxation: 3,\n      frictionEquationStiffness: 1e7,\n      frictionEquationRelaxation: 3\n    });\n    this.id = ContactMaterial.idCounter++;\n    this.materials = [m1, m2];\n    this.friction = options.friction;\n    this.restitution = options.restitution;\n    this.contactEquationStiffness = options.contactEquationStiffness;\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n  }\n\n}\nContactMaterial.idCounter = 0;\n\n/**\n * Defines a physics material.\n */\nclass Material {\n  /**\n   * Material name.\n   * If options is a string, name will be set to that string.\n   * @todo Deprecate this\n   */\n\n  /** Material id. */\n\n  /**\n   * Friction for this material.\n   * If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\n   */\n\n  /**\n   * Restitution for this material.\n   * If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    let name = ''; // Backwards compatibility fix\n\n    if (typeof options === 'string') {\n      //console.warn(`Passing a string to MaterialOptions is deprecated, and has no effect`)\n      name = options;\n      options = {};\n    }\n\n    this.name = name;\n    this.id = Material.idCounter++;\n    this.friction = typeof options.friction !== 'undefined' ? options.friction : -1;\n    this.restitution = typeof options.restitution !== 'undefined' ? options.restitution : -1;\n  }\n\n}\nMaterial.idCounter = 0;\n\n/**\n * A spring, connecting two bodies.\n * @example\n *     const spring = new Spring(boxBody, sphereBody, {\n *       restLength: 0,\n *       stiffness: 50,\n *       damping: 1,\n *     })\n *\n *     // Compute the force after each step\n *     world.addEventListener('postStep', (event) => {\n *       spring.applyForce()\n *     })\n */\nclass Spring {\n  /**\n   * Rest length of the spring. A number > 0.\n   * @default 1\n   */\n\n  /**\n   * Stiffness of the spring. A number >= 0.\n   * @default 100\n   */\n\n  /**\n   * Damping of the spring. A number >= 0.\n   * @default 1\n   */\n\n  /**\n   * First connected body.\n   */\n\n  /**\n   * Second connected body.\n   */\n\n  /**\n   * Anchor for bodyA in local bodyA coordinates.\n   * Where to hook the spring to body A, in local body coordinates.\n   * @default new Vec3()\n   */\n\n  /**\n   * Anchor for bodyB in local bodyB coordinates.\n   * Where to hook the spring to body B, in local body coordinates.\n   * @default new Vec3()\n   */\n  constructor(bodyA, bodyB, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.restLength = typeof options.restLength === 'number' ? options.restLength : 1;\n    this.stiffness = options.stiffness || 100;\n    this.damping = options.damping || 1;\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.localAnchorA = new Vec3();\n    this.localAnchorB = new Vec3();\n\n    if (options.localAnchorA) {\n      this.localAnchorA.copy(options.localAnchorA);\n    }\n\n    if (options.localAnchorB) {\n      this.localAnchorB.copy(options.localAnchorB);\n    }\n\n    if (options.worldAnchorA) {\n      this.setWorldAnchorA(options.worldAnchorA);\n    }\n\n    if (options.worldAnchorB) {\n      this.setWorldAnchorB(options.worldAnchorB);\n    }\n  }\n  /**\n   * Set the anchor point on body A, using world coordinates.\n   */\n\n\n  setWorldAnchorA(worldAnchorA) {\n    this.bodyA.pointToLocalFrame(worldAnchorA, this.localAnchorA);\n  }\n  /**\n   * Set the anchor point on body B, using world coordinates.\n   */\n\n\n  setWorldAnchorB(worldAnchorB) {\n    this.bodyB.pointToLocalFrame(worldAnchorB, this.localAnchorB);\n  }\n  /**\n   * Get the anchor point on body A, in world coordinates.\n   * @param result The vector to store the result in.\n   */\n\n\n  getWorldAnchorA(result) {\n    this.bodyA.pointToWorldFrame(this.localAnchorA, result);\n  }\n  /**\n   * Get the anchor point on body B, in world coordinates.\n   * @param result The vector to store the result in.\n   */\n\n\n  getWorldAnchorB(result) {\n    this.bodyB.pointToWorldFrame(this.localAnchorB, result);\n  }\n  /**\n   * Apply the spring force to the connected bodies.\n   */\n\n\n  applyForce() {\n    const k = this.stiffness;\n    const d = this.damping;\n    const l = this.restLength;\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const r = applyForce_r;\n    const r_unit = applyForce_r_unit;\n    const u = applyForce_u;\n    const f = applyForce_f;\n    const tmp = applyForce_tmp;\n    const worldAnchorA = applyForce_worldAnchorA;\n    const worldAnchorB = applyForce_worldAnchorB;\n    const ri = applyForce_ri;\n    const rj = applyForce_rj;\n    const ri_x_f = applyForce_ri_x_f;\n    const rj_x_f = applyForce_rj_x_f; // Get world anchors\n\n    this.getWorldAnchorA(worldAnchorA);\n    this.getWorldAnchorB(worldAnchorB); // Get offset points\n\n    worldAnchorA.vsub(bodyA.position, ri);\n    worldAnchorB.vsub(bodyB.position, rj); // Compute distance vector between world anchor points\n\n    worldAnchorB.vsub(worldAnchorA, r);\n    const rlen = r.length();\n    r_unit.copy(r);\n    r_unit.normalize(); // Compute relative velocity of the anchor points, u\n\n    bodyB.velocity.vsub(bodyA.velocity, u); // Add rotational velocity\n\n    bodyB.angularVelocity.cross(rj, tmp);\n    u.vadd(tmp, u);\n    bodyA.angularVelocity.cross(ri, tmp);\n    u.vsub(tmp, u); // F = - k * ( x - L ) - D * ( u )\n\n    r_unit.scale(-k * (rlen - l) - d * u.dot(r_unit), f); // Add forces to bodies\n\n    bodyA.force.vsub(f, bodyA.force);\n    bodyB.force.vadd(f, bodyB.force); // Angular force\n\n    ri.cross(f, ri_x_f);\n    rj.cross(f, rj_x_f);\n    bodyA.torque.vsub(ri_x_f, bodyA.torque);\n    bodyB.torque.vadd(rj_x_f, bodyB.torque);\n  }\n\n}\nconst applyForce_r = new Vec3();\nconst applyForce_r_unit = new Vec3();\nconst applyForce_u = new Vec3();\nconst applyForce_f = new Vec3();\nconst applyForce_worldAnchorA = new Vec3();\nconst applyForce_worldAnchorB = new Vec3();\nconst applyForce_ri = new Vec3();\nconst applyForce_rj = new Vec3();\nconst applyForce_ri_x_f = new Vec3();\nconst applyForce_rj_x_f = new Vec3();\nconst applyForce_tmp = new Vec3();\n\n/**\n * WheelInfo\n */\nclass WheelInfo {\n  /**\n   * Max travel distance of the suspension, in meters.\n   * @default 1\n   */\n\n  /**\n   * Speed to apply to the wheel rotation when the wheel is sliding.\n   * @default -0.1\n   */\n\n  /**\n   * If the customSlidingRotationalSpeed should be used.\n   * @default false\n   */\n\n  /**\n   * sliding\n   */\n\n  /**\n   * Connection point, defined locally in the chassis body frame.\n   */\n\n  /**\n   * chassisConnectionPointWorld\n   */\n\n  /**\n   * directionLocal\n   */\n\n  /**\n   * directionWorld\n   */\n\n  /**\n   * axleLocal\n   */\n\n  /**\n   * axleWorld\n   */\n\n  /**\n   * suspensionRestLength\n   * @default 1\n   */\n\n  /**\n   * suspensionMaxLength\n   * @default 2\n   */\n\n  /**\n   * radius\n   * @default 1\n   */\n\n  /**\n   * suspensionStiffness\n   * @default 100\n   */\n\n  /**\n   * dampingCompression\n   * @default 10\n   */\n\n  /**\n   * dampingRelaxation\n   * @default 10\n   */\n\n  /**\n   * frictionSlip\n   * @default 10.5\n   */\n\n  /** forwardAcceleration */\n\n  /** sideAcceleration */\n\n  /**\n   * steering\n   * @default 0\n   */\n\n  /**\n   * Rotation value, in radians.\n   * @default 0\n   */\n\n  /**\n   * deltaRotation\n   * @default 0\n   */\n\n  /**\n   * rollInfluence\n   * @default 0.01\n   */\n\n  /**\n   * maxSuspensionForce\n   */\n\n  /**\n   * engineForce\n   */\n\n  /**\n   * brake\n   */\n\n  /**\n   * isFrontWheel\n   * @default true\n   */\n\n  /**\n   * clippedInvContactDotSuspension\n   * @default 1\n   */\n\n  /**\n   * suspensionRelativeVelocity\n   * @default 0\n   */\n\n  /**\n   * suspensionForce\n   * @default 0\n   */\n\n  /**\n   * slipInfo\n   */\n\n  /**\n   * skidInfo\n   * @default 0\n   */\n\n  /**\n   * suspensionLength\n   * @default 0\n   */\n\n  /**\n   * sideImpulse\n   */\n\n  /**\n   * forwardImpulse\n   */\n\n  /**\n   * The result from raycasting.\n   */\n\n  /**\n   * Wheel world transform.\n   */\n\n  /**\n   * isInContact\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      chassisConnectionPointLocal: new Vec3(),\n      chassisConnectionPointWorld: new Vec3(),\n      directionLocal: new Vec3(),\n      directionWorld: new Vec3(),\n      axleLocal: new Vec3(),\n      axleWorld: new Vec3(),\n      suspensionRestLength: 1,\n      suspensionMaxLength: 2,\n      radius: 1,\n      suspensionStiffness: 100,\n      dampingCompression: 10,\n      dampingRelaxation: 10,\n      frictionSlip: 10.5,\n      forwardAcceleration: 1,\n      sideAcceleration: 1,\n      steering: 0,\n      rotation: 0,\n      deltaRotation: 0,\n      rollInfluence: 0.01,\n      maxSuspensionForce: Number.MAX_VALUE,\n      isFrontWheel: true,\n      clippedInvContactDotSuspension: 1,\n      suspensionRelativeVelocity: 0,\n      suspensionForce: 0,\n      slipInfo: 0,\n      skidInfo: 0,\n      suspensionLength: 0,\n      maxSuspensionTravel: 1,\n      useCustomSlidingRotationalSpeed: false,\n      customSlidingRotationalSpeed: -0.1\n    });\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n    this.sliding = false;\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n    this.directionLocal = options.directionLocal.clone();\n    this.directionWorld = options.directionWorld.clone();\n    this.axleLocal = options.axleLocal.clone();\n    this.axleWorld = options.axleWorld.clone();\n    this.suspensionRestLength = options.suspensionRestLength;\n    this.suspensionMaxLength = options.suspensionMaxLength;\n    this.radius = options.radius;\n    this.suspensionStiffness = options.suspensionStiffness;\n    this.dampingCompression = options.dampingCompression;\n    this.dampingRelaxation = options.dampingRelaxation;\n    this.frictionSlip = options.frictionSlip;\n    this.forwardAcceleration = options.forwardAcceleration;\n    this.sideAcceleration = options.sideAcceleration;\n    this.steering = 0;\n    this.rotation = 0;\n    this.deltaRotation = 0;\n    this.rollInfluence = options.rollInfluence;\n    this.maxSuspensionForce = options.maxSuspensionForce;\n    this.engineForce = 0;\n    this.brake = 0;\n    this.isFrontWheel = options.isFrontWheel;\n    this.clippedInvContactDotSuspension = 1;\n    this.suspensionRelativeVelocity = 0;\n    this.suspensionForce = 0;\n    this.slipInfo = 0;\n    this.skidInfo = 0;\n    this.suspensionLength = 0;\n    this.sideImpulse = 0;\n    this.forwardImpulse = 0;\n    this.raycastResult = new RaycastResult();\n    this.worldTransform = new Transform();\n    this.isInContact = false;\n  }\n\n  updateWheel(chassis) {\n    const raycastResult = this.raycastResult;\n\n    if (this.isInContact) {\n      const project = raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n      raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n      chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n      const projVel = raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n      if (project >= -0.1) {\n        this.suspensionRelativeVelocity = 0.0;\n        this.clippedInvContactDotSuspension = 1.0 / 0.1;\n      } else {\n        const inv = -1 / project;\n        this.suspensionRelativeVelocity = projVel * inv;\n        this.clippedInvContactDotSuspension = inv;\n      }\n    } else {\n      // Not in contact : position wheel in a nice (rest length) position\n      raycastResult.suspensionLength = this.suspensionRestLength;\n      this.suspensionRelativeVelocity = 0.0;\n      raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n      this.clippedInvContactDotSuspension = 1.0;\n    }\n  }\n\n}\nconst chassis_velocity_at_contactPoint = new Vec3();\nconst relpos = new Vec3();\n\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n */\nclass RaycastVehicle {\n  /** The car chassis body. */\n\n  /** The wheels. */\n\n  /** Will be set to true if the car is sliding. */\n\n  /** Index of the right axis. x=0, y=1, z=2 */\n\n  /** Index of the forward axis. x=0, y=1, z=2 */\n\n  /** Index of the up axis. x=0, y=1, z=2 */\n\n  /** The constraints. */\n\n  /** Optional pre-step callback. */\n\n  /** Number of wheels on the ground. */\n  constructor(options) {\n    this.chassisBody = options.chassisBody;\n    this.wheelInfos = [];\n    this.sliding = false;\n    this.world = null;\n    this.indexRightAxis = typeof options.indexRightAxis !== 'undefined' ? options.indexRightAxis : 2;\n    this.indexForwardAxis = typeof options.indexForwardAxis !== 'undefined' ? options.indexForwardAxis : 0;\n    this.indexUpAxis = typeof options.indexUpAxis !== 'undefined' ? options.indexUpAxis : 1;\n    this.constraints = [];\n\n    this.preStepCallback = () => {};\n\n    this.currentVehicleSpeedKmHour = 0;\n    this.numWheelsOnGround = 0;\n  }\n  /**\n   * Add a wheel. For information about the options, see `WheelInfo`.\n   */\n\n\n  addWheel(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const info = new WheelInfo(options);\n    const index = this.wheelInfos.length;\n    this.wheelInfos.push(info);\n    return index;\n  }\n  /**\n   * Set the steering value of a wheel.\n   */\n\n\n  setSteeringValue(value, wheelIndex) {\n    const wheel = this.wheelInfos[wheelIndex];\n    wheel.steering = value;\n  }\n  /**\n   * Set the wheel force to apply on one of the wheels each time step\n   */\n\n\n  applyEngineForce(value, wheelIndex) {\n    this.wheelInfos[wheelIndex].engineForce = value;\n  }\n  /**\n   * Set the braking force of a wheel\n   */\n\n\n  setBrake(brake, wheelIndex) {\n    this.wheelInfos[wheelIndex].brake = brake;\n  }\n  /**\n   * Add the vehicle including its constraints to the world.\n   */\n\n\n  addToWorld(world) {\n    world.addBody(this.chassisBody);\n    const that = this;\n\n    this.preStepCallback = () => {\n      that.updateVehicle(world.dt);\n    };\n\n    world.addEventListener('preStep', this.preStepCallback);\n    this.world = world;\n  }\n  /**\n   * Get one of the wheel axles, world-oriented.\n   */\n\n\n  getVehicleAxisWorld(axisIndex, result) {\n    result.set(axisIndex === 0 ? 1 : 0, axisIndex === 1 ? 1 : 0, axisIndex === 2 ? 1 : 0);\n    this.chassisBody.vectorToWorldFrame(result, result);\n  }\n\n  updateVehicle(timeStep) {\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n    const chassisBody = this.chassisBody;\n\n    for (let i = 0; i < numWheels; i++) {\n      this.updateWheelTransform(i);\n    }\n\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.length();\n    const forwardWorld = new Vec3();\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n    if (forwardWorld.dot(chassisBody.velocity) < 0) {\n      this.currentVehicleSpeedKmHour *= -1;\n    } // simulate suspension\n\n\n    for (let i = 0; i < numWheels; i++) {\n      this.castRay(wheelInfos[i]);\n    }\n\n    this.updateSuspension(timeStep);\n    const impulse = new Vec3();\n    const relpos = new Vec3();\n\n    for (let i = 0; i < numWheels; i++) {\n      //apply suspension force\n      const wheel = wheelInfos[i];\n      let suspensionForce = wheel.suspensionForce;\n\n      if (suspensionForce > wheel.maxSuspensionForce) {\n        suspensionForce = wheel.maxSuspensionForce;\n      }\n\n      wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n      chassisBody.applyImpulse(impulse, relpos);\n    }\n\n    this.updateFriction(timeStep);\n    const hitNormalWorldScaledWithProj = new Vec3();\n    const fwd = new Vec3();\n    const vel = new Vec3();\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i]; //const relpos = new Vec3();\n      //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n\n      chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel); // Hack to get the rotation in the correct direction\n\n      let m = 1;\n\n      switch (this.indexUpAxis) {\n        case 1:\n          m = -1;\n          break;\n      }\n\n      if (wheel.isInContact) {\n        this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n        const proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n        wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n        fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n        const proj2 = fwd.dot(vel);\n        wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n      }\n\n      if ((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed) {\n        // Apply custom rotation when accelerating and sliding\n        wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n      } // Lock wheels\n\n\n      if (Math.abs(wheel.brake) > Math.abs(wheel.engineForce)) {\n        wheel.deltaRotation = 0;\n      }\n\n      wheel.rotation += wheel.deltaRotation; // Use the old value\n\n      wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n    }\n  }\n\n  updateSuspension(deltaTime) {\n    const chassisBody = this.chassisBody;\n    const chassisMass = chassisBody.mass;\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n\n    for (let w_it = 0; w_it < numWheels; w_it++) {\n      const wheel = wheelInfos[w_it];\n\n      if (wheel.isInContact) {\n        let force; // Spring\n\n        const susp_length = wheel.suspensionRestLength;\n        const current_length = wheel.suspensionLength;\n        const length_diff = susp_length - current_length;\n        force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension; // Damper\n\n        const projected_rel_vel = wheel.suspensionRelativeVelocity;\n        let susp_damping;\n\n        if (projected_rel_vel < 0) {\n          susp_damping = wheel.dampingCompression;\n        } else {\n          susp_damping = wheel.dampingRelaxation;\n        }\n\n        force -= susp_damping * projected_rel_vel;\n        wheel.suspensionForce = force * chassisMass;\n\n        if (wheel.suspensionForce < 0) {\n          wheel.suspensionForce = 0;\n        }\n      } else {\n        wheel.suspensionForce = 0;\n      }\n    }\n  }\n  /**\n   * Remove the vehicle including its constraints from the world.\n   */\n\n\n  removeFromWorld(world) {\n    this.constraints;\n    world.removeBody(this.chassisBody);\n    world.removeEventListener('preStep', this.preStepCallback);\n    this.world = null;\n  }\n\n  castRay(wheel) {\n    const rayvector = castRay_rayvector;\n    const target = castRay_target;\n    this.updateWheelTransformWorld(wheel);\n    const chassisBody = this.chassisBody;\n    let depth = -1;\n    const raylen = wheel.suspensionRestLength + wheel.radius;\n    wheel.directionWorld.scale(raylen, rayvector);\n    const source = wheel.chassisConnectionPointWorld;\n    source.vadd(rayvector, target);\n    const raycastResult = wheel.raycastResult;\n    raycastResult.reset(); // Turn off ray collision with the chassis temporarily\n\n    const oldState = chassisBody.collisionResponse;\n    chassisBody.collisionResponse = false; // Cast ray against world\n\n    this.world.rayTest(source, target, raycastResult);\n    chassisBody.collisionResponse = oldState;\n    const object = raycastResult.body;\n    wheel.raycastResult.groundObject = 0;\n\n    if (object) {\n      depth = raycastResult.distance;\n      wheel.raycastResult.hitNormalWorld = raycastResult.hitNormalWorld;\n      wheel.isInContact = true;\n      const hitDistance = raycastResult.distance;\n      wheel.suspensionLength = hitDistance - wheel.radius; // clamp on max suspension travel\n\n      const minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n      const maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n\n      if (wheel.suspensionLength < minSuspensionLength) {\n        wheel.suspensionLength = minSuspensionLength;\n      }\n\n      if (wheel.suspensionLength > maxSuspensionLength) {\n        wheel.suspensionLength = maxSuspensionLength;\n        wheel.raycastResult.reset();\n      }\n\n      const denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n      const chassis_velocity_at_contactPoint = new Vec3();\n      chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n      const projVel = wheel.raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n      if (denominator >= -0.1) {\n        wheel.suspensionRelativeVelocity = 0;\n        wheel.clippedInvContactDotSuspension = 1 / 0.1;\n      } else {\n        const inv = -1 / denominator;\n        wheel.suspensionRelativeVelocity = projVel * inv;\n        wheel.clippedInvContactDotSuspension = inv;\n      }\n    } else {\n      //put wheel info as in rest position\n      wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n      wheel.suspensionRelativeVelocity = 0.0;\n      wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n      wheel.clippedInvContactDotSuspension = 1.0;\n    }\n\n    return depth;\n  }\n\n  updateWheelTransformWorld(wheel) {\n    wheel.isInContact = false;\n    const chassisBody = this.chassisBody;\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n  }\n  /**\n   * Update one of the wheel transform.\n   * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n   * @param wheelIndex The wheel index to update.\n   */\n\n\n  updateWheelTransform(wheelIndex) {\n    const up = tmpVec4;\n    const right = tmpVec5;\n    const fwd = tmpVec6;\n    const wheel = this.wheelInfos[wheelIndex];\n    this.updateWheelTransformWorld(wheel);\n    wheel.directionLocal.scale(-1, up);\n    right.copy(wheel.axleLocal);\n    up.cross(right, fwd);\n    fwd.normalize();\n    right.normalize(); // Rotate around steering over the wheelAxle\n\n    const steering = wheel.steering;\n    const steeringOrn = new Quaternion();\n    steeringOrn.setFromAxisAngle(up, steering);\n    const rotatingOrn = new Quaternion();\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation); // World rotation of the wheel\n\n    const q = wheel.worldTransform.quaternion;\n    this.chassisBody.quaternion.mult(steeringOrn, q);\n    q.mult(rotatingOrn, q);\n    q.normalize(); // world position of the wheel\n\n    const p = wheel.worldTransform.position;\n    p.copy(wheel.directionWorld);\n    p.scale(wheel.suspensionLength, p);\n    p.vadd(wheel.chassisConnectionPointWorld, p);\n  }\n  /**\n   * Get the world transform of one of the wheels\n   */\n\n\n  getWheelTransformWorld(wheelIndex) {\n    return this.wheelInfos[wheelIndex].worldTransform;\n  }\n\n  updateFriction(timeStep) {\n    const surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj; //calculate the impulse, so that the wheels don't move sidewards\n\n    const wheelInfos = this.wheelInfos;\n    const numWheels = wheelInfos.length;\n    const chassisBody = this.chassisBody;\n    const forwardWS = updateFriction_forwardWS;\n    const axle = updateFriction_axle;\n    this.numWheelsOnGround = 0;\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n\n      if (groundObject) {\n        this.numWheelsOnGround++;\n      }\n\n      wheel.sideImpulse = 0;\n      wheel.forwardImpulse = 0;\n\n      if (!forwardWS[i]) {\n        forwardWS[i] = new Vec3();\n      }\n\n      if (!axle[i]) {\n        axle[i] = new Vec3();\n      }\n    }\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n\n      if (groundObject) {\n        const axlei = axle[i];\n        const wheelTrans = this.getWheelTransformWorld(i); // Get world axle\n\n        wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n        const surfNormalWS = wheel.raycastResult.hitNormalWorld;\n        const proj = axlei.dot(surfNormalWS);\n        surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n        axlei.vsub(surfNormalWS_scaled_proj, axlei);\n        axlei.normalize();\n        surfNormalWS.cross(axlei, forwardWS[i]);\n        forwardWS[i].normalize();\n        wheel.sideImpulse = resolveSingleBilateral(chassisBody, wheel.raycastResult.hitPointWorld, groundObject, wheel.raycastResult.hitPointWorld, axlei);\n        wheel.sideImpulse *= sideFrictionStiffness2;\n      }\n    }\n\n    const sideFactor = 1;\n    const fwdFactor = 0.5;\n    this.sliding = false;\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const groundObject = wheel.raycastResult.body;\n      let rollingFriction = 0;\n      wheel.slipInfo = 1;\n\n      if (groundObject) {\n        const defaultRollingFrictionImpulse = 0;\n        const maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse; // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n        // rollingFriction = calcRollingFriction(contactPt);\n\n        rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n        rollingFriction += wheel.engineForce * timeStep; // rollingFriction = 0;\n\n        const factor = maxImpulse / rollingFriction;\n        wheel.slipInfo *= factor;\n      } //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n\n      wheel.forwardImpulse = 0;\n      wheel.skidInfo = 1;\n\n      if (groundObject) {\n        wheel.skidInfo = 1;\n        const maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n        const maximpSide = maximp;\n        const maximpSquared = maximp * maximpSide;\n        wheel.forwardImpulse = rollingFriction; //wheelInfo.engineForce* timeStep;\n\n        const x = wheel.forwardImpulse * fwdFactor / wheel.forwardAcceleration;\n        const y = wheel.sideImpulse * sideFactor / wheel.sideAcceleration;\n        const impulseSquared = x * x + y * y;\n        wheel.sliding = false;\n\n        if (impulseSquared > maximpSquared) {\n          this.sliding = true;\n          wheel.sliding = true;\n          const factor = maximp / Math.sqrt(impulseSquared);\n          wheel.skidInfo *= factor;\n        }\n      }\n    }\n\n    if (this.sliding) {\n      for (let i = 0; i < numWheels; i++) {\n        const wheel = wheelInfos[i];\n\n        if (wheel.sideImpulse !== 0) {\n          if (wheel.skidInfo < 1) {\n            wheel.forwardImpulse *= wheel.skidInfo;\n            wheel.sideImpulse *= wheel.skidInfo;\n          }\n        }\n      }\n    } // apply the impulses\n\n\n    for (let i = 0; i < numWheels; i++) {\n      const wheel = wheelInfos[i];\n      const rel_pos = new Vec3();\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos); // cannons applyimpulse is using world coord for the position\n      //rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n      if (wheel.forwardImpulse !== 0) {\n        const impulse = new Vec3();\n        forwardWS[i].scale(wheel.forwardImpulse, impulse);\n        chassisBody.applyImpulse(impulse, rel_pos);\n      }\n\n      if (wheel.sideImpulse !== 0) {\n        const groundObject = wheel.raycastResult.body;\n        const rel_pos2 = new Vec3();\n        wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2); //rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n\n        const sideImp = new Vec3();\n        axle[i].scale(wheel.sideImpulse, sideImp); // Scale the relative position in the up direction with rollInfluence.\n        // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n\n        chassisBody.vectorToLocalFrame(rel_pos, rel_pos);\n        rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n        chassisBody.vectorToWorldFrame(rel_pos, rel_pos);\n        chassisBody.applyImpulse(sideImp, rel_pos); //apply friction impulse on the ground\n\n        sideImp.scale(-1, sideImp);\n        groundObject.applyImpulse(sideImp, rel_pos2);\n      }\n    }\n  }\n\n}\nnew Vec3();\nnew Vec3();\nnew Vec3();\nconst tmpVec4 = new Vec3();\nconst tmpVec5 = new Vec3();\nconst tmpVec6 = new Vec3();\nnew Ray();\nnew Vec3();\nconst castRay_rayvector = new Vec3();\nconst castRay_target = new Vec3();\nconst directions = [new Vec3(1, 0, 0), new Vec3(0, 1, 0), new Vec3(0, 0, 1)];\nconst updateFriction_surfNormalWS_scaled_proj = new Vec3();\nconst updateFriction_axle = [];\nconst updateFriction_forwardWS = [];\nconst sideFrictionStiffness2 = 1;\nconst calcRollingFriction_vel1 = new Vec3();\nconst calcRollingFriction_vel2 = new Vec3();\nconst calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n  let j1 = 0;\n  const contactPosWorld = frictionPosWorld; // const rel_pos1 = new Vec3();\n  // const rel_pos2 = new Vec3();\n\n  const vel1 = calcRollingFriction_vel1;\n  const vel2 = calcRollingFriction_vel2;\n  const vel = calcRollingFriction_vel; // contactPosWorld.vsub(body0.position, rel_pos1);\n  // contactPosWorld.vsub(body1.position, rel_pos2);\n\n  body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n  body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n  vel1.vsub(vel2, vel);\n  const vrel = frictionDirectionWorld.dot(vel);\n  const denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n  const denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n  const relaxation = 1;\n  const jacDiagABInv = relaxation / (denom0 + denom1); // calculate j that moves us to zero relative velocity\n\n  j1 = -vrel * jacDiagABInv;\n\n  if (maxImpulse < j1) {\n    j1 = maxImpulse;\n  }\n\n  if (j1 < -maxImpulse) {\n    j1 = -maxImpulse;\n  }\n\n  return j1;\n}\n\nconst computeImpulseDenominator_r0 = new Vec3();\nconst computeImpulseDenominator_c0 = new Vec3();\nconst computeImpulseDenominator_vec = new Vec3();\nconst computeImpulseDenominator_m = new Vec3();\n\nfunction computeImpulseDenominator(body, pos, normal) {\n  const r0 = computeImpulseDenominator_r0;\n  const c0 = computeImpulseDenominator_c0;\n  const vec = computeImpulseDenominator_vec;\n  const m = computeImpulseDenominator_m;\n  pos.vsub(body.position, r0);\n  r0.cross(normal, c0);\n  body.invInertiaWorld.vmult(c0, m);\n  m.cross(r0, vec);\n  return body.invMass + normal.dot(vec);\n}\n\nconst resolveSingleBilateral_vel1 = new Vec3();\nconst resolveSingleBilateral_vel2 = new Vec3();\nconst resolveSingleBilateral_vel = new Vec3(); // bilateral constraint between two dynamic objects\n\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal) {\n  const normalLenSqr = normal.lengthSquared();\n\n  if (normalLenSqr > 1.1) {\n    return 0; // no impulse\n  } // const rel_pos1 = new Vec3();\n  // const rel_pos2 = new Vec3();\n  // pos1.vsub(body1.position, rel_pos1);\n  // pos2.vsub(body2.position, rel_pos2);\n\n\n  const vel1 = resolveSingleBilateral_vel1;\n  const vel2 = resolveSingleBilateral_vel2;\n  const vel = resolveSingleBilateral_vel;\n  body1.getVelocityAtWorldPoint(pos1, vel1);\n  body2.getVelocityAtWorldPoint(pos2, vel2);\n  vel1.vsub(vel2, vel);\n  const rel_vel = normal.dot(vel);\n  const contactDamping = 0.2;\n  const massTerm = 1 / (body1.invMass + body2.invMass);\n  const impulse = -contactDamping * rel_vel * massTerm;\n  return impulse;\n}\n\n/**\n * Spherical shape\n * @example\n *     const radius = 1\n *     const sphereShape = new CANNON.Sphere(radius)\n *     const sphereBody = new CANNON.Body({ mass: 1, shape: sphereShape })\n *     world.addBody(sphereBody)\n */\nclass Sphere extends Shape {\n  /**\n   * The radius of the sphere.\n   */\n\n  /**\n   *\n   * @param radius The radius of the sphere, a non-negative number.\n   */\n  constructor(radius) {\n    super({\n      type: Shape.types.SPHERE\n    });\n    this.radius = radius !== undefined ? radius : 1.0;\n\n    if (this.radius < 0) {\n      throw new Error('The sphere radius cannot be negative.');\n    }\n\n    this.updateBoundingSphereRadius();\n  }\n  /** calculateLocalInertia */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    const I = 2.0 * mass * this.radius * this.radius / 5.0;\n    target.x = I;\n    target.y = I;\n    target.z = I;\n    return target;\n  }\n  /** volume */\n\n\n  volume() {\n    return 4.0 * Math.PI * Math.pow(this.radius, 3) / 3.0;\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = this.radius;\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    const r = this.radius;\n    const axes = ['x', 'y', 'z'];\n\n    for (let i = 0; i < axes.length; i++) {\n      const ax = axes[i];\n      min[ax] = pos[ax] - r;\n      max[ax] = pos[ax] + r;\n    }\n  }\n\n}\n\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n */\nclass RigidVehicle {\n  /**\n   * The bodies of the wheels.\n   */\n\n  /**\n   * The chassis body.\n   */\n\n  /**\n   * The constraints.\n   */\n\n  /**\n   * The wheel axes.\n   */\n\n  /**\n   * The wheel forces.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.wheelBodies = [];\n    this.coordinateSystem = typeof options.coordinateSystem !== 'undefined' ? options.coordinateSystem.clone() : new Vec3(1, 2, 3);\n\n    if (options.chassisBody) {\n      this.chassisBody = options.chassisBody;\n    } else {\n      // No chassis body given. Create it!\n      this.chassisBody = new Body({\n        mass: 1,\n        shape: new Box(new Vec3(5, 0.5, 2))\n      });\n    }\n\n    this.constraints = [];\n    this.wheelAxes = [];\n    this.wheelForces = [];\n  }\n  /**\n   * Add a wheel\n   */\n\n\n  addWheel(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    let wheelBody;\n\n    if (options.body) {\n      wheelBody = options.body;\n    } else {\n      // No wheel body given. Create it!\n      wheelBody = new Body({\n        mass: 1,\n        shape: new Sphere(1.2)\n      });\n    }\n\n    this.wheelBodies.push(wheelBody);\n    this.wheelForces.push(0); // Position constrain wheels\n\n    const position = typeof options.position !== 'undefined' ? options.position.clone() : new Vec3(); // Set position locally to the chassis\n\n    const worldPosition = new Vec3();\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z); // Constrain wheel\n\n    const axis = typeof options.axis !== 'undefined' ? options.axis.clone() : new Vec3(0, 0, 1);\n    this.wheelAxes.push(axis);\n    const hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n      pivotA: position,\n      axisA: axis,\n      pivotB: Vec3.ZERO,\n      axisB: axis,\n      collideConnected: false\n    });\n    this.constraints.push(hingeConstraint);\n    return this.wheelBodies.length - 1;\n  }\n  /**\n   * Set the steering value of a wheel.\n   * @todo check coordinateSystem\n   */\n\n\n  setSteeringValue(value, wheelIndex) {\n    // Set angle of the hinge axis\n    const axis = this.wheelAxes[wheelIndex];\n    const c = Math.cos(value);\n    const s = Math.sin(value);\n    const x = axis.x;\n    const z = axis.z;\n    this.constraints[wheelIndex].axisA.set(-c * x + s * z, 0, s * x + c * z);\n  }\n  /**\n   * Set the target rotational speed of the hinge constraint.\n   */\n\n\n  setMotorSpeed(value, wheelIndex) {\n    const hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.enableMotor();\n    hingeConstraint.motorTargetVelocity = value;\n  }\n  /**\n   * Set the target rotational speed of the hinge constraint.\n   */\n\n\n  disableMotor(wheelIndex) {\n    const hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.disableMotor();\n  }\n  /**\n   * Set the wheel force to apply on one of the wheels each time step\n   */\n\n\n  setWheelForce(value, wheelIndex) {\n    this.wheelForces[wheelIndex] = value;\n  }\n  /**\n   * Apply a torque on one of the wheels.\n   */\n\n\n  applyWheelForce(value, wheelIndex) {\n    const axis = this.wheelAxes[wheelIndex];\n    const wheelBody = this.wheelBodies[wheelIndex];\n    const bodyTorque = wheelBody.torque;\n    axis.scale(value, torque);\n    wheelBody.vectorToWorldFrame(torque, torque);\n    bodyTorque.vadd(torque, bodyTorque);\n  }\n  /**\n   * Add the vehicle including its constraints to the world.\n   */\n\n\n  addToWorld(world) {\n    const constraints = this.constraints;\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (let i = 0; i < bodies.length; i++) {\n      world.addBody(bodies[i]);\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      world.addConstraint(constraints[i]);\n    }\n\n    world.addEventListener('preStep', this._update.bind(this));\n  }\n\n  _update() {\n    const wheelForces = this.wheelForces;\n\n    for (let i = 0; i < wheelForces.length; i++) {\n      this.applyWheelForce(wheelForces[i], i);\n    }\n  }\n  /**\n   * Remove the vehicle including its constraints from the world.\n   */\n\n\n  removeFromWorld(world) {\n    const constraints = this.constraints;\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (let i = 0; i < bodies.length; i++) {\n      world.removeBody(bodies[i]);\n    }\n\n    for (let i = 0; i < constraints.length; i++) {\n      world.removeConstraint(constraints[i]);\n    }\n  }\n  /**\n   * Get current rotational velocity of a wheel\n   */\n\n\n  getWheelSpeed(wheelIndex) {\n    const axis = this.wheelAxes[wheelIndex];\n    const wheelBody = this.wheelBodies[wheelIndex];\n    const w = wheelBody.angularVelocity;\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n    return w.dot(worldAxis);\n  }\n\n}\nconst torque = new Vec3();\nconst worldAxis = new Vec3();\n\n/**\n * Smoothed-particle hydrodynamics system\n * @todo Make parameters customizable in the constructor\n */\nclass SPHSystem {\n  /**\n   * The particles array.\n   */\n\n  /**\n   * Density of the system (kg/m3).\n   * @default 1\n   */\n\n  /**\n   * Distance below which two particles are considered to be neighbors.\n   * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n   * @default 1\n   */\n\n  /**\n   * @default 1\n   */\n\n  /**\n   * Viscosity of the system.\n   * @default 0.01\n   */\n\n  /**\n   * @default 0.000001\n   */\n  constructor() {\n    this.particles = [];\n    this.density = 1;\n    this.smoothingRadius = 1;\n    this.speedOfSound = 1;\n    this.viscosity = 0.01;\n    this.eps = 0.000001; // Stuff Computed per particle\n\n    this.pressures = [];\n    this.densities = [];\n    this.neighbors = [];\n  }\n  /**\n   * Add a particle to the system.\n   */\n\n\n  add(particle) {\n    this.particles.push(particle);\n\n    if (this.neighbors.length < this.particles.length) {\n      this.neighbors.push([]);\n    }\n  }\n  /**\n   * Remove a particle from the system.\n   */\n\n\n  remove(particle) {\n    const idx = this.particles.indexOf(particle);\n\n    if (idx !== -1) {\n      this.particles.splice(idx, 1);\n\n      if (this.neighbors.length > this.particles.length) {\n        this.neighbors.pop();\n      }\n    }\n  }\n  /**\n   * Get neighbors within smoothing volume, save in the array neighbors\n   */\n\n\n  getNeighbors(particle, neighbors) {\n    const N = this.particles.length;\n    const id = particle.id;\n    const R2 = this.smoothingRadius * this.smoothingRadius;\n    const dist = SPHSystem_getNeighbors_dist;\n\n    for (let i = 0; i !== N; i++) {\n      const p = this.particles[i];\n      p.position.vsub(particle.position, dist);\n\n      if (id !== p.id && dist.lengthSquared() < R2) {\n        neighbors.push(p);\n      }\n    }\n  }\n\n  update() {\n    const N = this.particles.length;\n    const dist = SPHSystem_update_dist;\n    const cs = this.speedOfSound;\n    const eps = this.eps;\n\n    for (let i = 0; i !== N; i++) {\n      const p = this.particles[i]; // Current particle\n\n      const neighbors = this.neighbors[i]; // Get neighbors\n\n      neighbors.length = 0;\n      this.getNeighbors(p, neighbors);\n      neighbors.push(this.particles[i]); // Add current too\n\n      const numNeighbors = neighbors.length; // Accumulate density for the particle\n\n      let sum = 0.0;\n\n      for (let j = 0; j !== numNeighbors; j++) {\n        //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n        p.position.vsub(neighbors[j].position, dist);\n        const len = dist.length();\n        const weight = this.w(len);\n        sum += neighbors[j].mass * weight;\n      } // Save\n\n\n      this.densities[i] = sum;\n      this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n    } // Add forces\n    // Sum to these accelerations\n\n\n    const a_pressure = SPHSystem_update_a_pressure;\n    const a_visc = SPHSystem_update_a_visc;\n    const gradW = SPHSystem_update_gradW;\n    const r_vec = SPHSystem_update_r_vec;\n    const u = SPHSystem_update_u;\n\n    for (let i = 0; i !== N; i++) {\n      const particle = this.particles[i];\n      a_pressure.set(0, 0, 0);\n      a_visc.set(0, 0, 0); // Init vars\n\n      let Pij;\n      let nabla;\n\n      const neighbors = this.neighbors[i];\n      const numNeighbors = neighbors.length; //printf(\"Neighbors: \");\n\n      for (let j = 0; j !== numNeighbors; j++) {\n        const neighbor = neighbors[j]; //printf(\"%d \",nj);\n        // Get r once for all..\n\n        particle.position.vsub(neighbor.position, r_vec);\n        const r = r_vec.length(); // Pressure contribution\n\n        Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i] * this.densities[i] + eps) + this.pressures[j] / (this.densities[j] * this.densities[j] + eps));\n        this.gradw(r_vec, gradW); // Add to pressure acceleration\n\n        gradW.scale(Pij, gradW);\n        a_pressure.vadd(gradW, a_pressure); // Viscosity contribution\n\n        neighbor.velocity.vsub(particle.velocity, u);\n        u.scale(1.0 / (0.0001 + this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass, u);\n        nabla = this.nablaw(r);\n        u.scale(nabla, u); // Add to viscosity acceleration\n\n        a_visc.vadd(u, a_visc);\n      } // Calculate force\n\n\n      a_visc.scale(particle.mass, a_visc);\n      a_pressure.scale(particle.mass, a_pressure); // Add force to particles\n\n      particle.force.vadd(a_visc, particle.force);\n      particle.force.vadd(a_pressure, particle.force);\n    }\n  } // Calculate the weight using the W(r) weightfunction\n\n\n  w(r) {\n    // 315\n    const h = this.smoothingRadius;\n    return 315.0 / (64.0 * Math.PI * h ** 9) * (h * h - r * r) ** 3;\n  } // calculate gradient of the weight function\n\n\n  gradw(rVec, resultVec) {\n    const r = rVec.length();\n    const h = this.smoothingRadius;\n    rVec.scale(945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) ** 2, resultVec);\n  } // Calculate nabla(W)\n\n\n  nablaw(r) {\n    const h = this.smoothingRadius;\n    const nabla = 945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) * (7 * r * r - 3 * h * h);\n    return nabla;\n  }\n\n}\nconst SPHSystem_getNeighbors_dist = new Vec3(); // Temp vectors for calculation\n\nconst SPHSystem_update_dist = new Vec3(); // Relative velocity\n\nconst SPHSystem_update_a_pressure = new Vec3();\nconst SPHSystem_update_a_visc = new Vec3();\nconst SPHSystem_update_gradW = new Vec3();\nconst SPHSystem_update_r_vec = new Vec3();\nconst SPHSystem_update_u = new Vec3();\n\n/**\n * Cylinder class.\n * @example\n *     const radiusTop = 0.5\n *     const radiusBottom = 0.5\n *     const height = 2\n *     const numSegments = 12\n *     const cylinderShape = new CANNON.Cylinder(radiusTop, radiusBottom, height, numSegments)\n *     const cylinderBody = new CANNON.Body({ mass: 1, shape: cylinderShape })\n *     world.addBody(cylinderBody)\n */\n\nclass Cylinder extends ConvexPolyhedron {\n  /** The radius of the top of the Cylinder. */\n\n  /** The radius of the bottom of the Cylinder. */\n\n  /** The height of the Cylinder. */\n\n  /** The number of segments to build the cylinder out of. */\n\n  /**\n   * @param radiusTop The radius of the top of the Cylinder.\n   * @param radiusBottom The radius of the bottom of the Cylinder.\n   * @param height The height of the Cylinder.\n   * @param numSegments The number of segments to build the cylinder out of.\n   */\n  constructor(radiusTop, radiusBottom, height, numSegments) {\n    if (radiusTop === void 0) {\n      radiusTop = 1;\n    }\n\n    if (radiusBottom === void 0) {\n      radiusBottom = 1;\n    }\n\n    if (height === void 0) {\n      height = 1;\n    }\n\n    if (numSegments === void 0) {\n      numSegments = 8;\n    }\n\n    if (radiusTop < 0) {\n      throw new Error('The cylinder radiusTop cannot be negative.');\n    }\n\n    if (radiusBottom < 0) {\n      throw new Error('The cylinder radiusBottom cannot be negative.');\n    }\n\n    const N = numSegments;\n    const vertices = [];\n    const axes = [];\n    const faces = [];\n    const bottomface = [];\n    const topface = [];\n    const cos = Math.cos;\n    const sin = Math.sin; // First bottom point\n\n    vertices.push(new Vec3(-radiusBottom * sin(0), -height * 0.5, radiusBottom * cos(0)));\n    bottomface.push(0); // First top point\n\n    vertices.push(new Vec3(-radiusTop * sin(0), height * 0.5, radiusTop * cos(0)));\n    topface.push(1);\n\n    for (let i = 0; i < N; i++) {\n      const theta = 2 * Math.PI / N * (i + 1);\n      const thetaN = 2 * Math.PI / N * (i + 0.5);\n\n      if (i < N - 1) {\n        // Bottom\n        vertices.push(new Vec3(-radiusBottom * sin(theta), -height * 0.5, radiusBottom * cos(theta)));\n        bottomface.push(2 * i + 2); // Top\n\n        vertices.push(new Vec3(-radiusTop * sin(theta), height * 0.5, radiusTop * cos(theta)));\n        topface.push(2 * i + 3); // Face\n\n        faces.push([2 * i, 2 * i + 1, 2 * i + 3, 2 * i + 2]);\n      } else {\n        faces.push([2 * i, 2 * i + 1, 1, 0]); // Connect\n      } // Axis: we can cut off half of them if we have even number of segments\n\n\n      if (N % 2 === 1 || i < N / 2) {\n        axes.push(new Vec3(-sin(thetaN), 0, cos(thetaN)));\n      }\n    }\n\n    faces.push(bottomface);\n    axes.push(new Vec3(0, 1, 0)); // Reorder top face\n\n    const temp = [];\n\n    for (let i = 0; i < topface.length; i++) {\n      temp.push(topface[topface.length - i - 1]);\n    }\n\n    faces.push(temp);\n    super({\n      vertices,\n      faces,\n      axes\n    });\n    this.type = Shape.types.CYLINDER;\n    this.radiusTop = radiusTop;\n    this.radiusBottom = radiusBottom;\n    this.height = height;\n    this.numSegments = numSegments;\n  }\n\n}\n\n/**\n * Particle shape.\n * @example\n *     const particleShape = new CANNON.Particle()\n *     const particleBody = new CANNON.Body({ mass: 1, shape: particleShape })\n *     world.addBody(particleBody)\n */\nclass Particle extends Shape {\n  constructor() {\n    super({\n      type: Shape.types.PARTICLE\n    });\n  }\n  /**\n   * calculateLocalInertia\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.set(0, 0, 0);\n    return target;\n  }\n\n  volume() {\n    return 0;\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = 0;\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n  }\n\n}\n\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a Body and rotate that body. See the demos.\n * @example\n *     const planeShape = new CANNON.Plane()\n *     const planeBody = new CANNON.Body({ mass: 0, shape:  planeShape })\n *     planeBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0) // make it face up\n *     world.addBody(planeBody)\n */\nclass Plane extends Shape {\n  /** worldNormal */\n\n  /** worldNormalNeedsUpdate */\n  constructor() {\n    super({\n      type: Shape.types.PLANE\n    }); // World oriented normal\n\n    this.worldNormal = new Vec3();\n    this.worldNormalNeedsUpdate = true;\n    this.boundingSphereRadius = Number.MAX_VALUE;\n  }\n  /** computeWorldNormal */\n\n\n  computeWorldNormal(quat) {\n    const n = this.worldNormal;\n    n.set(0, 0, 1);\n    quat.vmult(n, n);\n    this.worldNormalNeedsUpdate = false;\n  }\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    return target;\n  }\n\n  volume() {\n    return (// The plane is infinite...\n      Number.MAX_VALUE\n    );\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    // The plane AABB is infinite, except if the normal is pointing along any axis\n    tempNormal.set(0, 0, 1); // Default plane normal is z\n\n    quat.vmult(tempNormal, tempNormal);\n    const maxVal = Number.MAX_VALUE;\n    min.set(-maxVal, -maxVal, -maxVal);\n    max.set(maxVal, maxVal, maxVal);\n\n    if (tempNormal.x === 1) {\n      max.x = pos.x;\n    } else if (tempNormal.x === -1) {\n      min.x = pos.x;\n    }\n\n    if (tempNormal.y === 1) {\n      max.y = pos.y;\n    } else if (tempNormal.y === -1) {\n      min.y = pos.y;\n    }\n\n    if (tempNormal.z === 1) {\n      max.z = pos.z;\n    } else if (tempNormal.z === -1) {\n      min.z = pos.z;\n    }\n  }\n\n  updateBoundingSphereRadius() {\n    this.boundingSphereRadius = Number.MAX_VALUE;\n  }\n\n}\nconst tempNormal = new Vec3();\n\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @todo Should be possible to use along all axes, not just y\n * @todo should be possible to scale along all axes\n * @todo Refactor elementSize to elementSizeX and elementSizeY\n *\n * @example\n *     // Generate some height data (y-values).\n *     const data = []\n *     for (let i = 0; i < 1000; i++) {\n *         const y = 0.5 * Math.cos(0.2 * i)\n *         data.push(y)\n *     }\n *\n *     // Create the heightfield shape\n *     const heightfieldShape = new CANNON.Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     })\n *     const heightfieldBody = new CANNON.Body({ shape: heightfieldShape })\n *     world.addBody(heightfieldBody)\n */\nclass Heightfield extends Shape {\n  /**\n   * An array of numbers, or height values, that are spread out along the x axis.\n   */\n\n  /**\n   * Max value of the data points in the data array.\n   */\n\n  /**\n   * Minimum value of the data points in the data array.\n   */\n\n  /**\n   * World spacing between the data points in X and Y direction.\n   * @todo elementSizeX and Y\n   * @default 1\n   */\n\n  /**\n   * @default true\n   */\n\n  /**\n   * @param data An array of numbers, or height values, that are spread out along the x axis.\n   */\n  constructor(data, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = Utils.defaults(options, {\n      maxValue: null,\n      minValue: null,\n      elementSize: 1\n    });\n    super({\n      type: Shape.types.HEIGHTFIELD\n    });\n    this.data = data;\n    this.maxValue = options.maxValue;\n    this.minValue = options.minValue;\n    this.elementSize = options.elementSize;\n\n    if (options.minValue === null) {\n      this.updateMinValue();\n    }\n\n    if (options.maxValue === null) {\n      this.updateMaxValue();\n    }\n\n    this.cacheEnabled = true;\n    this.pillarConvex = new ConvexPolyhedron();\n    this.pillarOffset = new Vec3();\n    this.updateBoundingSphereRadius(); // \"i_j_isUpper\" => { convex: ..., offset: ... }\n    // for example:\n    // _cachedPillars[\"0_2_1\"]\n\n    this._cachedPillars = {};\n  }\n  /**\n   * Call whenever you change the data array.\n   */\n\n\n  update() {\n    this._cachedPillars = {};\n  }\n  /**\n   * Update the `minValue` property\n   */\n\n\n  updateMinValue() {\n    const data = this.data;\n    let minValue = data[0][0];\n\n    for (let i = 0; i !== data.length; i++) {\n      for (let j = 0; j !== data[i].length; j++) {\n        const v = data[i][j];\n\n        if (v < minValue) {\n          minValue = v;\n        }\n      }\n    }\n\n    this.minValue = minValue;\n  }\n  /**\n   * Update the `maxValue` property\n   */\n\n\n  updateMaxValue() {\n    const data = this.data;\n    let maxValue = data[0][0];\n\n    for (let i = 0; i !== data.length; i++) {\n      for (let j = 0; j !== data[i].length; j++) {\n        const v = data[i][j];\n\n        if (v > maxValue) {\n          maxValue = v;\n        }\n      }\n    }\n\n    this.maxValue = maxValue;\n  }\n  /**\n   * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n   */\n\n\n  setHeightValueAtIndex(xi, yi, value) {\n    const data = this.data;\n    data[xi][yi] = value; // Invalidate cache\n\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\n\n    if (xi > 0) {\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n    }\n\n    if (yi > 0) {\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n    }\n\n    if (yi > 0 && xi > 0) {\n      this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n    }\n  }\n  /**\n   * Get max/min in a rectangle in the matrix data\n   * @param result An array to store the results in.\n   * @return The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n   */\n\n\n  getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    // Get max and min of the data\n    const data = this.data; // Set first value\n\n    let max = this.minValue;\n\n    for (let i = iMinX; i <= iMaxX; i++) {\n      for (let j = iMinY; j <= iMaxY; j++) {\n        const height = data[i][j];\n\n        if (height > max) {\n          max = height;\n        }\n      }\n    }\n\n    result[0] = this.minValue;\n    result[1] = max;\n  }\n  /**\n   * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n   * @param result Two-element array\n   * @param clamp If the position should be clamped to the heightfield edge.\n   */\n\n\n  getIndexOfPosition(x, y, result, clamp) {\n    // Get the index of the data points to test against\n    const w = this.elementSize;\n    const data = this.data;\n    let xi = Math.floor(x / w);\n    let yi = Math.floor(y / w);\n    result[0] = xi;\n    result[1] = yi;\n\n    if (clamp) {\n      // Clamp index to edges\n      if (xi < 0) {\n        xi = 0;\n      }\n\n      if (yi < 0) {\n        yi = 0;\n      }\n\n      if (xi >= data.length - 1) {\n        xi = data.length - 1;\n      }\n\n      if (yi >= data[0].length - 1) {\n        yi = data[0].length - 1;\n      }\n    } // Bail out if we are out of the terrain\n\n\n    if (xi < 0 || yi < 0 || xi >= data.length - 1 || yi >= data[0].length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getTriangleAt(x, y, edgeClamp, a, b, c) {\n    const idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    let xi = idx[0];\n    let yi = idx[1];\n    const data = this.data;\n\n    if (edgeClamp) {\n      xi = Math.min(data.length - 2, Math.max(0, xi));\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    const elementSize = this.elementSize;\n    const lowerDist2 = (x / elementSize - xi) ** 2 + (y / elementSize - yi) ** 2;\n    const upperDist2 = (x / elementSize - (xi + 1)) ** 2 + (y / elementSize - (yi + 1)) ** 2;\n    const upper = lowerDist2 > upperDist2;\n    this.getTriangle(xi, yi, upper, a, b, c);\n    return upper;\n  }\n\n  getNormalAt(x, y, edgeClamp, result) {\n    const a = getNormalAt_a;\n    const b = getNormalAt_b;\n    const c = getNormalAt_c;\n    const e0 = getNormalAt_e0;\n    const e1 = getNormalAt_e1;\n    this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    b.vsub(a, e0);\n    c.vsub(a, e1);\n    e0.cross(e1, result);\n    result.normalize();\n  }\n  /**\n   * Get an AABB of a square in the heightfield\n   * @param xi\n   * @param yi\n   * @param result\n   */\n\n\n  getAabbAtIndex(xi, yi, _ref) {\n    let {\n      lowerBound,\n      upperBound\n    } = _ref;\n    const data = this.data;\n    const elementSize = this.elementSize;\n    lowerBound.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n    upperBound.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n  }\n  /**\n   * Get the height in the heightfield at a given position\n   */\n\n\n  getHeightAt(x, y, edgeClamp) {\n    const data = this.data;\n    const a = getHeightAt_a;\n    const b = getHeightAt_b;\n    const c = getHeightAt_c;\n    const idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    let xi = idx[0];\n    let yi = idx[1];\n\n    if (edgeClamp) {\n      xi = Math.min(data.length - 2, Math.max(0, xi));\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    const upper = this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    barycentricWeights(x, y, a.x, a.y, b.x, b.y, c.x, c.y, getHeightAt_weights);\n    const w = getHeightAt_weights;\n\n    if (upper) {\n      // Top triangle verts\n      return data[xi + 1][yi + 1] * w.x + data[xi][yi + 1] * w.y + data[xi + 1][yi] * w.z;\n    } else {\n      // Top triangle verts\n      return data[xi][yi] * w.x + data[xi + 1][yi] * w.y + data[xi][yi + 1] * w.z;\n    }\n  }\n\n  getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle) {\n    return `${xi}_${yi}_${getUpperTriangle ? 1 : 0}`;\n  }\n\n  getCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n  }\n\n  setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, convex, offset) {\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n      convex,\n      offset\n    };\n  }\n\n  clearCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n  }\n  /**\n   * Get a triangle from the heightfield\n   */\n\n\n  getTriangle(xi, yi, upper, a, b, c) {\n    const data = this.data;\n    const elementSize = this.elementSize;\n\n    if (upper) {\n      // Top triangle verts\n      a.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n      b.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n      c.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n    } else {\n      // Top triangle verts\n      a.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n      b.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n      c.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n    }\n  }\n  /**\n   * Get a triangle in the terrain in the form of a triangular convex shape.\n   */\n\n\n  getConvexTrianglePillar(xi, yi, getUpperTriangle) {\n    let result = this.pillarConvex;\n    let offsetResult = this.pillarOffset;\n\n    if (this.cacheEnabled) {\n      const data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n\n      if (data) {\n        this.pillarConvex = data.convex;\n        this.pillarOffset = data.offset;\n        return;\n      }\n\n      result = new ConvexPolyhedron();\n      offsetResult = new Vec3();\n      this.pillarConvex = result;\n      this.pillarOffset = offsetResult;\n    }\n\n    const data = this.data;\n    const elementSize = this.elementSize;\n    const faces = result.faces; // Reuse verts if possible\n\n    result.vertices.length = 6;\n\n    for (let i = 0; i < 6; i++) {\n      if (!result.vertices[i]) {\n        result.vertices[i] = new Vec3();\n      }\n    } // Reuse faces if possible\n\n\n    faces.length = 5;\n\n    for (let i = 0; i < 5; i++) {\n      if (!faces[i]) {\n        faces[i] = [];\n      }\n    }\n\n    const verts = result.vertices;\n    const h = (Math.min(data[xi][yi], data[xi + 1][yi], data[xi][yi + 1], data[xi + 1][yi + 1]) - this.minValue) / 2 + this.minValue;\n\n    if (!getUpperTriangle) {\n      // Center of the triangle pillar - all polygons are given relative to this one\n      offsetResult.set((xi + 0.25) * elementSize, // sort of center of a triangle\n      (yi + 0.25) * elementSize, h // vertical center\n      ); // Top triangle verts\n\n      verts[0].set(-0.25 * elementSize, -0.25 * elementSize, data[xi][yi] - h);\n      verts[1].set(0.75 * elementSize, -0.25 * elementSize, data[xi + 1][yi] - h);\n      verts[2].set(-0.25 * elementSize, 0.75 * elementSize, data[xi][yi + 1] - h); // bottom triangle verts\n\n      verts[3].set(-0.25 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\n      verts[4].set(0.75 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\n      verts[5].set(-0.25 * elementSize, 0.75 * elementSize, -Math.abs(h) - 1); // top triangle\n\n      faces[0][0] = 0;\n      faces[0][1] = 1;\n      faces[0][2] = 2; // bottom triangle\n\n      faces[1][0] = 5;\n      faces[1][1] = 4;\n      faces[1][2] = 3; // -x facing quad\n\n      faces[2][0] = 0;\n      faces[2][1] = 2;\n      faces[2][2] = 5;\n      faces[2][3] = 3; // -y facing quad\n\n      faces[3][0] = 1;\n      faces[3][1] = 0;\n      faces[3][2] = 3;\n      faces[3][3] = 4; // +xy facing quad\n\n      faces[4][0] = 4;\n      faces[4][1] = 5;\n      faces[4][2] = 2;\n      faces[4][3] = 1;\n    } else {\n      // Center of the triangle pillar - all polygons are given relative to this one\n      offsetResult.set((xi + 0.75) * elementSize, // sort of center of a triangle\n      (yi + 0.75) * elementSize, h // vertical center\n      ); // Top triangle verts\n\n      verts[0].set(0.25 * elementSize, 0.25 * elementSize, data[xi + 1][yi + 1] - h);\n      verts[1].set(-0.75 * elementSize, 0.25 * elementSize, data[xi][yi + 1] - h);\n      verts[2].set(0.25 * elementSize, -0.75 * elementSize, data[xi + 1][yi] - h); // bottom triangle verts\n\n      verts[3].set(0.25 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\n      verts[4].set(-0.75 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\n      verts[5].set(0.25 * elementSize, -0.75 * elementSize, -Math.abs(h) - 1); // Top triangle\n\n      faces[0][0] = 0;\n      faces[0][1] = 1;\n      faces[0][2] = 2; // bottom triangle\n\n      faces[1][0] = 5;\n      faces[1][1] = 4;\n      faces[1][2] = 3; // +x facing quad\n\n      faces[2][0] = 2;\n      faces[2][1] = 5;\n      faces[2][2] = 3;\n      faces[2][3] = 0; // +y facing quad\n\n      faces[3][0] = 3;\n      faces[3][1] = 4;\n      faces[3][2] = 1;\n      faces[3][3] = 0; // -xy facing quad\n\n      faces[4][0] = 1;\n      faces[4][1] = 4;\n      faces[4][2] = 5;\n      faces[4][3] = 2;\n    }\n\n    result.computeNormals();\n    result.computeEdges();\n    result.updateBoundingSphereRadius();\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n  }\n\n  calculateLocalInertia(mass, target) {\n    if (target === void 0) {\n      target = new Vec3();\n    }\n\n    target.set(0, 0, 0);\n    return target;\n  }\n\n  volume() {\n    return (// The terrain is infinite\n      Number.MAX_VALUE\n    );\n  }\n\n  calculateWorldAABB(pos, quat, min, max) {\n    /** @TODO do it properly */\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n  }\n\n  updateBoundingSphereRadius() {\n    // Use the bounding box of the min/max values\n    const data = this.data;\n    const s = this.elementSize;\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).length();\n  }\n  /**\n   * Sets the height values from an image. Currently only supported in browser.\n   */\n\n\n  setHeightsFromImage(image, scale) {\n    const {\n      x,\n      z,\n      y\n    } = scale;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    const imageData = context.getImageData(0, 0, image.width, image.height);\n    const matrix = this.data;\n    matrix.length = 0;\n    this.elementSize = Math.abs(x) / imageData.width;\n\n    for (let i = 0; i < imageData.height; i++) {\n      const row = [];\n\n      for (let j = 0; j < imageData.width; j++) {\n        const a = imageData.data[(i * imageData.height + j) * 4];\n        const b = imageData.data[(i * imageData.height + j) * 4 + 1];\n        const c = imageData.data[(i * imageData.height + j) * 4 + 2];\n        const height = (a + b + c) / 4 / 255 * z;\n\n        if (x < 0) {\n          row.push(height);\n        } else {\n          row.unshift(height);\n        }\n      }\n\n      if (y < 0) {\n        matrix.unshift(row);\n      } else {\n        matrix.push(row);\n      }\n    }\n\n    this.updateMaxValue();\n    this.updateMinValue();\n    this.update();\n  }\n\n}\nconst getHeightAt_idx = [];\nconst getHeightAt_weights = new Vec3();\nconst getHeightAt_a = new Vec3();\nconst getHeightAt_b = new Vec3();\nconst getHeightAt_c = new Vec3();\nconst getNormalAt_a = new Vec3();\nconst getNormalAt_b = new Vec3();\nconst getNormalAt_c = new Vec3();\nconst getNormalAt_e0 = new Vec3();\nconst getNormalAt_e1 = new Vec3(); // from https://en.wikipedia.org/wiki/Barycentric_coordinate_system\n\nfunction barycentricWeights(x, y, ax, ay, bx, by, cx, cy, result) {\n  result.x = ((by - cy) * (x - cx) + (cx - bx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.y = ((cy - ay) * (x - cx) + (ax - cx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.z = 1 - result.x - result.y;\n}\n\n/**\n * OctreeNode\n */\nclass OctreeNode {\n  /** The root node */\n\n  /** Boundary of this node */\n\n  /** Contained data at the current node level */\n\n  /** Children to this node */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.root = options.root || null;\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n    this.data = [];\n    this.children = [];\n  }\n  /**\n   * reset\n   */\n\n\n  reset() {\n    this.children.length = this.data.length = 0;\n  }\n  /**\n   * Insert data into this node\n   * @return True if successful, otherwise false\n   */\n\n\n  insert(aabb, elementData, level) {\n    if (level === void 0) {\n      level = 0;\n    }\n\n    const nodeData = this.data; // Ignore objects that do not belong in this node\n\n    if (!this.aabb.contains(aabb)) {\n      return false; // object cannot be added\n    }\n\n    const children = this.children;\n    const maxDepth = this.maxDepth || this.root.maxDepth;\n\n    if (level < maxDepth) {\n      // Subdivide if there are no children yet\n      let subdivided = false;\n\n      if (!children.length) {\n        this.subdivide();\n        subdivided = true;\n      } // add to whichever node will accept it\n\n\n      for (let i = 0; i !== 8; i++) {\n        if (children[i].insert(aabb, elementData, level + 1)) {\n          return true;\n        }\n      }\n\n      if (subdivided) {\n        // No children accepted! Might as well just remove em since they contain none\n        children.length = 0;\n      }\n    } // Too deep, or children didnt want it. add it in current node\n\n\n    nodeData.push(elementData);\n    return true;\n  }\n  /**\n   * Create 8 equally sized children nodes and put them in the `children` array.\n   */\n\n\n  subdivide() {\n    const aabb = this.aabb;\n    const l = aabb.lowerBound;\n    const u = aabb.upperBound;\n    const children = this.children;\n    children.push(new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 0, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 0, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 1, 0)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 1, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 1, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 0, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(1, 0, 1)\n      })\n    }), new OctreeNode({\n      aabb: new AABB({\n        lowerBound: new Vec3(0, 1, 0)\n      })\n    }));\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n    const root = this.root || this;\n\n    for (let i = 0; i !== 8; i++) {\n      const child = children[i]; // Set current node as root\n\n      child.root = root; // Compute bounds\n\n      const lowerBound = child.aabb.lowerBound;\n      lowerBound.x *= halfDiagonal.x;\n      lowerBound.y *= halfDiagonal.y;\n      lowerBound.z *= halfDiagonal.z;\n      lowerBound.vadd(l, lowerBound); // Upper bound is always lower bound + halfDiagonal\n\n      lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n  }\n  /**\n   * Get all data, potentially within an AABB\n   * @return The \"result\" object\n   */\n\n\n  aabbQuery(aabb, result) {\n    this.data; // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n\n    this.children; // for (let i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    const queue = [this];\n\n    while (queue.length) {\n      const node = queue.pop();\n\n      if (node.aabb.overlaps(aabb)) {\n        Array.prototype.push.apply(result, node.data);\n      }\n\n      Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n  }\n  /**\n   * Get all data, potentially intersected by a ray.\n   * @return The \"result\" object\n   */\n\n\n  rayQuery(ray, treeTransform, result) {\n    // Use aabb query for now.\n\n    /** @todo implement real ray query which needs less lookups */\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n    return result;\n  }\n  /**\n   * removeEmptyNodes\n   */\n\n\n  removeEmptyNodes() {\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      this.children[i].removeEmptyNodes();\n\n      if (!this.children[i].children.length && !this.children[i].data.length) {\n        this.children.splice(i, 1);\n      }\n    }\n  }\n\n}\n/**\n * Octree\n */\n\n\nclass Octree extends OctreeNode {\n  /**\n   * Maximum subdivision depth\n   * @default 8\n   */\n\n  /**\n   * @param aabb The total AABB of the tree\n   */\n  constructor(aabb, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super({\n      root: null,\n      aabb\n    });\n    this.maxDepth = typeof options.maxDepth !== 'undefined' ? options.maxDepth : 8;\n  }\n\n}\nconst halfDiagonal = new Vec3();\nconst tmpAABB = new AABB();\n\n/**\n * Trimesh.\n * @example\n *     // How to make a mesh with a single triangle\n *     const vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ]\n *     const indices = [\n *         0, 1, 2  // triangle 0\n *     ]\n *     const trimeshShape = new CANNON.Trimesh(vertices, indices)\n */\nclass Trimesh extends Shape {\n  /**\n   * vertices\n   */\n\n  /**\n   * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n   */\n\n  /**\n   * The normals data.\n   */\n\n  /**\n   * The local AABB of the mesh.\n   */\n\n  /**\n   * References to vertex pairs, making up all unique edges in the trimesh.\n   */\n\n  /**\n   * Local scaling of the mesh. Use .setScale() to set it.\n   */\n\n  /**\n   * The indexed triangles. Use .updateTree() to update it.\n   */\n  constructor(vertices, indices) {\n    super({\n      type: Shape.types.TRIMESH\n    });\n    this.vertices = new Float32Array(vertices);\n    this.indices = new Int16Array(indices);\n    this.normals = new Float32Array(indices.length);\n    this.aabb = new AABB();\n    this.edges = null;\n    this.scale = new Vec3(1, 1, 1);\n    this.tree = new Octree();\n    this.updateEdges();\n    this.updateNormals();\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n    this.updateTree();\n  }\n  /**\n   * updateTree\n   */\n\n\n  updateTree() {\n    const tree = this.tree;\n    tree.reset();\n    tree.aabb.copy(this.aabb);\n    const scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n\n    tree.aabb.lowerBound.x *= 1 / scale.x;\n    tree.aabb.lowerBound.y *= 1 / scale.y;\n    tree.aabb.lowerBound.z *= 1 / scale.z;\n    tree.aabb.upperBound.x *= 1 / scale.x;\n    tree.aabb.upperBound.y *= 1 / scale.y;\n    tree.aabb.upperBound.z *= 1 / scale.z; // Insert all triangles\n\n    const triangleAABB = new AABB();\n    const a = new Vec3();\n    const b = new Vec3();\n    const c = new Vec3();\n    const points = [a, b, c];\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      //this.getTriangleVertices(i, a, b, c);\n      // Get unscaled triangle verts\n      const i3 = i * 3;\n\n      this._getUnscaledVertex(this.indices[i3], a);\n\n      this._getUnscaledVertex(this.indices[i3 + 1], b);\n\n      this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n      triangleAABB.setFromPoints(points);\n      tree.insert(triangleAABB, i);\n    }\n\n    tree.removeEmptyNodes();\n  }\n  /**\n   * Get triangles in a local AABB from the trimesh.\n   * @param result An array of integers, referencing the queried triangles.\n   */\n\n\n  getTrianglesInAABB(aabb, result) {\n    unscaledAABB.copy(aabb); // Scale it to local\n\n    const scale = this.scale;\n    const isx = scale.x;\n    const isy = scale.y;\n    const isz = scale.z;\n    const l = unscaledAABB.lowerBound;\n    const u = unscaledAABB.upperBound;\n    l.x /= isx;\n    l.y /= isy;\n    l.z /= isz;\n    u.x /= isx;\n    u.y /= isy;\n    u.z /= isz;\n    return this.tree.aabbQuery(unscaledAABB, result);\n  }\n  /**\n   * setScale\n   */\n\n\n  setScale(scale) {\n    const wasUniform = this.scale.x === this.scale.y && this.scale.y === this.scale.z;\n    const isUniform = scale.x === scale.y && scale.y === scale.z;\n\n    if (!(wasUniform && isUniform)) {\n      // Non-uniform scaling. Need to update normals.\n      this.updateNormals();\n    }\n\n    this.scale.copy(scale);\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n  }\n  /**\n   * Compute the normals of the faces. Will save in the `.normals` array.\n   */\n\n\n  updateNormals() {\n    const n = computeNormals_n; // Generate normals\n\n    const normals = this.normals;\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      const i3 = i * 3;\n      const a = this.indices[i3];\n      const b = this.indices[i3 + 1];\n      const c = this.indices[i3 + 2];\n      this.getVertex(a, va);\n      this.getVertex(b, vb);\n      this.getVertex(c, vc);\n      Trimesh.computeNormal(vb, va, vc, n);\n      normals[i3] = n.x;\n      normals[i3 + 1] = n.y;\n      normals[i3 + 2] = n.z;\n    }\n  }\n  /**\n   * Update the `.edges` property\n   */\n\n\n  updateEdges() {\n    const edges = {};\n\n    const add = (a, b) => {\n      const key = a < b ? `${a}_${b}` : `${b}_${a}`;\n      edges[key] = true;\n    };\n\n    for (let i = 0; i < this.indices.length / 3; i++) {\n      const i3 = i * 3;\n      const a = this.indices[i3];\n      const b = this.indices[i3 + 1];\n      const c = this.indices[i3 + 2];\n      add(a, b);\n      add(b, c);\n      add(c, a);\n    }\n\n    const keys = Object.keys(edges);\n    this.edges = new Int16Array(keys.length * 2);\n\n    for (let i = 0; i < keys.length; i++) {\n      const indices = keys[i].split('_');\n      this.edges[2 * i] = parseInt(indices[0], 10);\n      this.edges[2 * i + 1] = parseInt(indices[1], 10);\n    }\n  }\n  /**\n   * Get an edge vertex\n   * @param firstOrSecond 0 or 1, depending on which one of the vertices you need.\n   * @param vertexStore Where to store the result\n   */\n\n\n  getEdgeVertex(edgeIndex, firstOrSecond, vertexStore) {\n    const vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n    this.getVertex(vertexIndex, vertexStore);\n  }\n  /**\n   * Get a vector along an edge.\n   */\n\n\n  getEdgeVector(edgeIndex, vectorStore) {\n    const va = getEdgeVector_va;\n    const vb = getEdgeVector_vb;\n    this.getEdgeVertex(edgeIndex, 0, va);\n    this.getEdgeVertex(edgeIndex, 1, vb);\n    vb.vsub(va, vectorStore);\n  }\n  /**\n   * Get face normal given 3 vertices\n   */\n\n\n  static computeNormal(va, vb, vc, target) {\n    vb.vsub(va, ab);\n    vc.vsub(vb, cb);\n    cb.cross(ab, target);\n\n    if (!target.isZero()) {\n      target.normalize();\n    }\n  }\n  /**\n   * Get vertex i.\n   * @return The \"out\" vector object\n   */\n\n\n  getVertex(i, out) {\n    const scale = this.scale;\n\n    this._getUnscaledVertex(i, out);\n\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  }\n  /**\n   * Get raw vertex i\n   * @return The \"out\" vector object\n   */\n\n\n  _getUnscaledVertex(i, out) {\n    const i3 = i * 3;\n    const vertices = this.vertices;\n    return out.set(vertices[i3], vertices[i3 + 1], vertices[i3 + 2]);\n  }\n  /**\n   * Get a vertex from the trimesh,transformed by the given position and quaternion.\n   * @return The \"out\" vector object\n   */\n\n\n  getWorldVertex(i, pos, quat, out) {\n    this.getVertex(i, out);\n    Transform.pointToWorldFrame(pos, quat, out, out);\n    return out;\n  }\n  /**\n   * Get the three vertices for triangle i.\n   */\n\n\n  getTriangleVertices(i, a, b, c) {\n    const i3 = i * 3;\n    this.getVertex(this.indices[i3], a);\n    this.getVertex(this.indices[i3 + 1], b);\n    this.getVertex(this.indices[i3 + 2], c);\n  }\n  /**\n   * Compute the normal of triangle i.\n   * @return The \"target\" vector object\n   */\n\n\n  getNormal(i, target) {\n    const i3 = i * 3;\n    return target.set(this.normals[i3], this.normals[i3 + 1], this.normals[i3 + 2]);\n  }\n  /**\n   * @return The \"target\" vector object\n   */\n\n\n  calculateLocalInertia(mass, target) {\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabb);\n    const x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x;\n    const y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y;\n    const z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n    return target.set(1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x));\n  }\n  /**\n   * Compute the local AABB for the trimesh\n   */\n\n\n  computeLocalAABB(aabb) {\n    const l = aabb.lowerBound;\n    const u = aabb.upperBound;\n    const n = this.vertices.length;\n    this.vertices;\n    const v = computeLocalAABB_worldVert;\n    this.getVertex(0, v);\n    l.copy(v);\n    u.copy(v);\n\n    for (let i = 0; i !== n; i++) {\n      this.getVertex(i, v);\n\n      if (v.x < l.x) {\n        l.x = v.x;\n      } else if (v.x > u.x) {\n        u.x = v.x;\n      }\n\n      if (v.y < l.y) {\n        l.y = v.y;\n      } else if (v.y > u.y) {\n        u.y = v.y;\n      }\n\n      if (v.z < l.z) {\n        l.z = v.z;\n      } else if (v.z > u.z) {\n        u.z = v.z;\n      }\n    }\n  }\n  /**\n   * Update the `.aabb` property\n   */\n\n\n  updateAABB() {\n    this.computeLocalAABB(this.aabb);\n  }\n  /**\n   * Will update the `.boundingSphereRadius` property\n   */\n\n\n  updateBoundingSphereRadius() {\n    // Assume points are distributed with local (0,0,0) as center\n    let max2 = 0;\n    const vertices = this.vertices;\n    const v = new Vec3();\n\n    for (let i = 0, N = vertices.length / 3; i !== N; i++) {\n      this.getVertex(i, v);\n      const norm2 = v.lengthSquared();\n\n      if (norm2 > max2) {\n        max2 = norm2;\n      }\n    }\n\n    this.boundingSphereRadius = Math.sqrt(max2);\n  }\n  /**\n   * calculateWorldAABB\n   */\n\n\n  calculateWorldAABB(pos, quat, min, max) {\n    /*\n        const n = this.vertices.length / 3,\n            verts = this.vertices;\n        const minx,miny,minz,maxx,maxy,maxz;\n         const v = tempWorldVertex;\n        for(let i=0; i<n; i++){\n            this.getVertex(i, v);\n            quat.vmult(v, v);\n            pos.vadd(v, v);\n            if (v.x < minx || minx===undefined){\n                minx = v.x;\n            } else if(v.x > maxx || maxx===undefined){\n                maxx = v.x;\n            }\n             if (v.y < miny || miny===undefined){\n                miny = v.y;\n            } else if(v.y > maxy || maxy===undefined){\n                maxy = v.y;\n            }\n             if (v.z < minz || minz===undefined){\n                minz = v.z;\n            } else if(v.z > maxz || maxz===undefined){\n                maxz = v.z;\n            }\n        }\n        min.set(minx,miny,minz);\n        max.set(maxx,maxy,maxz);\n        */\n    // Faster approximation using local AABB\n    const frame = calculateWorldAABB_frame;\n    const result = calculateWorldAABB_aabb;\n    frame.position = pos;\n    frame.quaternion = quat;\n    this.aabb.toWorldFrame(frame, result);\n    min.copy(result.lowerBound);\n    max.copy(result.upperBound);\n  }\n  /**\n   * Get approximate volume\n   */\n\n\n  volume() {\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n  }\n  /**\n   * Create a Trimesh instance, shaped as a torus.\n   */\n\n\n  static createTorus(radius, tube, radialSegments, tubularSegments, arc) {\n    if (radius === void 0) {\n      radius = 1;\n    }\n\n    if (tube === void 0) {\n      tube = 0.5;\n    }\n\n    if (radialSegments === void 0) {\n      radialSegments = 8;\n    }\n\n    if (tubularSegments === void 0) {\n      tubularSegments = 6;\n    }\n\n    if (arc === void 0) {\n      arc = Math.PI * 2;\n    }\n\n    const vertices = [];\n    const indices = [];\n\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = i / tubularSegments * arc;\n        const v = j / radialSegments * Math.PI * 2;\n        const x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        const y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        const z = tube * Math.sin(v);\n        vertices.push(x, y, z);\n      }\n    }\n\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    return new Trimesh(vertices, indices);\n  }\n\n}\nconst computeNormals_n = new Vec3();\nconst unscaledAABB = new AABB();\nconst getEdgeVector_va = new Vec3();\nconst getEdgeVector_vb = new Vec3();\nconst cb = new Vec3();\nconst ab = new Vec3();\nconst va = new Vec3();\nconst vb = new Vec3();\nconst vc = new Vec3();\nconst cli_aabb = new AABB();\nconst computeLocalAABB_worldVert = new Vec3();\nconst calculateWorldAABB_frame = new Transform();\nconst calculateWorldAABB_aabb = new AABB();\n\n/**\n * Constraint equation solver base class.\n */\nclass Solver {\n  /**\n   * All equations to be solved\n   */\n\n  /**\n   * @todo remove useless constructor\n   */\n  constructor() {\n    this.equations = [];\n  }\n  /**\n   * Should be implemented in subclasses!\n   * @todo use abstract\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    return (// Should return the number of iterations done!\n      0\n    );\n  }\n  /**\n   * Add an equation\n   */\n\n\n  addEquation(eq) {\n    if (eq.enabled && !eq.bi.isTrigger && !eq.bj.isTrigger) {\n      this.equations.push(eq);\n    }\n  }\n  /**\n   * Remove an equation\n   */\n\n\n  removeEquation(eq) {\n    const eqs = this.equations;\n    const i = eqs.indexOf(eq);\n\n    if (i !== -1) {\n      eqs.splice(i, 1);\n    }\n  }\n  /**\n   * Add all equations\n   */\n\n\n  removeAllEquations() {\n    this.equations.length = 0;\n  }\n\n}\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n */\nclass GSSolver extends Solver {\n  /**\n   * The number of solver iterations determines quality of the constraints in the world.\n   * The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   */\n\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   */\n\n  /**\n   * @todo remove useless constructor\n   */\n  constructor() {\n    super();\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n  }\n  /**\n   * Solve\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    let iter = 0;\n    const maxIter = this.iterations;\n    const tolSquared = this.tolerance * this.tolerance;\n    const equations = this.equations;\n    const Neq = equations.length;\n    const bodies = world.bodies;\n    const Nbodies = bodies.length;\n    const h = dt;\n    let B;\n    let invC;\n    let deltalambda;\n    let deltalambdaTot;\n    let GWlambda;\n    let lambdaj; // Update solve mass\n\n    if (Neq !== 0) {\n      for (let i = 0; i !== Nbodies; i++) {\n        bodies[i].updateSolveMassProperties();\n      }\n    } // Things that do not change during iteration can be computed once\n\n\n    const invCs = GSSolver_solve_invCs;\n    const Bs = GSSolver_solve_Bs;\n    const lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n\n    for (let i = 0; i !== Neq; i++) {\n      const c = equations[i];\n      lambda[i] = 0.0;\n      Bs[i] = c.computeB(h);\n      invCs[i] = 1.0 / c.computeC();\n    }\n\n    if (Neq !== 0) {\n      // Reset vlambda\n      for (let i = 0; i !== Nbodies; i++) {\n        const b = bodies[i];\n        const vlambda = b.vlambda;\n        const wlambda = b.wlambda;\n        vlambda.set(0, 0, 0);\n        wlambda.set(0, 0, 0);\n      } // Iterate over equations\n\n\n      for (iter = 0; iter !== maxIter; iter++) {\n        // Accumulate the total error for each iteration.\n        deltalambdaTot = 0.0;\n\n        for (let j = 0; j !== Neq; j++) {\n          const c = equations[j]; // Compute iteration\n\n          B = Bs[j];\n          invC = invCs[j];\n          lambdaj = lambda[j];\n          GWlambda = c.computeGWlambda();\n          deltalambda = invC * (B - GWlambda - c.eps * lambdaj); // Clamp if we are not within the min/max interval\n\n          if (lambdaj + deltalambda < c.minForce) {\n            deltalambda = c.minForce - lambdaj;\n          } else if (lambdaj + deltalambda > c.maxForce) {\n            deltalambda = c.maxForce - lambdaj;\n          }\n\n          lambda[j] += deltalambda;\n          deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n          c.addToWlambda(deltalambda);\n        } // If the total error is small enough - stop iterate\n\n\n        if (deltalambdaTot * deltalambdaTot < tolSquared) {\n          break;\n        }\n      } // Add result to velocity\n\n\n      for (let i = 0; i !== Nbodies; i++) {\n        const b = bodies[i];\n        const v = b.velocity;\n        const w = b.angularVelocity;\n        b.vlambda.vmul(b.linearFactor, b.vlambda);\n        v.vadd(b.vlambda, v);\n        b.wlambda.vmul(b.angularFactor, b.wlambda);\n        w.vadd(b.wlambda, w);\n      } // Set the `.multiplier` property of each equation\n\n\n      let l = equations.length;\n      const invDt = 1 / h;\n\n      while (l--) {\n        equations[l].multiplier = lambda[l] * invDt;\n      }\n    }\n\n    return iter;\n  }\n\n} // Just temporary number holders that we want to reuse each iteration.\n\nconst GSSolver_solve_lambda = [];\nconst GSSolver_solve_invCs = [];\nconst GSSolver_solve_Bs = [];\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n */\nclass SplitSolver extends Solver {\n  /**\n   * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   */\n\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   */\n\n  /** subsolver */\n  constructor(subsolver) {\n    super();\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = []; // Create needed nodes, reuse if possible\n\n    while (this.nodePool.length < 128) {\n      this.nodePool.push(this.createNode());\n    }\n  }\n  /**\n   * createNode\n   */\n\n\n  createNode() {\n    return {\n      body: null,\n      children: [],\n      eqs: [],\n      visited: false\n    };\n  }\n  /**\n   * Solve the subsystems\n   * @return number of iterations performed\n   */\n\n\n  solve(dt, world) {\n    const nodes = SplitSolver_solve_nodes;\n    const nodePool = this.nodePool;\n    const bodies = world.bodies;\n    const equations = this.equations;\n    const Neq = equations.length;\n    const Nbodies = bodies.length;\n    const subsolver = this.subsolver; // Create needed nodes, reuse if possible\n\n    while (nodePool.length < Nbodies) {\n      nodePool.push(this.createNode());\n    }\n\n    nodes.length = Nbodies;\n\n    for (let i = 0; i < Nbodies; i++) {\n      nodes[i] = nodePool[i];\n    } // Reset node values\n\n\n    for (let i = 0; i !== Nbodies; i++) {\n      const node = nodes[i];\n      node.body = bodies[i];\n      node.children.length = 0;\n      node.eqs.length = 0;\n      node.visited = false;\n    }\n\n    for (let k = 0; k !== Neq; k++) {\n      const eq = equations[k];\n      const i = bodies.indexOf(eq.bi);\n      const j = bodies.indexOf(eq.bj);\n      const ni = nodes[i];\n      const nj = nodes[j];\n      ni.children.push(nj);\n      ni.eqs.push(eq);\n      nj.children.push(ni);\n      nj.eqs.push(eq);\n    }\n\n    let child;\n    let n = 0;\n    let eqs = SplitSolver_solve_eqs;\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n    const dummyWorld = SplitSolver_solve_dummyWorld;\n\n    while (child = getUnvisitedNode(nodes)) {\n      eqs.length = 0;\n      dummyWorld.bodies.length = 0;\n      bfs(child, visitFunc, dummyWorld.bodies, eqs);\n      const Neqs = eqs.length;\n      eqs = eqs.sort(sortById);\n\n      for (let i = 0; i !== Neqs; i++) {\n        subsolver.addEquation(eqs[i]);\n      }\n\n      subsolver.solve(dt, dummyWorld);\n      subsolver.removeAllEquations();\n      n++;\n    }\n\n    return n;\n  }\n\n} // Returns the number of subsystems\n\nconst SplitSolver_solve_nodes = []; // All allocated node objects\n\nconst SplitSolver_solve_eqs = []; // Temp array\n\nconst SplitSolver_solve_dummyWorld = {\n  bodies: []\n}; // Temp object\n\nconst STATIC = Body.STATIC;\n\nfunction getUnvisitedNode(nodes) {\n  const Nnodes = nodes.length;\n\n  for (let i = 0; i !== Nnodes; i++) {\n    const node = nodes[i];\n\n    if (!node.visited && !(node.body.type & STATIC)) {\n      return node;\n    }\n  }\n\n  return false;\n}\n\nconst queue = [];\n\nfunction bfs(root, visitFunc, bds, eqs) {\n  queue.push(root);\n  root.visited = true;\n  visitFunc(root, bds, eqs);\n\n  while (queue.length) {\n    const node = queue.pop(); // Loop over unvisited child nodes\n\n    let child;\n\n    while (child = getUnvisitedNode(node.children)) {\n      child.visited = true;\n      visitFunc(child, bds, eqs);\n      queue.push(child);\n    }\n  }\n}\n\nfunction visitFunc(node, bds, eqs) {\n  bds.push(node.body);\n  const Neqs = node.eqs.length;\n\n  for (let i = 0; i !== Neqs; i++) {\n    const eq = node.eqs[i];\n\n    if (!eqs.includes(eq)) {\n      eqs.push(eq);\n    }\n  }\n}\n\nfunction sortById(a, b) {\n  return b.id - a.id;\n}\n\n/**\n * For pooling objects that can be reused.\n */\nclass Pool {\n  constructor() {\n    this.objects = [];\n    this.type = Object;\n  }\n\n  /**\n   * Release an object after use\n   */\n  release() {\n    const Nargs = arguments.length;\n\n    for (let i = 0; i !== Nargs; i++) {\n      this.objects.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n\n    return this;\n  }\n  /**\n   * Get an object\n   */\n\n\n  get() {\n    if (this.objects.length === 0) {\n      return this.constructObject();\n    } else {\n      return this.objects.pop();\n    }\n  }\n  /**\n   * Construct an object. Should be implemented in each subclass.\n   */\n\n\n  constructObject() {\n    throw new Error('constructObject() not implemented in this Pool subclass yet!');\n  }\n  /**\n   * @return Self, for chaining\n   */\n\n\n  resize(size) {\n    const objects = this.objects;\n\n    while (objects.length > size) {\n      objects.pop();\n    }\n\n    while (objects.length < size) {\n      objects.push(this.constructObject());\n    }\n\n    return this;\n  }\n\n}\n\n/**\n * Vec3Pool\n */\n\nclass Vec3Pool extends Pool {\n  constructor() {\n    super(...arguments);\n    this.type = Vec3;\n  }\n\n  /**\n   * Construct a vector\n   */\n  constructObject() {\n    return new Vec3();\n  }\n\n}\n\n// Naming rule: based of the order in SHAPE_TYPES,\n// the first part of the method is formed by the\n// shape type that comes before, in the second part\n// there is the shape type that comes after in the SHAPE_TYPES list\nconst COLLISION_TYPES = {\n  sphereSphere: Shape.types.SPHERE,\n  spherePlane: Shape.types.SPHERE | Shape.types.PLANE,\n  boxBox: Shape.types.BOX | Shape.types.BOX,\n  sphereBox: Shape.types.SPHERE | Shape.types.BOX,\n  planeBox: Shape.types.PLANE | Shape.types.BOX,\n  convexConvex: Shape.types.CONVEXPOLYHEDRON,\n  sphereConvex: Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON,\n  planeConvex: Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON,\n  boxConvex: Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON,\n  sphereHeightfield: Shape.types.SPHERE | Shape.types.HEIGHTFIELD,\n  boxHeightfield: Shape.types.BOX | Shape.types.HEIGHTFIELD,\n  convexHeightfield: Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD,\n  sphereParticle: Shape.types.PARTICLE | Shape.types.SPHERE,\n  planeParticle: Shape.types.PLANE | Shape.types.PARTICLE,\n  boxParticle: Shape.types.BOX | Shape.types.PARTICLE,\n  convexParticle: Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON,\n  cylinderCylinder: Shape.types.CYLINDER,\n  sphereCylinder: Shape.types.SPHERE | Shape.types.CYLINDER,\n  planeCylinder: Shape.types.PLANE | Shape.types.CYLINDER,\n  boxCylinder: Shape.types.BOX | Shape.types.CYLINDER,\n  convexCylinder: Shape.types.CONVEXPOLYHEDRON | Shape.types.CYLINDER,\n  heightfieldCylinder: Shape.types.HEIGHTFIELD | Shape.types.CYLINDER,\n  particleCylinder: Shape.types.PARTICLE | Shape.types.CYLINDER,\n  sphereTrimesh: Shape.types.SPHERE | Shape.types.TRIMESH,\n  planeTrimesh: Shape.types.PLANE | Shape.types.TRIMESH\n};\n\n/**\n * Helper class for the World. Generates ContactEquations.\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo should move methods to prototype\n */\nclass Narrowphase {\n  /**\n   * Internal storage of pooled contact points.\n   */\n\n  /**\n   * Pooled vectors.\n   */\n  get [COLLISION_TYPES.sphereSphere]() {\n    return this.sphereSphere;\n  }\n\n  get [COLLISION_TYPES.spherePlane]() {\n    return this.spherePlane;\n  }\n\n  get [COLLISION_TYPES.boxBox]() {\n    return this.boxBox;\n  }\n\n  get [COLLISION_TYPES.sphereBox]() {\n    return this.sphereBox;\n  }\n\n  get [COLLISION_TYPES.planeBox]() {\n    return this.planeBox;\n  }\n\n  get [COLLISION_TYPES.convexConvex]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.sphereConvex]() {\n    return this.sphereConvex;\n  }\n\n  get [COLLISION_TYPES.planeConvex]() {\n    return this.planeConvex;\n  }\n\n  get [COLLISION_TYPES.boxConvex]() {\n    return this.boxConvex;\n  }\n\n  get [COLLISION_TYPES.sphereHeightfield]() {\n    return this.sphereHeightfield;\n  }\n\n  get [COLLISION_TYPES.boxHeightfield]() {\n    return this.boxHeightfield;\n  }\n\n  get [COLLISION_TYPES.convexHeightfield]() {\n    return this.convexHeightfield;\n  }\n\n  get [COLLISION_TYPES.sphereParticle]() {\n    return this.sphereParticle;\n  }\n\n  get [COLLISION_TYPES.planeParticle]() {\n    return this.planeParticle;\n  }\n\n  get [COLLISION_TYPES.boxParticle]() {\n    return this.boxParticle;\n  }\n\n  get [COLLISION_TYPES.convexParticle]() {\n    return this.convexParticle;\n  }\n\n  get [COLLISION_TYPES.cylinderCylinder]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.sphereCylinder]() {\n    return this.sphereConvex;\n  }\n\n  get [COLLISION_TYPES.planeCylinder]() {\n    return this.planeConvex;\n  }\n\n  get [COLLISION_TYPES.boxCylinder]() {\n    return this.boxConvex;\n  }\n\n  get [COLLISION_TYPES.convexCylinder]() {\n    return this.convexConvex;\n  }\n\n  get [COLLISION_TYPES.heightfieldCylinder]() {\n    return this.heightfieldCylinder;\n  }\n\n  get [COLLISION_TYPES.particleCylinder]() {\n    return this.particleCylinder;\n  }\n\n  get [COLLISION_TYPES.sphereTrimesh]() {\n    return this.sphereTrimesh;\n  }\n\n  get [COLLISION_TYPES.planeTrimesh]() {\n    return this.planeTrimesh;\n  } // get [COLLISION_TYPES.convexTrimesh]() {\n  //   return this.convexTrimesh\n  // }\n\n\n  constructor(world) {\n    this.contactPointPool = [];\n    this.frictionEquationPool = [];\n    this.result = [];\n    this.frictionResult = [];\n    this.v3pool = new Vec3Pool();\n    this.world = world;\n    this.currentContactMaterial = world.defaultContactMaterial;\n    this.enableFrictionReduction = false;\n  }\n  /**\n   * Make a contact object, by using the internal pool or creating a new one.\n   */\n\n\n  createContactEquation(bi, bj, si, sj, overrideShapeA, overrideShapeB) {\n    let c;\n\n    if (this.contactPointPool.length) {\n      c = this.contactPointPool.pop();\n      c.bi = bi;\n      c.bj = bj;\n    } else {\n      c = new ContactEquation(bi, bj);\n    }\n\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n    const cm = this.currentContactMaterial;\n    c.restitution = cm.restitution;\n    c.setSpookParams(cm.contactEquationStiffness, cm.contactEquationRelaxation, this.world.dt);\n    const matA = si.material || bi.material;\n    const matB = sj.material || bj.material;\n\n    if (matA && matB && matA.restitution >= 0 && matB.restitution >= 0) {\n      c.restitution = matA.restitution * matB.restitution;\n    }\n\n    c.si = overrideShapeA || si;\n    c.sj = overrideShapeB || sj;\n    return c;\n  }\n\n  createFrictionEquationsFromContact(contactEquation, outArray) {\n    const bodyA = contactEquation.bi;\n    const bodyB = contactEquation.bj;\n    const shapeA = contactEquation.si;\n    const shapeB = contactEquation.sj;\n    const world = this.world;\n    const cm = this.currentContactMaterial; // If friction or restitution were specified in the material, use them\n\n    let friction = cm.friction;\n    const matA = shapeA.material || bodyA.material;\n    const matB = shapeB.material || bodyB.material;\n\n    if (matA && matB && matA.friction >= 0 && matB.friction >= 0) {\n      friction = matA.friction * matB.friction;\n    }\n\n    if (friction > 0) {\n      // Create 2 tangent equations\n      const mug = friction * world.gravity.length();\n      let reducedMass = bodyA.invMass + bodyB.invMass;\n\n      if (reducedMass > 0) {\n        reducedMass = 1 / reducedMass;\n      }\n\n      const pool = this.frictionEquationPool;\n      const c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n      const c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n      c1.bi = c2.bi = bodyA;\n      c1.bj = c2.bj = bodyB;\n      c1.minForce = c2.minForce = -mug * reducedMass;\n      c1.maxForce = c2.maxForce = mug * reducedMass; // Copy over the relative vectors\n\n      c1.ri.copy(contactEquation.ri);\n      c1.rj.copy(contactEquation.rj);\n      c2.ri.copy(contactEquation.ri);\n      c2.rj.copy(contactEquation.rj); // Construct tangents\n\n      contactEquation.ni.tangents(c1.t, c2.t); // Set spook params\n\n      c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n      c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n      c1.enabled = c2.enabled = contactEquation.enabled;\n      outArray.push(c1, c2);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Take the average N latest contact point on the plane.\n   */\n\n\n  createFrictionFromAverage(numContacts) {\n    // The last contactEquation\n    let c = this.result[this.result.length - 1]; // Create the result: two \"average\" friction equations\n\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n      return;\n    }\n\n    const f1 = this.frictionResult[this.frictionResult.length - 2];\n    const f2 = this.frictionResult[this.frictionResult.length - 1];\n    averageNormal.setZero();\n    averageContactPointA.setZero();\n    averageContactPointB.setZero();\n    const bodyA = c.bi;\n    c.bj;\n\n    for (let i = 0; i !== numContacts; i++) {\n      c = this.result[this.result.length - 1 - i];\n\n      if (c.bi !== bodyA) {\n        averageNormal.vadd(c.ni, averageNormal);\n        averageContactPointA.vadd(c.ri, averageContactPointA);\n        averageContactPointB.vadd(c.rj, averageContactPointB);\n      } else {\n        averageNormal.vsub(c.ni, averageNormal);\n        averageContactPointA.vadd(c.rj, averageContactPointA);\n        averageContactPointB.vadd(c.ri, averageContactPointB);\n      }\n    }\n\n    const invNumContacts = 1 / numContacts;\n    averageContactPointA.scale(invNumContacts, f1.ri);\n    averageContactPointB.scale(invNumContacts, f1.rj);\n    f2.ri.copy(f1.ri); // Should be the same\n\n    f2.rj.copy(f1.rj);\n    averageNormal.normalize();\n    averageNormal.tangents(f1.t, f2.t); // return eq;\n  }\n  /**\n   * Generate all contacts between a list of body pairs\n   * @param p1 Array of body indices\n   * @param p2 Array of body indices\n   * @param result Array to store generated contacts\n   * @param oldcontacts Optional. Array of reusable contact objects\n   */\n\n\n  getContacts(p1, p2, world, result, oldcontacts, frictionResult, frictionPool) {\n    // Save old contact objects\n    this.contactPointPool = oldcontacts;\n    this.frictionEquationPool = frictionPool;\n    this.result = result;\n    this.frictionResult = frictionResult;\n    const qi = tmpQuat1;\n    const qj = tmpQuat2;\n    const xi = tmpVec1;\n    const xj = tmpVec2;\n\n    for (let k = 0, N = p1.length; k !== N; k++) {\n      // Get current collision bodies\n      const bi = p1[k];\n      const bj = p2[k]; // Get contact material\n\n      let bodyContactMaterial = null;\n\n      if (bi.material && bj.material) {\n        bodyContactMaterial = world.getContactMaterial(bi.material, bj.material) || null;\n      }\n\n      const justTest = bi.type & Body.KINEMATIC && bj.type & Body.STATIC || bi.type & Body.STATIC && bj.type & Body.KINEMATIC || bi.type & Body.KINEMATIC && bj.type & Body.KINEMATIC;\n\n      for (let i = 0; i < bi.shapes.length; i++) {\n        bi.quaternion.mult(bi.shapeOrientations[i], qi);\n        bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n        xi.vadd(bi.position, xi);\n        const si = bi.shapes[i];\n\n        for (let j = 0; j < bj.shapes.length; j++) {\n          // Compute world transform of shapes\n          bj.quaternion.mult(bj.shapeOrientations[j], qj);\n          bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n          xj.vadd(bj.position, xj);\n          const sj = bj.shapes[j];\n\n          if (!(si.collisionFilterMask & sj.collisionFilterGroup && sj.collisionFilterMask & si.collisionFilterGroup)) {\n            continue;\n          }\n\n          if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n            continue;\n          } // Get collision material\n\n\n          let shapeContactMaterial = null;\n\n          if (si.material && sj.material) {\n            shapeContactMaterial = world.getContactMaterial(si.material, sj.material) || null;\n          }\n\n          this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial; // Get contacts\n\n          const resolverIndex = si.type | sj.type;\n          const resolver = this[resolverIndex];\n\n          if (resolver) {\n            let retval = false; // TO DO: investigate why sphereParticle and convexParticle\n            // resolvers expect si and sj shapes to be in reverse order\n            // (i.e. larger integer value type first instead of smaller first)\n\n            if (si.type < sj.type) {\n              retval = resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n            } else {\n              retval = resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj, justTest);\n            }\n\n            if (retval && justTest) {\n              // Register overlap\n              world.shapeOverlapKeeper.set(si.id, sj.id);\n              world.bodyOverlapKeeper.set(bi.id, bj.id);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  sphereSphere(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    if (justTest) {\n      return xi.distanceSquared(xj) < (si.radius + sj.radius) ** 2;\n    } // We will have only one contact in this case\n\n\n    const contactEq = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n    xj.vsub(xi, contactEq.ni);\n    contactEq.ni.normalize(); // Contact point locations\n\n    contactEq.ri.copy(contactEq.ni);\n    contactEq.rj.copy(contactEq.ni);\n    contactEq.ri.scale(si.radius, contactEq.ri);\n    contactEq.rj.scale(-sj.radius, contactEq.rj);\n    contactEq.ri.vadd(xi, contactEq.ri);\n    contactEq.ri.vsub(bi.position, contactEq.ri);\n    contactEq.rj.vadd(xj, contactEq.rj);\n    contactEq.rj.vsub(bj.position, contactEq.rj);\n    this.result.push(contactEq);\n    this.createFrictionEquationsFromContact(contactEq, this.frictionResult);\n  }\n\n  spherePlane(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    // We will have one contact in this case\n    const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n    r.ni.set(0, 0, 1);\n    qj.vmult(r.ni, r.ni);\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\n\n    r.ni.normalize(); // Needed?\n    // Vector from sphere center to contact point\n\n    r.ni.scale(si.radius, r.ri); // Project down sphere on plane\n\n    xi.vsub(xj, point_on_plane_to_sphere);\n    r.ni.scale(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho, r.rj); // The sphere position projected to plane\n\n    if (-point_on_plane_to_sphere.dot(r.ni) <= si.radius) {\n      if (justTest) {\n        return true;\n      } // Make it relative to the body\n\n\n      const ri = r.ri;\n      const rj = r.rj;\n      ri.vadd(xi, ri);\n      ri.vsub(bi.position, ri);\n      rj.vadd(xj, rj);\n      rj.vsub(bj.position, rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  boxBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  sphereBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    const v3pool = this.v3pool; // we refer to the box as body j\n\n    const sides = sphereBox_sides;\n    xi.vsub(xj, box_to_sphere);\n    sj.getSideNormals(sides, qj);\n    const R = si.radius;\n\n    let found = false; // Store the resulting side penetration info\n\n    const side_ns = sphereBox_side_ns;\n    const side_ns1 = sphereBox_side_ns1;\n    const side_ns2 = sphereBox_side_ns2;\n    let side_h = null;\n    let side_penetrations = 0;\n    let side_dot1 = 0;\n    let side_dot2 = 0;\n    let side_distance = null;\n\n    for (let idx = 0, nsides = sides.length; idx !== nsides && found === false; idx++) {\n      // Get the plane side normal (ns)\n      const ns = sphereBox_ns;\n      ns.copy(sides[idx]);\n      const h = ns.length();\n      ns.normalize(); // The normal/distance dot product tells which side of the plane we are\n\n      const dot = box_to_sphere.dot(ns);\n\n      if (dot < h + R && dot > 0) {\n        // Intersects plane. Now check the other two dimensions\n        const ns1 = sphereBox_ns1;\n        const ns2 = sphereBox_ns2;\n        ns1.copy(sides[(idx + 1) % 3]);\n        ns2.copy(sides[(idx + 2) % 3]);\n        const h1 = ns1.length();\n        const h2 = ns2.length();\n        ns1.normalize();\n        ns2.normalize();\n        const dot1 = box_to_sphere.dot(ns1);\n        const dot2 = box_to_sphere.dot(ns2);\n\n        if (dot1 < h1 && dot1 > -h1 && dot2 < h2 && dot2 > -h2) {\n          const dist = Math.abs(dot - h - R);\n\n          if (side_distance === null || dist < side_distance) {\n            side_distance = dist;\n            side_dot1 = dot1;\n            side_dot2 = dot2;\n            side_h = h;\n            side_ns.copy(ns);\n            side_ns1.copy(ns1);\n            side_ns2.copy(ns2);\n            side_penetrations++;\n\n            if (justTest) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    if (side_penetrations) {\n      found = true;\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      side_ns.scale(-R, r.ri); // Sphere r\n\n      r.ni.copy(side_ns);\n      r.ni.negate(r.ni); // Normal should be out of sphere\n\n      side_ns.scale(side_h, side_ns);\n      side_ns1.scale(side_dot1, side_ns1);\n      side_ns.vadd(side_ns1, side_ns);\n      side_ns2.scale(side_dot2, side_ns2);\n      side_ns.vadd(side_ns2, r.rj); // Make relative to bodies\n\n      r.ri.vadd(xi, r.ri);\n      r.ri.vsub(bi.position, r.ri);\n      r.rj.vadd(xj, r.rj);\n      r.rj.vsub(bj.position, r.rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    } // Check corners\n\n\n    let rj = v3pool.get();\n    const sphere_to_corner = sphereBox_sphere_to_corner;\n\n    for (let j = 0; j !== 2 && !found; j++) {\n      for (let k = 0; k !== 2 && !found; k++) {\n        for (let l = 0; l !== 2 && !found; l++) {\n          rj.set(0, 0, 0);\n\n          if (j) {\n            rj.vadd(sides[0], rj);\n          } else {\n            rj.vsub(sides[0], rj);\n          }\n\n          if (k) {\n            rj.vadd(sides[1], rj);\n          } else {\n            rj.vsub(sides[1], rj);\n          }\n\n          if (l) {\n            rj.vadd(sides[2], rj);\n          } else {\n            rj.vsub(sides[2], rj);\n          } // World position of corner\n\n\n          xj.vadd(rj, sphere_to_corner);\n          sphere_to_corner.vsub(xi, sphere_to_corner);\n\n          if (sphere_to_corner.lengthSquared() < R * R) {\n            if (justTest) {\n              return true;\n            }\n\n            found = true;\n            const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            r.ri.copy(sphere_to_corner);\n            r.ri.normalize();\n            r.ni.copy(r.ri);\n            r.ri.scale(R, r.ri);\n            r.rj.copy(rj); // Make relative to bodies\n\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n          }\n        }\n      }\n    }\n\n    v3pool.release(rj);\n    rj = null; // Check edges\n\n    const edgeTangent = v3pool.get();\n    const edgeCenter = v3pool.get();\n    const r = v3pool.get(); // r = edge center to sphere center\n\n    const orthogonal = v3pool.get();\n    const dist = v3pool.get();\n    const Nsides = sides.length;\n\n    for (let j = 0; j !== Nsides && !found; j++) {\n      for (let k = 0; k !== Nsides && !found; k++) {\n        if (j % 3 !== k % 3) {\n          // Get edge tangent\n          sides[k].cross(sides[j], edgeTangent);\n          edgeTangent.normalize();\n          sides[j].vadd(sides[k], edgeCenter);\n          r.copy(xi);\n          r.vsub(edgeCenter, r);\n          r.vsub(xj, r);\n          const orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n\n          edgeTangent.scale(orthonorm, orthogonal); // Vector from edge center to sphere center in the tangent direction\n          // Find the third side orthogonal to this one\n\n          let l = 0;\n\n          while (l === j % 3 || l === k % 3) {\n            l++;\n          } // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n\n\n          dist.copy(xi);\n          dist.vsub(orthogonal, dist);\n          dist.vsub(edgeCenter, dist);\n          dist.vsub(xj, dist); // Distances in tangent direction and distance in the plane orthogonal to it\n\n          const tdist = Math.abs(orthonorm);\n          const ndist = dist.length();\n\n          if (tdist < sides[l].length() && ndist < R) {\n            if (justTest) {\n              return true;\n            }\n\n            found = true;\n            const res = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            edgeCenter.vadd(orthogonal, res.rj); // box rj\n\n            res.rj.copy(res.rj);\n            dist.negate(res.ni);\n            res.ni.normalize();\n            res.ri.copy(res.rj);\n            res.ri.vadd(xj, res.ri);\n            res.ri.vsub(xi, res.ri);\n            res.ri.normalize();\n            res.ri.scale(R, res.ri); // Make relative to bodies\n\n            res.ri.vadd(xi, res.ri);\n            res.ri.vsub(bi.position, res.ri);\n            res.rj.vadd(xj, res.rj);\n            res.rj.vsub(bj.position, res.rj);\n            this.result.push(res);\n            this.createFrictionEquationsFromContact(res, this.frictionResult);\n          }\n        }\n      }\n    }\n\n    v3pool.release(edgeTangent, edgeCenter, r, orthogonal, dist);\n  }\n\n  planeBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    sj.convexPolyhedronRepresentation.id = sj.id;\n    return this.planeConvex(si, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest, faceListA, faceListB) {\n    const sepAxis = convexConvex_sepAxis;\n\n    if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n      return;\n    }\n\n    if (si.findSeparatingAxis(sj, xi, qi, xj, qj, sepAxis, faceListA, faceListB)) {\n      const res = [];\n      const q = convexConvex_q;\n      si.clipAgainstHull(xi, qi, sj, xj, qj, sepAxis, -100, 100, res);\n      let numContacts = 0;\n\n      for (let j = 0; j !== res.length; j++) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        const ri = r.ri;\n        const rj = r.rj;\n        sepAxis.negate(r.ni);\n        res[j].normal.negate(q);\n        q.scale(res[j].depth, q);\n        res[j].point.vadd(q, ri);\n        rj.copy(res[j].point); // Contact points are in world coordinates. Transform back to relative\n\n        ri.vsub(xi, ri);\n        rj.vsub(xj, rj); // Make relative to bodies\n\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n        this.result.push(r);\n        numContacts++;\n\n        if (!this.enableFrictionReduction) {\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n\n      if (this.enableFrictionReduction && numContacts) {\n        this.createFrictionFromAverage(numContacts);\n      }\n    }\n  }\n\n  sphereConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    const v3pool = this.v3pool;\n    xi.vsub(xj, convex_to_sphere);\n    const normals = sj.faceNormals;\n    const faces = sj.faces;\n    const verts = sj.vertices;\n    const R = si.radius;\n    //     return;\n    // }\n\n    let found = false; // Check corners\n\n    for (let i = 0; i !== verts.length; i++) {\n      const v = verts[i]; // World position of corner\n\n      const worldCorner = sphereConvex_worldCorner;\n      qj.vmult(v, worldCorner);\n      xj.vadd(worldCorner, worldCorner);\n      const sphere_to_corner = sphereConvex_sphereToCorner;\n      worldCorner.vsub(xi, sphere_to_corner);\n\n      if (sphere_to_corner.lengthSquared() < R * R) {\n        if (justTest) {\n          return true;\n        }\n\n        found = true;\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        r.ri.copy(sphere_to_corner);\n        r.ri.normalize();\n        r.ni.copy(r.ri);\n        r.ri.scale(R, r.ri);\n        worldCorner.vsub(xj, r.rj); // Should be relative to the body.\n\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri); // Should be relative to the body.\n\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n        return;\n      }\n    } // Check side (plane) intersections\n\n\n    for (let i = 0, nfaces = faces.length; i !== nfaces && found === false; i++) {\n      const normal = normals[i];\n      const face = faces[i]; // Get world-transformed normal of the face\n\n      const worldNormal = sphereConvex_worldNormal;\n      qj.vmult(normal, worldNormal); // Get a world vertex from the face\n\n      const worldPoint = sphereConvex_worldPoint;\n      qj.vmult(verts[face[0]], worldPoint);\n      worldPoint.vadd(xj, worldPoint); // Get a point on the sphere, closest to the face normal\n\n      const worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n      worldNormal.scale(-R, worldSpherePointClosestToPlane);\n      xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane); // Vector from a face point to the closest point on the sphere\n\n      const penetrationVec = sphereConvex_penetrationVec;\n      worldSpherePointClosestToPlane.vsub(worldPoint, penetrationVec); // The penetration. Negative value means overlap.\n\n      const penetration = penetrationVec.dot(worldNormal);\n      const worldPointToSphere = sphereConvex_sphereToWorldPoint;\n      xi.vsub(worldPoint, worldPointToSphere);\n\n      if (penetration < 0 && worldPointToSphere.dot(worldNormal) > 0) {\n        // Intersects plane. Now check if the sphere is inside the face polygon\n        const faceVerts = []; // Face vertices, in world coords\n\n        for (let j = 0, Nverts = face.length; j !== Nverts; j++) {\n          const worldVertex = v3pool.get();\n          qj.vmult(verts[face[j]], worldVertex);\n          xj.vadd(worldVertex, worldVertex);\n          faceVerts.push(worldVertex);\n        }\n\n        if (pointInPolygon(faceVerts, worldNormal, xi)) {\n          // Is the sphere center in the face polygon?\n          if (justTest) {\n            return true;\n          }\n\n          found = true;\n          const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n          worldNormal.scale(-R, r.ri); // Contact offset, from sphere center to contact\n\n          worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n          const penetrationVec2 = v3pool.get();\n          worldNormal.scale(-penetration, penetrationVec2);\n          const penetrationSpherePoint = v3pool.get();\n          worldNormal.scale(-R, penetrationSpherePoint); //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n\n          xi.vsub(xj, r.rj);\n          r.rj.vadd(penetrationSpherePoint, r.rj);\n          r.rj.vadd(penetrationVec2, r.rj); // Should be relative to the body.\n\n          r.rj.vadd(xj, r.rj);\n          r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n          r.ri.vadd(xi, r.ri);\n          r.ri.vsub(bi.position, r.ri);\n          v3pool.release(penetrationVec2);\n          v3pool.release(penetrationSpherePoint);\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n          for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n            v3pool.release(faceVerts[j]);\n          }\n\n          return; // We only expect *one* face contact\n        } else {\n          // Edge?\n          for (let j = 0; j !== face.length; j++) {\n            // Get two world transformed vertices\n            const v1 = v3pool.get();\n            const v2 = v3pool.get();\n            qj.vmult(verts[face[(j + 1) % face.length]], v1);\n            qj.vmult(verts[face[(j + 2) % face.length]], v2);\n            xj.vadd(v1, v1);\n            xj.vadd(v2, v2); // Construct edge vector\n\n            const edge = sphereConvex_edge;\n            v2.vsub(v1, edge); // Construct the same vector, but normalized\n\n            const edgeUnit = sphereConvex_edgeUnit;\n            edge.unit(edgeUnit); // p is xi projected onto the edge\n\n            const p = v3pool.get();\n            const v1_to_xi = v3pool.get();\n            xi.vsub(v1, v1_to_xi);\n            const dot = v1_to_xi.dot(edgeUnit);\n            edgeUnit.scale(dot, p);\n            p.vadd(v1, p); // Compute a vector from p to the center of the sphere\n\n            const xi_to_p = v3pool.get();\n            p.vsub(xi, xi_to_p); // Collision if the edge-sphere distance is less than the radius\n            // AND if p is in between v1 and v2\n\n            if (dot > 0 && dot * dot < edge.lengthSquared() && xi_to_p.lengthSquared() < R * R) {\n              // Collision if the edge-sphere distance is less than the radius\n              // Edge contact!\n              if (justTest) {\n                return true;\n              }\n\n              const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n              p.vsub(xj, r.rj);\n              p.vsub(xi, r.ni);\n              r.ni.normalize();\n              r.ni.scale(R, r.ri); // Should be relative to the body.\n\n              r.rj.vadd(xj, r.rj);\n              r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n              r.ri.vadd(xi, r.ri);\n              r.ri.vsub(bi.position, r.ri);\n              this.result.push(r);\n              this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n              for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n                v3pool.release(faceVerts[j]);\n              }\n\n              v3pool.release(v1);\n              v3pool.release(v2);\n              v3pool.release(p);\n              v3pool.release(xi_to_p);\n              v3pool.release(v1_to_xi);\n              return;\n            }\n\n            v3pool.release(v1);\n            v3pool.release(v2);\n            v3pool.release(p);\n            v3pool.release(xi_to_p);\n            v3pool.release(v1_to_xi);\n          }\n        } // Release world vertices\n\n\n        for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n          v3pool.release(faceVerts[j]);\n        }\n      }\n    }\n  }\n\n  planeConvex(planeShape, convexShape, planePosition, convexPosition, planeQuat, convexQuat, planeBody, convexBody, si, sj, justTest) {\n    // Simply return the points behind the plane.\n    const worldVertex = planeConvex_v;\n    const worldNormal = planeConvex_normal;\n    worldNormal.set(0, 0, 1);\n    planeQuat.vmult(worldNormal, worldNormal); // Turn normal according to plane orientation\n\n    let numContacts = 0;\n    const relpos = planeConvex_relpos;\n\n    for (let i = 0; i !== convexShape.vertices.length; i++) {\n      // Get world convex vertex\n      worldVertex.copy(convexShape.vertices[i]);\n      convexQuat.vmult(worldVertex, worldVertex);\n      convexPosition.vadd(worldVertex, worldVertex);\n      worldVertex.vsub(planePosition, relpos);\n      const dot = worldNormal.dot(relpos);\n\n      if (dot <= 0.0) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape, si, sj); // Get vertex position projected on plane\n\n        const projected = planeConvex_projected;\n        worldNormal.scale(worldNormal.dot(relpos), projected);\n        worldVertex.vsub(projected, projected);\n        projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n        r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n        // rj is now just the vector from the convex center to the vertex\n\n        worldVertex.vsub(convexPosition, r.rj); // Make it relative to the body\n\n        r.ri.vadd(planePosition, r.ri);\n        r.ri.vsub(planeBody.position, r.ri);\n        r.rj.vadd(convexPosition, r.rj);\n        r.rj.vsub(convexBody.position, r.rj);\n        this.result.push(r);\n        numContacts++;\n\n        if (!this.enableFrictionReduction) {\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    }\n\n    if (this.enableFrictionReduction && numContacts) {\n      this.createFrictionFromAverage(numContacts);\n    }\n  }\n\n  boxConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  sphereHeightfield(sphereShape, hfShape, spherePos, hfPos, sphereQuat, hfQuat, sphereBody, hfBody, rsi, rsj, justTest) {\n    const data = hfShape.data;\n    const radius = sphereShape.radius;\n    const w = hfShape.elementSize;\n    const worldPillarOffset = sphereHeightfield_tmp2; // Get sphere position to heightfield local!\n\n    const localSpherePos = sphereHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos); // Get the index of the data points to test against\n\n    let iMinX = Math.floor((localSpherePos.x - radius) / w) - 1;\n    let iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1;\n    let iMinY = Math.floor((localSpherePos.y - radius) / w) - 1;\n    let iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n      return;\n    } // Clamp index to edges\n\n\n    if (iMinX < 0) {\n      iMinX = 0;\n    }\n\n    if (iMaxX < 0) {\n      iMaxX = 0;\n    }\n\n    if (iMinY < 0) {\n      iMinY = 0;\n    }\n\n    if (iMaxY < 0) {\n      iMaxY = 0;\n    }\n\n    if (iMinX >= data.length) {\n      iMinX = data.length - 1;\n    }\n\n    if (iMaxX >= data.length) {\n      iMaxX = data.length - 1;\n    }\n\n    if (iMaxY >= data[0].length) {\n      iMaxY = data[0].length - 1;\n    }\n\n    if (iMinY >= data[0].length) {\n      iMinY = data[0].length - 1;\n    }\n\n    const minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    const min = minMax[0];\n    const max = minMax[1]; // Bail out if we can't touch the bounding height box\n\n    if (localSpherePos.z - radius > max || localSpherePos.z + radius < min) {\n      return;\n    }\n\n    const result = this.result;\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        const numContactsBefore = result.length;\n        let intersecting = false; // Lower triangle\n\n        hfShape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        } // Upper triangle\n\n\n        hfShape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        }\n\n        const numContacts = result.length - numContactsBefore;\n\n        if (numContacts > 2) {\n          return;\n        }\n        /*\n          // Skip all but 1\n          for (let k = 0; k < numContacts - 1; k++) {\n              result.pop();\n          }\n        */\n\n      }\n    }\n  }\n\n  boxHeightfield(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexHeightfield(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest) {\n    const data = hfShape.data;\n    const w = hfShape.elementSize;\n    const radius = convexShape.boundingSphereRadius;\n    const worldPillarOffset = convexHeightfield_tmp2;\n    const faceList = convexHeightfield_faceList; // Get sphere position to heightfield local!\n\n    const localConvexPos = convexHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos); // Get the index of the data points to test against\n\n    let iMinX = Math.floor((localConvexPos.x - radius) / w) - 1;\n    let iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1;\n    let iMinY = Math.floor((localConvexPos.y - radius) / w) - 1;\n    let iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n      return;\n    } // Clamp index to edges\n\n\n    if (iMinX < 0) {\n      iMinX = 0;\n    }\n\n    if (iMaxX < 0) {\n      iMaxX = 0;\n    }\n\n    if (iMinY < 0) {\n      iMinY = 0;\n    }\n\n    if (iMaxY < 0) {\n      iMaxY = 0;\n    }\n\n    if (iMinX >= data.length) {\n      iMinX = data.length - 1;\n    }\n\n    if (iMaxX >= data.length) {\n      iMaxX = data.length - 1;\n    }\n\n    if (iMaxY >= data[0].length) {\n      iMaxY = data[0].length - 1;\n    }\n\n    if (iMinY >= data[0].length) {\n      iMinY = data[0].length - 1;\n    }\n\n    const minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    const min = minMax[0];\n    const max = minMax[1]; // Bail out if we're cant touch the bounding height box\n\n    if (localConvexPos.z - radius > max || localConvexPos.z + radius < min) {\n      return;\n    }\n\n    for (let i = iMinX; i < iMaxX; i++) {\n      for (let j = iMinY; j < iMaxY; j++) {\n        let intersecting = false; // Lower triangle\n\n        hfShape.getConvexTrianglePillar(i, j, false);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        } // Upper triangle\n\n\n        hfShape.getConvexTrianglePillar(i, j, true);\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n        }\n\n        if (justTest && intersecting) {\n          return true;\n        }\n      }\n    }\n  }\n\n  sphereParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    // The normal is the unit vector from sphere center to particle center\n    const normal = particleSphere_normal;\n    normal.set(0, 0, 1);\n    xi.vsub(xj, normal);\n    const lengthSquared = normal.lengthSquared();\n\n    if (lengthSquared <= sj.radius * sj.radius) {\n      if (justTest) {\n        return true;\n      }\n\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      normal.normalize();\n      r.rj.copy(normal);\n      r.rj.scale(sj.radius, r.rj);\n      r.ni.copy(normal); // Contact normal\n\n      r.ni.negate(r.ni);\n      r.ri.set(0, 0, 0); // Center of particle\n\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  planeParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    const normal = particlePlane_normal;\n    normal.set(0, 0, 1);\n    bj.quaternion.vmult(normal, normal); // Turn normal according to plane orientation\n\n    const relpos = particlePlane_relpos;\n    xi.vsub(bj.position, relpos);\n    const dot = normal.dot(relpos);\n\n    if (dot <= 0.0) {\n      if (justTest) {\n        return true;\n      }\n\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      r.ni.copy(normal); // Contact normal is the plane normal\n\n      r.ni.negate(r.ni);\n      r.ri.set(0, 0, 0); // Center of particle\n      // Get particle position projected on plane\n\n      const projected = particlePlane_projected;\n      normal.scale(normal.dot(xi), projected);\n      xi.vsub(projected, projected); //projected.vadd(bj.position,projected);\n      // rj is now the projected world position minus plane position\n\n      r.rj.copy(projected);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  boxParticle(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexParticle(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n  }\n\n  convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n    let penetratedFaceIndex = -1;\n    const penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n    const worldPenetrationVec = convexParticle_worldPenetrationVec;\n    let minPenetration = null;\n\n    const local = convexParticle_local;\n    local.copy(xi);\n    local.vsub(xj, local); // Convert position to relative the convex origin\n\n    qj.conjugate(cqj);\n    cqj.vmult(local, local);\n\n    if (sj.pointIsInside(local)) {\n      if (sj.worldVerticesNeedsUpdate) {\n        sj.computeWorldVertices(xj, qj);\n      }\n\n      if (sj.worldFaceNormalsNeedsUpdate) {\n        sj.computeWorldFaceNormals(qj);\n      } // For each world polygon in the polyhedra\n\n\n      for (let i = 0, nfaces = sj.faces.length; i !== nfaces; i++) {\n        // Construct world face vertices\n        const verts = [sj.worldVertices[sj.faces[i][0]]];\n        const normal = sj.worldFaceNormals[i]; // Check how much the particle penetrates the polygon plane.\n\n        xi.vsub(verts[0], convexParticle_vertexToParticle);\n        const penetration = -normal.dot(convexParticle_vertexToParticle);\n\n        if (minPenetration === null || Math.abs(penetration) < Math.abs(minPenetration)) {\n          if (justTest) {\n            return true;\n          }\n\n          minPenetration = penetration;\n          penetratedFaceIndex = i;\n          penetratedFaceNormal.copy(normal);\n        }\n      }\n\n      if (penetratedFaceIndex !== -1) {\n        // Setup contact\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        penetratedFaceNormal.scale(minPenetration, worldPenetrationVec); // rj is the particle position projected to the face\n\n        worldPenetrationVec.vadd(xi, worldPenetrationVec);\n        worldPenetrationVec.vsub(xj, worldPenetrationVec);\n        r.rj.copy(worldPenetrationVec); //const projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n        //projectedToFace.copy(r.rj);\n        //qj.vmult(r.rj,r.rj);\n\n        penetratedFaceNormal.negate(r.ni); // Contact normal\n\n        r.ri.set(0, 0, 0); // Center of particle\n\n        const ri = r.ri;\n        const rj = r.rj; // Make relative to bodies\n\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      } else {\n        console.warn('Point found inside convex, but did not find penetrating face!');\n      }\n    }\n  }\n\n  heightfieldCylinder(hfShape, convexShape, hfPos, convexPos, hfQuat, convexQuat, hfBody, convexBody, rsi, rsj, justTest) {\n    return this.convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest);\n  }\n\n  particleCylinder(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n    return this.convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest);\n  }\n\n  sphereTrimesh(sphereShape, trimeshShape, spherePos, trimeshPos, sphereQuat, trimeshQuat, sphereBody, trimeshBody, rsi, rsj, justTest) {\n    const edgeVertexA = sphereTrimesh_edgeVertexA;\n    const edgeVertexB = sphereTrimesh_edgeVertexB;\n    const edgeVector = sphereTrimesh_edgeVector;\n    const edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n    const localSpherePos = sphereTrimesh_localSpherePos;\n    const tmp = sphereTrimesh_tmp;\n    const localSphereAABB = sphereTrimesh_localSphereAABB;\n    const v2 = sphereTrimesh_v2;\n    const relpos = sphereTrimesh_relpos;\n    const triangles = sphereTrimesh_triangles; // Convert sphere position to local in the trimesh\n\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos); // Get the aabb of the sphere locally in the trimesh\n\n    const sphereRadius = sphereShape.radius;\n    localSphereAABB.lowerBound.set(localSpherePos.x - sphereRadius, localSpherePos.y - sphereRadius, localSpherePos.z - sphereRadius);\n    localSphereAABB.upperBound.set(localSpherePos.x + sphereRadius, localSpherePos.y + sphereRadius, localSpherePos.z + sphereRadius);\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles); //for (let i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n    // Vertices\n\n    const v = sphereTrimesh_v;\n    const radiusSquared = sphereShape.radius * sphereShape.radius;\n\n    for (let i = 0; i < triangles.length; i++) {\n      for (let j = 0; j < 3; j++) {\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v); // Check vertex overlap in sphere\n\n        v.vsub(localSpherePos, relpos);\n\n        if (relpos.lengthSquared() <= radiusSquared) {\n          // Safe up\n          v2.copy(v);\n          Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n          v.vsub(spherePos, relpos);\n\n          if (justTest) {\n            return true;\n          }\n\n          let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n          r.ni.copy(relpos);\n          r.ni.normalize(); // ri is the vector from sphere center to the sphere surface\n\n          r.ri.copy(r.ni);\n          r.ri.scale(sphereShape.radius, r.ri);\n          r.ri.vadd(spherePos, r.ri);\n          r.ri.vsub(sphereBody.position, r.ri);\n          r.rj.copy(v);\n          r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    } // Check all edges\n\n\n    for (let i = 0; i < triangles.length; i++) {\n      for (let j = 0; j < 3; j++) {\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + (j + 1) % 3], edgeVertexB);\n        edgeVertexB.vsub(edgeVertexA, edgeVector); // Project sphere position to the edge\n\n        localSpherePos.vsub(edgeVertexB, tmp);\n        const positionAlongEdgeB = tmp.dot(edgeVector);\n        localSpherePos.vsub(edgeVertexA, tmp);\n        let positionAlongEdgeA = tmp.dot(edgeVector);\n\n        if (positionAlongEdgeA > 0 && positionAlongEdgeB < 0) {\n          // Now check the orthogonal distance from edge to sphere center\n          localSpherePos.vsub(edgeVertexA, tmp);\n          edgeVectorUnit.copy(edgeVector);\n          edgeVectorUnit.normalize();\n          positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n          edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n          tmp.vadd(edgeVertexA, tmp); // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n\n          const dist = tmp.distanceTo(localSpherePos);\n\n          if (dist < sphereShape.radius) {\n            if (justTest) {\n              return true;\n            }\n\n            const r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n            tmp.vsub(localSpherePos, r.ni);\n            r.ni.normalize();\n            r.ni.scale(sphereShape.radius, r.ri);\n            r.ri.vadd(spherePos, r.ri);\n            r.ri.vsub(sphereBody.position, r.ri);\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n            tmp.vsub(trimeshBody.position, r.rj);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n          }\n        }\n      }\n    } // Triangle faces\n\n\n    const va = sphereTrimesh_va;\n    const vb = sphereTrimesh_vb;\n    const vc = sphereTrimesh_vc;\n    const normal = sphereTrimesh_normal;\n\n    for (let i = 0, N = triangles.length; i !== N; i++) {\n      trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n      trimeshShape.getNormal(triangles[i], normal);\n      localSpherePos.vsub(va, tmp);\n      let dist = tmp.dot(normal);\n      normal.scale(dist, tmp);\n      localSpherePos.vsub(tmp, tmp); // tmp is now the sphere position projected to the triangle plane\n\n      dist = tmp.distanceTo(localSpherePos);\n\n      if (Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius) {\n        if (justTest) {\n          return true;\n        }\n\n        let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n        tmp.vsub(localSpherePos, r.ni);\n        r.ni.normalize();\n        r.ni.scale(sphereShape.radius, r.ri);\n        r.ri.vadd(spherePos, r.ri);\n        r.ri.vsub(sphereBody.position, r.ri);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n        tmp.vsub(trimeshBody.position, r.rj);\n        Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n        Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n\n    triangles.length = 0;\n  }\n\n  planeTrimesh(planeShape, trimeshShape, planePos, trimeshPos, planeQuat, trimeshQuat, planeBody, trimeshBody, rsi, rsj, justTest) {\n    // Make contacts!\n    const v = new Vec3();\n    const normal = planeTrimesh_normal;\n    normal.set(0, 0, 1);\n    planeQuat.vmult(normal, normal); // Turn normal according to plane\n\n    for (let i = 0; i < trimeshShape.vertices.length / 3; i++) {\n      // Get world vertex from trimesh\n      trimeshShape.getVertex(i, v); // Safe up\n\n      const v2 = new Vec3();\n      v2.copy(v);\n      Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v); // Check plane side\n\n      const relpos = planeTrimesh_relpos;\n      v.vsub(planePos, relpos);\n      const dot = normal.dot(relpos);\n\n      if (dot <= 0.0) {\n        if (justTest) {\n          return true;\n        }\n\n        const r = this.createContactEquation(planeBody, trimeshBody, planeShape, trimeshShape, rsi, rsj);\n        r.ni.copy(normal); // Contact normal is the plane normal\n        // Get vertex position projected on plane\n\n        const projected = planeTrimesh_projected;\n        normal.scale(relpos.dot(normal), projected);\n        v.vsub(projected, projected); // ri is the projected world position minus plane position\n\n        r.ri.copy(projected);\n        r.ri.vsub(planeBody.position, r.ri);\n        r.rj.copy(v);\n        r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n  } // convexTrimesh(\n  //   si: ConvexPolyhedron, sj: Trimesh, xi: Vec3, xj: Vec3, qi: Quaternion, qj: Quaternion,\n  //   bi: Body, bj: Body, rsi?: Shape | null, rsj?: Shape | null,\n  //   faceListA?: number[] | null, faceListB?: number[] | null,\n  // ) {\n  //   const sepAxis = convexConvex_sepAxis;\n  //   if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n  //       return;\n  //   }\n  //   // Construct a temp hull for each triangle\n  //   const hullB = new ConvexPolyhedron();\n  //   hullB.faces = [[0,1,2]];\n  //   const va = new Vec3();\n  //   const vb = new Vec3();\n  //   const vc = new Vec3();\n  //   hullB.vertices = [\n  //       va,\n  //       vb,\n  //       vc\n  //   ];\n  //   for (let i = 0; i < sj.indices.length / 3; i++) {\n  //       const triangleNormal = new Vec3();\n  //       sj.getNormal(i, triangleNormal);\n  //       hullB.faceNormals = [triangleNormal];\n  //       sj.getTriangleVertices(i, va, vb, vc);\n  //       let d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n  //       if(!d){\n  //           triangleNormal.scale(-1, triangleNormal);\n  //           d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n  //           if(!d){\n  //               continue;\n  //           }\n  //       }\n  //       const res: ConvexPolyhedronContactPoint[] = [];\n  //       const q = convexConvex_q;\n  //       si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n  //       for(let j = 0; j !== res.length; j++){\n  //           const r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n  //               ri = r.ri,\n  //               rj = r.rj;\n  //           r.ni.copy(triangleNormal);\n  //           r.ni.negate(r.ni);\n  //           res[j].normal.negate(q);\n  //           q.mult(res[j].depth, q);\n  //           res[j].point.vadd(q, ri);\n  //           rj.copy(res[j].point);\n  //           // Contact points are in world coordinates. Transform back to relative\n  //           ri.vsub(xi,ri);\n  //           rj.vsub(xj,rj);\n  //           // Make relative to bodies\n  //           ri.vadd(xi, ri);\n  //           ri.vsub(bi.position, ri);\n  //           rj.vadd(xj, rj);\n  //           rj.vsub(bj.position, rj);\n  //           result.push(r);\n  //       }\n  //   }\n  // }\n\n\n}\nconst averageNormal = new Vec3();\nconst averageContactPointA = new Vec3();\nconst averageContactPointB = new Vec3();\nconst tmpVec1 = new Vec3();\nconst tmpVec2 = new Vec3();\nconst tmpQuat1 = new Quaternion();\nconst tmpQuat2 = new Quaternion();\n\nconst planeTrimesh_normal = new Vec3();\nconst planeTrimesh_relpos = new Vec3();\nconst planeTrimesh_projected = new Vec3();\nconst sphereTrimesh_normal = new Vec3();\nconst sphereTrimesh_relpos = new Vec3();\nnew Vec3();\nconst sphereTrimesh_v = new Vec3();\nconst sphereTrimesh_v2 = new Vec3();\nconst sphereTrimesh_edgeVertexA = new Vec3();\nconst sphereTrimesh_edgeVertexB = new Vec3();\nconst sphereTrimesh_edgeVector = new Vec3();\nconst sphereTrimesh_edgeVectorUnit = new Vec3();\nconst sphereTrimesh_localSpherePos = new Vec3();\nconst sphereTrimesh_tmp = new Vec3();\nconst sphereTrimesh_va = new Vec3();\nconst sphereTrimesh_vb = new Vec3();\nconst sphereTrimesh_vc = new Vec3();\nconst sphereTrimesh_localSphereAABB = new AABB();\nconst sphereTrimesh_triangles = [];\nconst point_on_plane_to_sphere = new Vec3();\nconst plane_to_sphere_ortho = new Vec3(); // See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\n\nconst pointInPolygon_edge = new Vec3();\nconst pointInPolygon_edge_x_normal = new Vec3();\nconst pointInPolygon_vtp = new Vec3();\n\nfunction pointInPolygon(verts, normal, p) {\n  let positiveResult = null;\n  const N = verts.length;\n\n  for (let i = 0; i !== N; i++) {\n    const v = verts[i]; // Get edge to the next vertex\n\n    const edge = pointInPolygon_edge;\n    verts[(i + 1) % N].vsub(v, edge); // Get cross product between polygon normal and the edge\n\n    const edge_x_normal = pointInPolygon_edge_x_normal; //const edge_x_normal = new Vec3();\n\n    edge.cross(normal, edge_x_normal); // Get vector between point and current vertex\n\n    const vertex_to_p = pointInPolygon_vtp;\n    p.vsub(v, vertex_to_p); // This dot product determines which side of the edge the point is\n\n    const r = edge_x_normal.dot(vertex_to_p); // If all such dot products have same sign, we are inside the polygon.\n\n    if (positiveResult === null || r > 0 && positiveResult === true || r <= 0 && positiveResult === false) {\n      if (positiveResult === null) {\n        positiveResult = r > 0;\n      }\n\n      continue;\n    } else {\n      return false; // Encountered some other sign. Exit.\n    }\n  } // If we got here, all dot products were of the same sign.\n\n\n  return true;\n}\n\nconst box_to_sphere = new Vec3();\nconst sphereBox_ns = new Vec3();\nconst sphereBox_ns1 = new Vec3();\nconst sphereBox_ns2 = new Vec3();\nconst sphereBox_sides = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\nconst sphereBox_sphere_to_corner = new Vec3();\nconst sphereBox_side_ns = new Vec3();\nconst sphereBox_side_ns1 = new Vec3();\nconst sphereBox_side_ns2 = new Vec3();\nconst convex_to_sphere = new Vec3();\nconst sphereConvex_edge = new Vec3();\nconst sphereConvex_edgeUnit = new Vec3();\nconst sphereConvex_sphereToCorner = new Vec3();\nconst sphereConvex_worldCorner = new Vec3();\nconst sphereConvex_worldNormal = new Vec3();\nconst sphereConvex_worldPoint = new Vec3();\nconst sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nconst sphereConvex_penetrationVec = new Vec3();\nconst sphereConvex_sphereToWorldPoint = new Vec3();\nnew Vec3();\nnew Vec3();\nconst planeConvex_v = new Vec3();\nconst planeConvex_normal = new Vec3();\nconst planeConvex_relpos = new Vec3();\nconst planeConvex_projected = new Vec3();\nconst convexConvex_sepAxis = new Vec3();\nconst convexConvex_q = new Vec3();\nconst particlePlane_normal = new Vec3();\nconst particlePlane_relpos = new Vec3();\nconst particlePlane_projected = new Vec3();\nconst particleSphere_normal = new Vec3(); // WIP\n\nconst cqj = new Quaternion();\nconst convexParticle_local = new Vec3();\nnew Vec3();\nconst convexParticle_penetratedFaceNormal = new Vec3();\nconst convexParticle_vertexToParticle = new Vec3();\nconst convexParticle_worldPenetrationVec = new Vec3();\nconst convexHeightfield_tmp1 = new Vec3();\nconst convexHeightfield_tmp2 = new Vec3();\nconst convexHeightfield_faceList = [0];\nconst sphereHeightfield_tmp1 = new Vec3();\nconst sphereHeightfield_tmp2 = new Vec3();\n\nclass OverlapKeeper {\n  /**\n   * @todo Remove useless constructor\n   */\n  constructor() {\n    this.current = [];\n    this.previous = [];\n  }\n  /**\n   * getKey\n   */\n\n\n  getKey(i, j) {\n    if (j < i) {\n      const temp = j;\n      j = i;\n      i = temp;\n    }\n\n    return i << 16 | j;\n  }\n  /**\n   * set\n   */\n\n\n  set(i, j) {\n    // Insertion sort. This way the diff will have linear complexity.\n    const key = this.getKey(i, j);\n    const current = this.current;\n    let index = 0;\n\n    while (key > current[index]) {\n      index++;\n    }\n\n    if (key === current[index]) {\n      return; // Pair was already added\n    }\n\n    for (let j = current.length - 1; j >= index; j--) {\n      current[j + 1] = current[j];\n    }\n\n    current[index] = key;\n  }\n  /**\n   * tick\n   */\n\n\n  tick() {\n    const tmp = this.current;\n    this.current = this.previous;\n    this.previous = tmp;\n    this.current.length = 0;\n  }\n  /**\n   * getDiff\n   */\n\n\n  getDiff(additions, removals) {\n    const a = this.current;\n    const b = this.previous;\n    const al = a.length;\n    const bl = b.length;\n    let j = 0;\n\n    for (let i = 0; i < al; i++) {\n      let found = false;\n      const keyA = a[i];\n\n      while (keyA > b[j]) {\n        j++;\n      }\n\n      found = keyA === b[j];\n\n      if (!found) {\n        unpackAndPush(additions, keyA);\n      }\n    }\n\n    j = 0;\n\n    for (let i = 0; i < bl; i++) {\n      let found = false;\n      const keyB = b[i];\n\n      while (keyB > a[j]) {\n        j++;\n      }\n\n      found = a[j] === keyB;\n\n      if (!found) {\n        unpackAndPush(removals, keyB);\n      }\n    }\n  }\n\n}\n\nfunction unpackAndPush(array, key) {\n  array.push((key & 0xffff0000) >> 16, key & 0x0000ffff);\n}\n\nconst getKey = (i, j) => i < j ? `${i}-${j}` : `${j}-${i}`;\n/**\n * TupleDictionary\n */\n\n\nclass TupleDictionary {\n  constructor() {\n    this.data = {\n      keys: []\n    };\n  }\n\n  /** get */\n  get(i, j) {\n    const key = getKey(i, j);\n    return this.data[key];\n  }\n  /** set */\n\n\n  set(i, j, value) {\n    const key = getKey(i, j); // Check if key already exists\n\n    if (!this.get(i, j)) {\n      this.data.keys.push(key);\n    }\n\n    this.data[key] = value;\n  }\n  /** delete */\n\n\n  delete(i, j) {\n    const key = getKey(i, j);\n    const index = this.data.keys.indexOf(key);\n\n    if (index !== -1) {\n      this.data.keys.splice(index, 1);\n    }\n\n    delete this.data[key];\n  }\n  /** reset */\n\n\n  reset() {\n    const data = this.data;\n    const keys = data.keys;\n\n    while (keys.length > 0) {\n      const key = keys.pop();\n      delete data[key];\n    }\n  }\n\n}\n\n/**\n * The physics world\n */\nclass World extends EventTarget {\n  /**\n   * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n   */\n\n  /**\n   * Makes bodies go to sleep when they've been inactive.\n   * @default false\n   */\n\n  /**\n   * All the current contacts (instances of ContactEquation) in the world.\n   */\n\n  /**\n   * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n   * @default 0\n   */\n\n  /**\n   * Set to true to use fast quaternion normalization. It is often enough accurate to use.\n   * If bodies tend to explode, set to false.\n   * @default false\n   */\n\n  /**\n   * The wall-clock time since simulation start.\n   */\n\n  /**\n   * Number of timesteps taken since start.\n   */\n\n  /**\n   * Default and last timestep sizes.\n   */\n\n  /**\n   * The gravity of the world.\n   */\n\n  /**\n   * The broadphase algorithm to use.\n   * @default NaiveBroadphase\n   */\n\n  /**\n   * All bodies in this world\n   */\n\n  /**\n   * True if any bodies are not sleeping, false if every body is sleeping.\n   */\n\n  /**\n   * The solver algorithm to use.\n   * @default GSSolver\n   */\n\n  /**\n   * collisionMatrix\n   */\n\n  /**\n   * CollisionMatrix from the previous step.\n   */\n\n  /**\n   * All added contactmaterials.\n   */\n\n  /**\n   * Used to look up a ContactMaterial given two instances of Material.\n   */\n\n  /**\n   * The default material of the bodies.\n   */\n\n  /**\n   * This contact material is used if no suitable contactmaterial is found for a contact.\n   */\n\n  /**\n   * Time accumulator for interpolation.\n   * @see https://gafferongames.com/game-physics/fix-your-timestep/\n   */\n\n  /**\n   * Dispatched after a body has been added to the world.\n   */\n\n  /**\n   * Dispatched after a body has been removed from the world.\n   */\n  constructor(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super();\n    this.dt = -1;\n    this.allowSleep = !!options.allowSleep;\n    this.contacts = [];\n    this.frictionEquations = [];\n    this.quatNormalizeSkip = options.quatNormalizeSkip !== undefined ? options.quatNormalizeSkip : 0;\n    this.quatNormalizeFast = options.quatNormalizeFast !== undefined ? options.quatNormalizeFast : false;\n    this.time = 0.0;\n    this.stepnumber = 0;\n    this.default_dt = 1 / 60;\n    this.nextId = 0;\n    this.gravity = new Vec3();\n\n    if (options.gravity) {\n      this.gravity.copy(options.gravity);\n    }\n\n    this.broadphase = options.broadphase !== undefined ? options.broadphase : new NaiveBroadphase();\n    this.bodies = [];\n    this.hasActiveBodies = false;\n    this.solver = options.solver !== undefined ? options.solver : new GSSolver();\n    this.constraints = [];\n    this.narrowphase = new Narrowphase(this);\n    this.collisionMatrix = new ArrayCollisionMatrix();\n    this.collisionMatrixPrevious = new ArrayCollisionMatrix();\n    this.bodyOverlapKeeper = new OverlapKeeper();\n    this.shapeOverlapKeeper = new OverlapKeeper();\n    this.contactmaterials = [];\n    this.contactMaterialTable = new TupleDictionary();\n    this.defaultMaterial = new Material('default');\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, {\n      friction: 0.3,\n      restitution: 0.0\n    });\n    this.doProfiling = false;\n    this.profile = {\n      solve: 0,\n      makeContactConstraints: 0,\n      broadphase: 0,\n      integrate: 0,\n      narrowphase: 0\n    };\n    this.accumulator = 0;\n    this.subsystems = [];\n    this.addBodyEvent = {\n      type: 'addBody',\n      body: null\n    };\n    this.removeBodyEvent = {\n      type: 'removeBody',\n      body: null\n    };\n    this.idToBodyMap = {};\n    this.broadphase.setWorld(this);\n  }\n  /**\n   * Get the contact material between materials m1 and m2\n   * @return The contact material if it was found.\n   */\n\n\n  getContactMaterial(m1, m2) {\n    return this.contactMaterialTable.get(m1.id, m2.id);\n  }\n  /**\n   * Store old collision state info\n   */\n\n\n  collisionMatrixTick() {\n    const temp = this.collisionMatrixPrevious;\n    this.collisionMatrixPrevious = this.collisionMatrix;\n    this.collisionMatrix = temp;\n    this.collisionMatrix.reset();\n    this.bodyOverlapKeeper.tick();\n    this.shapeOverlapKeeper.tick();\n  }\n  /**\n   * Add a constraint to the simulation.\n   */\n\n\n  addConstraint(c) {\n    this.constraints.push(c);\n  }\n  /**\n   * Removes a constraint\n   */\n\n\n  removeConstraint(c) {\n    const idx = this.constraints.indexOf(c);\n\n    if (idx !== -1) {\n      this.constraints.splice(idx, 1);\n    }\n  }\n  /**\n   * Raycast test\n   * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n   */\n\n\n  rayTest(from, to, result) {\n    if (result instanceof RaycastResult) {\n      // Do raycastClosest\n      this.raycastClosest(from, to, {\n        skipBackfaces: true\n      }, result);\n    } else {\n      // Do raycastAll\n      this.raycastAll(from, to, {\n        skipBackfaces: true\n      }, result);\n    }\n  }\n  /**\n   * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n   * @return True if any body was hit.\n   */\n\n\n  raycastAll(from, to, options, callback) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.ALL;\n    options.from = from;\n    options.to = to;\n    options.callback = callback;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n   * @return True if any body was hit.\n   */\n\n\n  raycastAny(from, to, options, result) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.ANY;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Ray cast, and return information of the closest hit.\n   * @return True if any body was hit.\n   */\n\n\n  raycastClosest(from, to, options, result) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.mode = Ray.CLOSEST;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n  }\n  /**\n   * Add a rigid body to the simulation.\n   * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n   * @todo Adding an array of bodies should be possible. This would save some loops too\n   */\n\n\n  addBody(body) {\n    if (this.bodies.includes(body)) {\n      return;\n    }\n\n    body.index = this.bodies.length;\n    this.bodies.push(body);\n    body.world = this;\n    body.initPosition.copy(body.position);\n    body.initVelocity.copy(body.velocity);\n    body.timeLastSleepy = this.time;\n\n    if (body instanceof Body) {\n      body.initAngularVelocity.copy(body.angularVelocity);\n      body.initQuaternion.copy(body.quaternion);\n    }\n\n    this.collisionMatrix.setNumObjects(this.bodies.length);\n    this.addBodyEvent.body = body;\n    this.idToBodyMap[body.id] = body;\n    this.dispatchEvent(this.addBodyEvent);\n  }\n  /**\n   * Remove a rigid body from the simulation.\n   */\n\n\n  removeBody(body) {\n    body.world = null;\n    const n = this.bodies.length - 1;\n    const bodies = this.bodies;\n    const idx = bodies.indexOf(body);\n\n    if (idx !== -1) {\n      bodies.splice(idx, 1); // Todo: should use a garbage free method\n      // Recompute index\n\n      for (let i = 0; i !== bodies.length; i++) {\n        bodies[i].index = i;\n      }\n\n      this.collisionMatrix.setNumObjects(n);\n      this.removeBodyEvent.body = body;\n      delete this.idToBodyMap[body.id];\n      this.dispatchEvent(this.removeBodyEvent);\n    }\n  }\n\n  getBodyById(id) {\n    return this.idToBodyMap[id];\n  }\n  /**\n   * @todo Make a faster map\n   */\n\n\n  getShapeById(id) {\n    const bodies = this.bodies;\n\n    for (let i = 0; i < bodies.length; i++) {\n      const shapes = bodies[i].shapes;\n\n      for (let j = 0; j < shapes.length; j++) {\n        const shape = shapes[j];\n\n        if (shape.id === id) {\n          return shape;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Adds a contact material to the World\n   */\n\n\n  addContactMaterial(cmat) {\n    // Add contact material\n    this.contactmaterials.push(cmat); // Add current contact material to the material table\n\n    this.contactMaterialTable.set(cmat.materials[0].id, cmat.materials[1].id, cmat);\n  }\n  /**\n   * Removes a contact material from the World.\n   */\n\n\n  removeContactMaterial(cmat) {\n    const idx = this.contactmaterials.indexOf(cmat);\n\n    if (idx === -1) {\n      return;\n    }\n\n    this.contactmaterials.splice(idx, 1);\n    this.contactMaterialTable.delete(cmat.materials[0].id, cmat.materials[1].id);\n  }\n  /**\n   * Step the simulation forward keeping track of last called time\n   * to be able to step the world at a fixed rate, independently of framerate.\n   *\n   * @param dt The fixed time step size to use (default: 1 / 60).\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\n   * @see https://gafferongames.com/post/fix_your_timestep/\n   * @example\n   *     // Run the simulation independently of framerate every 1 / 60 ms\n   *     world.fixedStep()\n   */\n\n\n  fixedStep(dt, maxSubSteps) {\n    if (dt === void 0) {\n      dt = 1 / 60;\n    }\n\n    if (maxSubSteps === void 0) {\n      maxSubSteps = 10;\n    }\n\n    const time = performance.now() / 1000; // seconds\n\n    if (!this.lastCallTime) {\n      this.step(dt, undefined, maxSubSteps);\n    } else {\n      const timeSinceLastCalled = time - this.lastCallTime;\n      this.step(dt, timeSinceLastCalled, maxSubSteps);\n    }\n\n    this.lastCallTime = time;\n  }\n  /**\n   * Step the physics world forward in time.\n   *\n   * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n   *\n   * @param dt The fixed time step size to use.\n   * @param timeSinceLastCalled The time elapsed since the function was last called.\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\n   * @see https://web.archive.org/web/20180426154531/http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World#What_do_the_parameters_to_btDynamicsWorld::stepSimulation_mean.3F\n   * @example\n   *     // fixed timestepping without interpolation\n   *     world.step(1 / 60)\n   */\n\n\n  step(dt, timeSinceLastCalled, maxSubSteps) {\n    if (maxSubSteps === void 0) {\n      maxSubSteps = 10;\n    }\n\n    if (timeSinceLastCalled === undefined) {\n      // Fixed, simple stepping\n      this.internalStep(dt); // Increment time\n\n      this.time += dt;\n    } else {\n      this.accumulator += timeSinceLastCalled;\n      const t0 = performance.now();\n      let substeps = 0;\n\n      while (this.accumulator >= dt && substeps < maxSubSteps) {\n        // Do fixed steps to catch up\n        this.internalStep(dt);\n        this.accumulator -= dt;\n        substeps++;\n\n        if (performance.now() - t0 > dt * 1000) {\n          // The framerate is not interactive anymore.\n          // We are below the target framerate.\n          // Better bail out.\n          break;\n        }\n      } // Remove the excess accumulator, since we may not\n      // have had enough substeps available to catch up\n\n\n      this.accumulator = this.accumulator % dt;\n      const t = this.accumulator / dt;\n\n      for (let j = 0; j !== this.bodies.length; j++) {\n        const b = this.bodies[j];\n        b.previousPosition.lerp(b.position, t, b.interpolatedPosition);\n        b.previousQuaternion.slerp(b.quaternion, t, b.interpolatedQuaternion);\n        b.previousQuaternion.normalize();\n      }\n\n      this.time += timeSinceLastCalled;\n    }\n  }\n\n  internalStep(dt) {\n    this.dt = dt;\n    const contacts = this.contacts;\n    const p1 = World_step_p1;\n    const p2 = World_step_p2;\n    const N = this.bodies.length;\n    const bodies = this.bodies;\n    const solver = this.solver;\n    const gravity = this.gravity;\n    const doProfiling = this.doProfiling;\n    const profile = this.profile;\n    const DYNAMIC = Body.DYNAMIC;\n    let profilingStart = -Infinity;\n    const constraints = this.constraints;\n    const frictionEquationPool = World_step_frictionEquationPool;\n    gravity.length();\n    const gx = gravity.x;\n    const gy = gravity.y;\n    const gz = gravity.z;\n    let i = 0;\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    } // Add gravity to all objects\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.type === DYNAMIC) {\n        // Only for dynamic bodies\n        const f = bi.force;\n        const m = bi.mass;\n        f.x += m * gx;\n        f.y += m * gy;\n        f.z += m * gz;\n      }\n    } // Update subsystems\n\n\n    for (let i = 0, Nsubsystems = this.subsystems.length; i !== Nsubsystems; i++) {\n      this.subsystems[i].update();\n    } // Collision detection\n\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    p1.length = 0; // Clean up pair arrays from last step\n\n    p2.length = 0;\n    this.broadphase.collisionPairs(this, p1, p2);\n\n    if (doProfiling) {\n      profile.broadphase = performance.now() - profilingStart;\n    } // Remove constrained pairs with collideConnected == false\n\n\n    let Nconstraints = constraints.length;\n\n    for (i = 0; i !== Nconstraints; i++) {\n      const c = constraints[i];\n\n      if (!c.collideConnected) {\n        for (let j = p1.length - 1; j >= 0; j -= 1) {\n          if (c.bodyA === p1[j] && c.bodyB === p2[j] || c.bodyB === p1[j] && c.bodyA === p2[j]) {\n            p1.splice(j, 1);\n            p2.splice(j, 1);\n          }\n        }\n      }\n    }\n\n    this.collisionMatrixTick(); // Generate contacts\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    const oldcontacts = World_step_oldContacts;\n    const NoldContacts = contacts.length;\n\n    for (i = 0; i !== NoldContacts; i++) {\n      oldcontacts.push(contacts[i]);\n    }\n\n    contacts.length = 0; // Transfer FrictionEquation from current list to the pool for reuse\n\n    const NoldFrictionEquations = this.frictionEquations.length;\n\n    for (i = 0; i !== NoldFrictionEquations; i++) {\n      frictionEquationPool.push(this.frictionEquations[i]);\n    }\n\n    this.frictionEquations.length = 0;\n    this.narrowphase.getContacts(p1, p2, this, contacts, oldcontacts, // To be reused\n    this.frictionEquations, frictionEquationPool);\n\n    if (doProfiling) {\n      profile.narrowphase = performance.now() - profilingStart;\n    } // Loop over all collisions\n\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    } // Add all friction eqs\n\n\n    for (i = 0; i < this.frictionEquations.length; i++) {\n      solver.addEquation(this.frictionEquations[i]);\n    }\n\n    const ncontacts = contacts.length;\n\n    for (let k = 0; k !== ncontacts; k++) {\n      // Current contact\n      const c = contacts[k]; // Get current collision indeces\n\n      const bi = c.bi;\n      const bj = c.bj;\n      const si = c.si;\n      const sj = c.sj; // Get collision properties\n\n      let cm;\n\n      if (bi.material && bj.material) {\n        cm = this.getContactMaterial(bi.material, bj.material) || this.defaultContactMaterial;\n      } else {\n        cm = this.defaultContactMaterial;\n      } // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n\n      cm.friction; // c.restitution = cm.restitution;\n      // If friction or restitution were specified in the material, use them\n\n      if (bi.material && bj.material) {\n        if (bi.material.friction >= 0 && bj.material.friction >= 0) {\n          bi.material.friction * bj.material.friction;\n        }\n\n        if (bi.material.restitution >= 0 && bj.material.restitution >= 0) {\n          c.restitution = bi.material.restitution * bj.material.restitution;\n        }\n      } // c.setSpookParams(\n      //           cm.contactEquationStiffness,\n      //           cm.contactEquationRelaxation,\n      //           dt\n      //       );\n\n\n      solver.addEquation(c); // // Add friction constraint equation\n      // if(mu > 0){\n      // \t// Create 2 tangent equations\n      // \tconst mug = mu * gnorm;\n      // \tconst reducedMass = (bi.invMass + bj.invMass);\n      // \tif(reducedMass > 0){\n      // \t\treducedMass = 1/reducedMass;\n      // \t}\n      // \tconst pool = frictionEquationPool;\n      // \tconst c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n      // \tconst c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n      // \tthis.frictionEquations.push(c1, c2);\n      // \tc1.bi = c2.bi = bi;\n      // \tc1.bj = c2.bj = bj;\n      // \tc1.minForce = c2.minForce = -mug*reducedMass;\n      // \tc1.maxForce = c2.maxForce = mug*reducedMass;\n      // \t// Copy over the relative vectors\n      // \tc1.ri.copy(c.ri);\n      // \tc1.rj.copy(c.rj);\n      // \tc2.ri.copy(c.ri);\n      // \tc2.rj.copy(c.rj);\n      // \t// Construct tangents\n      // \tc.ni.tangents(c1.t, c2.t);\n      //           // Set spook params\n      //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n      //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n      //           c1.enabled = c2.enabled = c.enabled;\n      // \t// Add equations to solver\n      // \tsolver.addEquation(c1);\n      // \tsolver.addEquation(c2);\n      // }\n\n      if (bi.allowSleep && bi.type === Body.DYNAMIC && bi.sleepState === Body.SLEEPING && bj.sleepState === Body.AWAKE && bj.type !== Body.STATIC) {\n        const speedSquaredB = bj.velocity.lengthSquared() + bj.angularVelocity.lengthSquared();\n        const speedLimitSquaredB = bj.sleepSpeedLimit ** 2;\n\n        if (speedSquaredB >= speedLimitSquaredB * 2) {\n          bi.wakeUpAfterNarrowphase = true;\n        }\n      }\n\n      if (bj.allowSleep && bj.type === Body.DYNAMIC && bj.sleepState === Body.SLEEPING && bi.sleepState === Body.AWAKE && bi.type !== Body.STATIC) {\n        const speedSquaredA = bi.velocity.lengthSquared() + bi.angularVelocity.lengthSquared();\n        const speedLimitSquaredA = bi.sleepSpeedLimit ** 2;\n\n        if (speedSquaredA >= speedLimitSquaredA * 2) {\n          bj.wakeUpAfterNarrowphase = true;\n        }\n      } // Now we know that i and j are in contact. Set collision matrix state\n\n\n      this.collisionMatrix.set(bi, bj, true);\n\n      if (!this.collisionMatrixPrevious.get(bi, bj)) {\n        // First contact!\n        // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n        World_step_collideEvent.body = bj;\n        World_step_collideEvent.contact = c;\n        bi.dispatchEvent(World_step_collideEvent);\n        World_step_collideEvent.body = bi;\n        bj.dispatchEvent(World_step_collideEvent);\n      }\n\n      this.bodyOverlapKeeper.set(bi.id, bj.id);\n      this.shapeOverlapKeeper.set(si.id, sj.id);\n    }\n\n    this.emitContactEvents();\n\n    if (doProfiling) {\n      profile.makeContactConstraints = performance.now() - profilingStart;\n      profilingStart = performance.now();\n    } // Wake up bodies\n\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.wakeUpAfterNarrowphase) {\n        bi.wakeUp();\n        bi.wakeUpAfterNarrowphase = false;\n      }\n    } // Add user-added constraints\n\n\n    Nconstraints = constraints.length;\n\n    for (i = 0; i !== Nconstraints; i++) {\n      const c = constraints[i];\n      c.update();\n\n      for (let j = 0, Neq = c.equations.length; j !== Neq; j++) {\n        const eq = c.equations[j];\n        solver.addEquation(eq);\n      }\n    } // Solve the constrained system\n\n\n    solver.solve(dt, this);\n\n    if (doProfiling) {\n      profile.solve = performance.now() - profilingStart;\n    } // Remove all contacts from solver\n\n\n    solver.removeAllEquations(); // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n\n    const pow = Math.pow;\n\n    for (i = 0; i !== N; i++) {\n      const bi = bodies[i];\n\n      if (bi.type & DYNAMIC) {\n        // Only for dynamic bodies\n        const ld = pow(1.0 - bi.linearDamping, dt);\n        const v = bi.velocity;\n        v.scale(ld, v);\n        const av = bi.angularVelocity;\n\n        if (av) {\n          const ad = pow(1.0 - bi.angularDamping, dt);\n          av.scale(ad, av);\n        }\n      }\n    }\n\n    this.dispatchEvent(World_step_preStepEvent); // Leap frog\n    // vnew = v + h*f/m\n    // xnew = x + h*vnew\n\n    if (doProfiling) {\n      profilingStart = performance.now();\n    }\n\n    const stepnumber = this.stepnumber;\n    const quatNormalize = stepnumber % (this.quatNormalizeSkip + 1) === 0;\n    const quatNormalizeFast = this.quatNormalizeFast;\n\n    for (i = 0; i !== N; i++) {\n      bodies[i].integrate(dt, quatNormalize, quatNormalizeFast);\n    }\n\n    this.clearForces();\n    this.broadphase.dirty = true;\n\n    if (doProfiling) {\n      profile.integrate = performance.now() - profilingStart;\n    } // Update step number\n\n\n    this.stepnumber += 1;\n    this.dispatchEvent(World_step_postStepEvent); // Sleeping update\n\n    let hasActiveBodies = true;\n\n    if (this.allowSleep) {\n      hasActiveBodies = false;\n\n      for (i = 0; i !== N; i++) {\n        const bi = bodies[i];\n        bi.sleepTick(this.time);\n\n        if (bi.sleepState !== Body.SLEEPING) {\n          hasActiveBodies = true;\n        }\n      }\n    }\n\n    this.hasActiveBodies = hasActiveBodies;\n  }\n\n  emitContactEvents() {\n    const hasBeginContact = this.hasAnyEventListener('beginContact');\n    const hasEndContact = this.hasAnyEventListener('endContact');\n\n    if (hasBeginContact || hasEndContact) {\n      this.bodyOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginContact) {\n      for (let i = 0, l = additions.length; i < l; i += 2) {\n        beginContactEvent.bodyA = this.getBodyById(additions[i]);\n        beginContactEvent.bodyB = this.getBodyById(additions[i + 1]);\n        this.dispatchEvent(beginContactEvent);\n      }\n\n      beginContactEvent.bodyA = beginContactEvent.bodyB = null;\n    }\n\n    if (hasEndContact) {\n      for (let i = 0, l = removals.length; i < l; i += 2) {\n        endContactEvent.bodyA = this.getBodyById(removals[i]);\n        endContactEvent.bodyB = this.getBodyById(removals[i + 1]);\n        this.dispatchEvent(endContactEvent);\n      }\n\n      endContactEvent.bodyA = endContactEvent.bodyB = null;\n    }\n\n    additions.length = removals.length = 0;\n    const hasBeginShapeContact = this.hasAnyEventListener('beginShapeContact');\n    const hasEndShapeContact = this.hasAnyEventListener('endShapeContact');\n\n    if (hasBeginShapeContact || hasEndShapeContact) {\n      this.shapeOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginShapeContact) {\n      for (let i = 0, l = additions.length; i < l; i += 2) {\n        const shapeA = this.getShapeById(additions[i]);\n        const shapeB = this.getShapeById(additions[i + 1]);\n        beginShapeContactEvent.shapeA = shapeA;\n        beginShapeContactEvent.shapeB = shapeB;\n        if (shapeA) beginShapeContactEvent.bodyA = shapeA.body;\n        if (shapeB) beginShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(beginShapeContactEvent);\n      }\n\n      beginShapeContactEvent.bodyA = beginShapeContactEvent.bodyB = beginShapeContactEvent.shapeA = beginShapeContactEvent.shapeB = null;\n    }\n\n    if (hasEndShapeContact) {\n      for (let i = 0, l = removals.length; i < l; i += 2) {\n        const shapeA = this.getShapeById(removals[i]);\n        const shapeB = this.getShapeById(removals[i + 1]);\n        endShapeContactEvent.shapeA = shapeA;\n        endShapeContactEvent.shapeB = shapeB;\n        if (shapeA) endShapeContactEvent.bodyA = shapeA.body;\n        if (shapeB) endShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(endShapeContactEvent);\n      }\n\n      endShapeContactEvent.bodyA = endShapeContactEvent.bodyB = endShapeContactEvent.shapeA = endShapeContactEvent.shapeB = null;\n    }\n  }\n  /**\n   * Sets all body forces in the world to zero.\n   */\n\n\n  clearForces() {\n    const bodies = this.bodies;\n    const N = bodies.length;\n\n    for (let i = 0; i !== N; i++) {\n      const b = bodies[i];\n      b.force;\n      b.torque;\n      b.force.set(0, 0, 0);\n      b.torque.set(0, 0, 0);\n    }\n  }\n\n} // Temp stuff\n\nnew AABB();\nconst tmpRay = new Ray(); // performance.now() fallback on Date.now()\n\nconst performance = globalThis.performance || {};\n\nif (!performance.now) {\n  let nowOffset = Date.now();\n\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n\n  performance.now = () => Date.now() - nowOffset;\n}\n\nnew Vec3(); // Dispatched after the world has stepped forward in time.\n// Reusable event objects to save memory.\n\nconst World_step_postStepEvent = {\n  type: 'postStep'\n}; // Dispatched before the world steps forward in time.\n\nconst World_step_preStepEvent = {\n  type: 'preStep'\n};\nconst World_step_collideEvent = {\n  type: Body.COLLIDE_EVENT_NAME,\n  body: null,\n  contact: null\n}; // Pools for unused objects\n\nconst World_step_oldContacts = [];\nconst World_step_frictionEquationPool = []; // Reusable arrays for collision pairs\n\nconst World_step_p1 = [];\nconst World_step_p2 = []; // Stuff for emitContactEvents\n\nconst additions = [];\nconst removals = [];\nconst beginContactEvent = {\n  type: 'beginContact',\n  bodyA: null,\n  bodyB: null\n};\nconst endContactEvent = {\n  type: 'endContact',\n  bodyA: null,\n  bodyB: null\n};\nconst beginShapeContactEvent = {\n  type: 'beginShapeContact',\n  bodyA: null,\n  bodyB: null,\n  shapeA: null,\n  shapeB: null\n};\nconst endShapeContactEvent = {\n  type: 'endShapeContact',\n  bodyA: null,\n  bodyB: null,\n  shapeA: null,\n  shapeB: null\n};\n\nexport { AABB, ArrayCollisionMatrix, BODY_SLEEP_STATES, BODY_TYPES, Body, Box, Broadphase, COLLISION_TYPES, ConeTwistConstraint, Constraint, ContactEquation, ContactMaterial, ConvexPolyhedron, Cylinder, DistanceConstraint, Equation, EventTarget, FrictionEquation, GSSolver, GridBroadphase, Heightfield, HingeConstraint, JacobianElement, LockConstraint, Mat3, Material, NaiveBroadphase, Narrowphase, ObjectCollisionMatrix, Particle, Plane, PointToPointConstraint, Pool, Quaternion, RAY_MODES, Ray, RaycastResult, RaycastVehicle, RigidVehicle, RotationalEquation, RotationalMotorEquation, SAPBroadphase, SHAPE_TYPES, SPHSystem, Shape, Solver, Sphere, SplitSolver, Spring, Transform, Trimesh, Vec3, Vec3Pool, WheelInfo, World };\n","import { Scene } from \"three\";\r\nimport * as THREE from 'three';\r\n\r\nexport class Helper {\r\n    scene: Scene;\r\n\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n\r\n        const gridHelper = new THREE.GridHelper(20, 20);\r\n        gridHelper.position.set(0, 0, 0);\r\n\r\n        this.scene.add(gridHelper);\r\n    }\r\n}","export enum Paths {\r\n    \"character\" = \"./models/Ch36_nonPBR.fbx\",\r\n    \"map\" = \"./models/CLASSROOM.fbx\",\r\n    \"idle\" = \"./animations/idle.fbx\",\r\n    \"forward\" = \"./animations/forward.fbx\",\r\n    \"backward\" = \"./animations/backward.fbx\",\r\n    \"left\" = \"./animations/left.fbx\",\r\n    \"right\" = \"./animations/right.fbx\",\r\n    \"jump\" = \"./animations/jumping.fbx\",\r\n}","/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.6.9\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar durl = function (c) { return URL.createObjectURL(new Blob([c], { type: 'text/javascript' })); };\nvar cwk = function (u) { return new Worker(u); };\ntry {\n    URL.revokeObjectURL(durl(''));\n}\ncatch (e) {\n    // We're in Deno or a very old browser\n    durl = function (c) { return 'data:application/javascript;charset=UTF-8,' + encodeURI(c); };\n    // If Deno, this is necessary; if not, this changes nothing\n    cwk = function (u) { return new Worker(u, { type: 'module' }); };\n}\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = cwk(ch2[id] || (ch2[id] = durl(c)));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new u32(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np1, p2 : degrees of B-Spline surface\nU1, U2 : knot vectors\nP      : control points (x, y, z, w)\nu, v   : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n};\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.createAmbientLight();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\tcreateAmbientLight() {\n\n\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\tconst r = ambientColor[ 0 ];\n\t\t\tconst g = ambientColor[ 1 ];\n\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\tconst color = new Color( r, g, b );\n\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\tlet name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t// the first uv buffer is just called 'uv'\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tname = 'uv';\n\n\t\t\t}\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tfor ( let i = 2; i < faceLength; i ++ ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialRotation = new Quaternion();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\tif ( curves.x !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.x );\n\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tif ( curves.y !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.y );\n\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tif ( curves.z !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.z );\n\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curve ) {\n\n\t\tfor ( let i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\tconst initialValue = curve.values[ i - 1 ];\n\t\t\tconst valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\tconst absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\tconst numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\tconst step = valuesSpan / numSubIntervals;\n\t\t\t\tlet nextValue = initialValue + step;\n\n\t\t\t\tconst initialTime = curve.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\tconst interval = timeSpan / numSubIntervals;\n\t\t\t\tlet nextTime = initialTime + interval;\n\n\t\t\t\tconst interpolatedTimes = [];\n\t\t\t\tconst interpolatedValues = [];\n\n\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\tnextValue += step;\n\n\t\t\t\t}\n\n\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( typeof fflate === 'undefined' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library fflate.min.js required.' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\tlet a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta[ i ] = this.getUint8();\n\n\t\t}\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n// inject array a2 into array a1 at index\nfunction inject( a1, index, a2 ) {\n\n\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n}\n\nexport { FBXLoader };\n","import * as THREE from 'three'\r\nimport { LoadingManager } from \"three\";\r\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\n\r\ntype ModelsType = { [key: string]: THREE.Group };\r\n\r\ninterface ProgressEvent {\r\n    loadedPercent: number;\r\n}\r\n\r\nconst loadMaxCount = 2;\r\n\r\nexport class LoadManager {\r\n    manager: LoadingManager;\r\n    onLoadCallback: () => void;\r\n    onProgressCallback: (e: ProgressEvent) => void;\r\n\r\n    static completeCount = 0;\r\n    static progress = 0;\r\n\r\n    constructor() {\r\n        this.manager = new THREE.LoadingManager();\r\n        this.onLoadCallback = () => {};\r\n        this.onProgressCallback = () => {};\r\n    }\r\n\r\n    load(paths: string[]): Promise<ModelsType> {\r\n        return new Promise((res, rej) => {\r\n            const loader = new FBXLoader(this.manager);\r\n            const models: ModelsType = {};\r\n\r\n            paths.forEach(path => {\r\n                loader.load(path, model => models[path] = model);\r\n            });\r\n\r\n            this.manager.onLoad = () => {\r\n                res(models);\r\n                LoadManager.completeCount += 1;\r\n                if(LoadManager.completeCount === loadMaxCount) this.onLoadCallback();\r\n            }\r\n\r\n            this.manager.onProgress = (_url, loaded, total) => {\r\n                LoadManager.progress = (loaded / total * 100) / loadMaxCount - LoadManager.completeCount;\r\n                this.onProgressCallback({ loadedPercent: LoadManager.progress });\r\n            }\r\n            this.manager.onError = rej;\r\n        });\r\n    }\r\n\r\n    addEventListener(event: \"load\" | \"progress\", callback: () => void | ((e: ProgressEvent) => void)) {\r\n        switch(event) {\r\n            case \"load\":\r\n                return this.onLoadCallback = callback;\r\n            case \"progress\":\r\n                return this.onProgressCallback = callback;\r\n        }\r\n    }\r\n}","import * as CANNON from 'cannon-es';\r\nimport * as THREE from 'three';\r\n\r\nexport enum ShapeType {\r\n    \"Box\" = 1,\r\n}\r\n\r\nexport class PhysicsManager {\r\n    world: CANNON.World;\r\n\r\n    constructor() {\r\n        this.world = new CANNON.World();\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.world.gravity.set(0, -9, 0);\r\n    }\r\n\r\n    animate(delta: number) {\r\n        this.world.step(1 / 60, delta, 5);\r\n    }\r\n}","import {\n\tBufferGeometry,\n\tLine3,\n\tPlane,\n\tTriangle,\n\tVector3\n} from 'three';\n/**\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n */\n\nvar ConvexHull = ( function () {\n\n\tvar Visible = 0;\n\tvar Deleted = 1;\n\n\tvar v1 = new Vector3();\n\n\tfunction ConvexHull() {\n\n\t\tthis.tolerance = - 1;\n\n\t\tthis.faces = []; // the generated faces of the convex hull\n\t\tthis.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n\t\t// the vertex lists work as follows:\n\t\t//\n\t\t// let 'a' and 'b' be 'Face' instances\n\t\t// let 'v' be points wrapped as instance of 'Vertex'\n\t\t//\n\t\t//     [v, v, ..., v, v, v, ...]\n\t\t//      ^             ^\n\t\t//      |             |\n\t\t//  a.outside     b.outside\n\t\t//\n\t\tthis.assigned = new VertexList();\n\t\tthis.unassigned = new VertexList();\n\n\t\tthis.vertices = []; \t// vertices of the hull (internal representation of given geometry data)\n\n\t}\n\n\tObject.assign( ConvexHull.prototype, {\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tif ( Array.isArray( points ) !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.ConvexHull: Points parameter is not an array.' );\n\n\t\t\t}\n\n\t\t\tif ( points.length < 4 ) {\n\n\t\t\t\tconsole.error( 'THREE.ConvexHull: The algorithm needs at least four points.' );\n\n\t\t\t}\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.vertices.push( new VertexNode( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.compute();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tvar points = [];\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar i, l, point;\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry === undefined ) return;\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tgeometry = geometry.toBufferGeometry\n\t\t\t\t\t\t? geometry.toBufferGeometry()\n\t\t\t\t\t\t: new BufferGeometry().fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tpoint = new Vector3();\n\n\t\t\t\t\t\t\tpoint.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tpoints.push( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.setFromPoints( points );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar faces = this.faces;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// compute signed distance and check on what half space the point lies\n\n\t\t\t\tif ( face.distanceToPoint( point ) > this.tolerance ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectRay: function ( ray, target ) {\n\n\t\t\t// based on \"Fast Ray-Convex Polyhedron Intersection\"  by Eric Haines, GRAPHICS GEMS II\n\n\t\t\tvar faces = this.faces;\n\n\t\t\tvar tNear = - Infinity;\n\t\t\tvar tFar = Infinity;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// interpret faces as planes for the further computation\n\n\t\t\t\tvar vN = face.distanceToPoint( ray.origin );\n\t\t\t\tvar vD = face.normal.dot( ray.direction );\n\n\t\t\t\t// if the origin is on the positive side of a plane (so the plane can \"see\" the origin) and\n\t\t\t\t// the ray is turned away or parallel to the plane, there is no intersection\n\n\t\t\t\tif ( vN > 0 && vD >= 0 ) return null;\n\n\t\t\t\t// compute the distance from the ray’s origin to the intersection with the plane\n\n\t\t\t\tvar t = ( vD !== 0 ) ? ( - vN / vD ) : 0;\n\n\t\t\t\t// only proceed if the distance is positive. a negative distance means the intersection point\n\t\t\t\t// lies \"behind\" the origin\n\n\t\t\t\tif ( t <= 0 ) continue;\n\n\t\t\t\t// now categorized plane as front-facing or back-facing\n\n\t\t\t\tif ( vD > 0 ) {\n\n\t\t\t\t\t//  plane faces away from the ray, so this plane is a back-face\n\n\t\t\t\t\ttFar = Math.min( t, tFar );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// front-face\n\n\t\t\t\t\ttNear = Math.max( t, tNear );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tNear > tFar ) {\n\n\t\t\t\t\t// if tNear ever is greater than tFar, the ray must miss the convex hull\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// evaluate intersection point\n\n\t\t\t// always try tNear first since its the closer intersection point\n\n\t\t\tif ( tNear !== - Infinity ) {\n\n\t\t\t\tray.at( tNear, target );\n\n\t\t\t} else {\n\n\t\t\t\tray.at( tFar, target );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersectsRay: function ( ray ) {\n\n\t\t\treturn this.intersectRay( ray, v1 ) !== null;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.faces = [];\n\t\t\tthis.vertices = [];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n\t\taddVertexToFace: function ( vertex, face ) {\n\n\t\t\tvertex.face = face;\n\n\t\t\tif ( face.outside === null ) {\n\n\t\t\t\tthis.assigned.append( vertex );\n\n\t\t\t} else {\n\n\t\t\t\tthis.assigned.insertBefore( face.outside, vertex );\n\n\t\t\t}\n\n\t\t\tface.outside = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a vertex from the 'assigned' list of vertices and from the given face\n\n\t\tremoveVertexFromFace: function ( vertex, face ) {\n\n\t\t\tif ( vertex === face.outside ) {\n\n\t\t\t\t// fix face.outside link\n\n\t\t\t\tif ( vertex.next !== null && vertex.next.face === face ) {\n\n\t\t\t\t\t// face has at least 2 outside vertices, move the 'outside' reference\n\n\t\t\t\t\tface.outside = vertex.next;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// vertex was the only outside vertex that face had\n\n\t\t\t\t\tface.outside = null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.assigned.remove( vertex );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n\t\tremoveAllVerticesFromFace: function ( face ) {\n\n\t\t\tif ( face.outside !== null ) {\n\n\t\t\t\t// reference to the first and last vertex of this face\n\n\t\t\t\tvar start = face.outside;\n\t\t\t\tvar end = face.outside;\n\n\t\t\t\twhile ( end.next !== null && end.next.face === face ) {\n\n\t\t\t\t\tend = end.next;\n\n\t\t\t\t}\n\n\t\t\t\tthis.assigned.removeSubList( start, end );\n\n\t\t\t\t// fix references\n\n\t\t\t\tstart.prev = end.next = null;\n\t\t\t\tface.outside = null;\n\n\t\t\t\treturn start;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Removes all the visible vertices that 'face' is able to see\n\n\t\tdeleteFaceVertices: function ( face, absorbingFace ) {\n\n\t\t\tvar faceVertices = this.removeAllVerticesFromFace( face );\n\n\t\t\tif ( faceVertices !== undefined ) {\n\n\t\t\t\tif ( absorbingFace === undefined ) {\n\n\t\t\t\t\t// mark the vertices to be reassigned to some other face\n\n\t\t\t\t\tthis.unassigned.appendChain( faceVertices );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if there's an absorbing face try to assign as many vertices as possible to it\n\n\t\t\t\t\tvar vertex = faceVertices;\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\t// we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n\t\t\t\t\t\t// will be changed by upcoming method calls\n\n\t\t\t\t\t\tvar nextVertex = vertex.next;\n\n\t\t\t\t\t\tvar distance = absorbingFace.distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t// check if 'vertex' is able to see 'absorbingFace'\n\n\t\t\t\t\t\tif ( distance > this.tolerance ) {\n\n\t\t\t\t\t\t\tthis.addVertexToFace( vertex, absorbingFace );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.unassigned.append( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// now assign next vertex\n\n\t\t\t\t\t\tvertex = nextVertex;\n\n\t\t\t\t\t} while ( vertex !== null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Reassigns as many vertices as possible from the unassigned list to the new faces\n\n\t\tresolveUnassignedPoints: function ( newFaces ) {\n\n\t\t\tif ( this.unassigned.isEmpty() === false ) {\n\n\t\t\t\tvar vertex = this.unassigned.first();\n\n\t\t\t\tdo {\n\n\t\t\t\t\t// buffer 'next' reference, see .deleteFaceVertices()\n\n\t\t\t\t\tvar nextVertex = vertex.next;\n\n\t\t\t\t\tvar maxDistance = this.tolerance;\n\n\t\t\t\t\tvar maxFace = null;\n\n\t\t\t\t\tfor ( var i = 0; i < newFaces.length; i ++ ) {\n\n\t\t\t\t\t\tvar face = newFaces[ i ];\n\n\t\t\t\t\t\tif ( face.mark === Visible ) {\n\n\t\t\t\t\t\t\tvar distance = face.distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\t\tmaxFace = face;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( maxDistance > 1000 * this.tolerance ) break;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// 'maxFace' can be null e.g. if there are identical vertices\n\n\t\t\t\t\tif ( maxFace !== null ) {\n\n\t\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertex = nextVertex;\n\n\t\t\t\t} while ( vertex !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Computes the extremes of a simplex which will be the initial hull\n\n\t\tcomputeExtremes: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\tvar minVertices = [];\n\t\t\tvar maxVertices = [];\n\n\t\t\tvar i, l, j;\n\n\t\t\t// initially assume that the first vertex is the min/max\n\n\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\tminVertices[ i ] = maxVertices[ i ] = this.vertices[ 0 ];\n\n\t\t\t}\n\n\t\t\tmin.copy( this.vertices[ 0 ].point );\n\t\t\tmax.copy( this.vertices[ 0 ].point );\n\n\t\t\t// compute the min/max vertex on all six directions\n\n\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvar point = vertex.point;\n\n\t\t\t\t// update the min coordinates\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tif ( point.getComponent( j ) < min.getComponent( j ) ) {\n\n\t\t\t\t\t\tmin.setComponent( j, point.getComponent( j ) );\n\t\t\t\t\t\tminVertices[ j ] = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// update the max coordinates\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tif ( point.getComponent( j ) > max.getComponent( j ) ) {\n\n\t\t\t\t\t\tmax.setComponent( j, point.getComponent( j ) );\n\t\t\t\t\t\tmaxVertices[ j ] = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use min/max vectors to compute an optimal epsilon\n\n\t\t\tthis.tolerance = 3 * Number.EPSILON * (\n\t\t\t\tMath.max( Math.abs( min.x ), Math.abs( max.x ) ) +\n\t\t\t\tMath.max( Math.abs( min.y ), Math.abs( max.y ) ) +\n\t\t\t\tMath.max( Math.abs( min.z ), Math.abs( max.z ) )\n\t\t\t);\n\n\t\t\treturn { min: minVertices, max: maxVertices };\n\n\t\t},\n\n\t\t// Computes the initial simplex assigning to its faces all the points\n\t\t// that are candidates to form part of the hull\n\n\t\tcomputeInitialHull: function () {\n\n\t\t\tvar line3, plane, closestPoint;\n\n\t\t\treturn function computeInitialHull() {\n\n\t\t\t\tif ( line3 === undefined ) {\n\n\t\t\t\t\tline3 = new Line3();\n\t\t\t\t\tplane = new Plane();\n\t\t\t\t\tclosestPoint = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar vertex, vertices = this.vertices;\n\t\t\t\tvar extremes = this.computeExtremes();\n\t\t\t\tvar min = extremes.min;\n\t\t\t\tvar max = extremes.max;\n\n\t\t\t\tvar v0, v1, v2, v3;\n\t\t\t\tvar i, l, j;\n\n\t\t\t\t// 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n\t\t\t\t// (max.x - min.x)\n\t\t\t\t// (max.y - min.y)\n\t\t\t\t// (max.z - min.z)\n\n\t\t\t\tvar distance, maxDistance = 0;\n\t\t\t\tvar index = 0;\n\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tdistance = max[ i ].point.getComponent( i ) - min[ i ].point.getComponent( i );\n\n\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\tindex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tv0 = min[ index ];\n\t\t\t\tv1 = max[ index ];\n\n\t\t\t\t// 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n\t\t\t\tmaxDistance = 0;\n\t\t\t\tline3.set( v0.point, v1.point );\n\n\t\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 ) {\n\n\t\t\t\t\t\tline3.closestPointToPoint( vertex.point, true, closestPoint );\n\n\t\t\t\t\t\tdistance = closestPoint.distanceToSquared( vertex.point );\n\n\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\tv2 = vertex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n\t\t\t\tmaxDistance = - 1;\n\t\t\t\tplane.setFromCoplanarPoints( v0.point, v1.point, v2.point );\n\n\t\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 ) {\n\n\t\t\t\t\t\tdistance = Math.abs( plane.distanceToPoint( vertex.point ) );\n\n\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\tv3 = vertex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar faces = [];\n\n\t\t\t\tif ( plane.distanceToPoint( v3.point ) < 0 ) {\n\n\t\t\t\t\t// the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tFace.create( v0, v1, v2 ),\n\t\t\t\t\t\tFace.create( v3, v1, v0 ),\n\t\t\t\t\t\tFace.create( v3, v2, v1 ),\n\t\t\t\t\t\tFace.create( v3, v0, v2 )\n\t\t\t\t\t);\n\n\t\t\t\t\t// set the twin edge\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tj = ( i + 1 ) % 3;\n\n\t\t\t\t\t\t// join face[ i ] i > 0, with the first face\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( j ) );\n\n\t\t\t\t\t\t// join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 1 ).setTwin( faces[ j + 1 ].getEdge( 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tFace.create( v0, v2, v1 ),\n\t\t\t\t\t\tFace.create( v3, v0, v1 ),\n\t\t\t\t\t\tFace.create( v3, v1, v2 ),\n\t\t\t\t\t\tFace.create( v3, v2, v0 )\n\t\t\t\t\t);\n\n\t\t\t\t\t// set the twin edge\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tj = ( i + 1 ) % 3;\n\n\t\t\t\t\t\t// join face[ i ] i > 0, with the first face\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( ( 3 - i ) % 3 ) );\n\n\t\t\t\t\t\t// join face[ i ] with face[ i + 1 ]\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 0 ).setTwin( faces[ j + 1 ].getEdge( 1 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// the initial hull is the tetrahedron\n\n\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\tthis.faces.push( faces[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t// initial assignment of vertices to the faces of the tetrahedron\n\n\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3 ) {\n\n\t\t\t\t\t\tmaxDistance = this.tolerance;\n\t\t\t\t\t\tvar maxFace = null;\n\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\tdistance = this.faces[ j ].distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\t\tmaxFace = this.faces[ j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( maxFace !== null ) {\n\n\t\t\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// Removes inactive faces\n\n\t\treindexFaces: function () {\n\n\t\t\tvar activeFaces = [];\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tif ( face.mark === Visible ) {\n\n\t\t\t\t\tactiveFaces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.faces = activeFaces;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Finds the next vertex to create faces with the current hull\n\n\t\tnextVertexToAdd: function () {\n\n\t\t\t// if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n\t\t\tif ( this.assigned.isEmpty() === false ) {\n\n\t\t\t\tvar eyeVertex, maxDistance = 0;\n\n\t\t\t\t// grap the first available face and start with the first visible vertex of that face\n\n\t\t\t\tvar eyeFace = this.assigned.first().face;\n\t\t\t\tvar vertex = eyeFace.outside;\n\n\t\t\t\t// now calculate the farthest vertex that face can see\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvar distance = eyeFace.distanceToPoint( vertex.point );\n\n\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\teyeVertex = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertex = vertex.next;\n\n\t\t\t\t} while ( vertex !== null && vertex.face === eyeFace );\n\n\t\t\t\treturn eyeVertex;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Computes a chain of half edges in CCW order called the 'horizon'.\n\t\t// For an edge to be part of the horizon it must join a face that can see\n\t\t// 'eyePoint' and a face that cannot see 'eyePoint'.\n\n\t\tcomputeHorizon: function ( eyePoint, crossEdge, face, horizon ) {\n\n\t\t\t// moves face's vertices to the 'unassigned' vertex list\n\n\t\t\tthis.deleteFaceVertices( face );\n\n\t\t\tface.mark = Deleted;\n\n\t\t\tvar edge;\n\n\t\t\tif ( crossEdge === null ) {\n\n\t\t\t\tedge = crossEdge = face.getEdge( 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// start from the next edge since 'crossEdge' was already analyzed\n\t\t\t\t// (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n\t\t\t\tedge = crossEdge.next;\n\n\t\t\t}\n\n\t\t\tdo {\n\n\t\t\t\tvar twinEdge = edge.twin;\n\t\t\t\tvar oppositeFace = twinEdge.face;\n\n\t\t\t\tif ( oppositeFace.mark === Visible ) {\n\n\t\t\t\t\tif ( oppositeFace.distanceToPoint( eyePoint ) > this.tolerance ) {\n\n\t\t\t\t\t\t// the opposite face can see the vertex, so proceed with next edge\n\n\t\t\t\t\t\tthis.computeHorizon( eyePoint, twinEdge, oppositeFace, horizon );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the opposite face can't see the vertex, so this edge is part of the horizon\n\n\t\t\t\t\t\thorizon.push( edge );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tedge = edge.next;\n\n\t\t\t} while ( edge !== crossEdge );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n\t\taddAdjoiningFace: function ( eyeVertex, horizonEdge ) {\n\n\t\t\t// all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n\t\t\tvar face = Face.create( eyeVertex, horizonEdge.tail(), horizonEdge.head() );\n\n\t\t\tthis.faces.push( face );\n\n\t\t\t// join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n\t\t\tface.getEdge( - 1 ).setTwin( horizonEdge.twin );\n\n\t\t\treturn face.getEdge( 0 ); // the half edge whose vertex is the eyeVertex\n\n\n\t\t},\n\n\t\t//  Adds 'horizon.length' faces to the hull, each face will be linked with the\n\t\t//  horizon opposite face and the face on the left/right\n\n\t\taddNewFaces: function ( eyeVertex, horizon ) {\n\n\t\t\tthis.newFaces = [];\n\n\t\t\tvar firstSideEdge = null;\n\t\t\tvar previousSideEdge = null;\n\n\t\t\tfor ( var i = 0; i < horizon.length; i ++ ) {\n\n\t\t\t\tvar horizonEdge = horizon[ i ];\n\n\t\t\t\t// returns the right side edge\n\n\t\t\t\tvar sideEdge = this.addAdjoiningFace( eyeVertex, horizonEdge );\n\n\t\t\t\tif ( firstSideEdge === null ) {\n\n\t\t\t\t\tfirstSideEdge = sideEdge;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n\t\t\t\t\tsideEdge.next.setTwin( previousSideEdge );\n\n\t\t\t\t}\n\n\t\t\t\tthis.newFaces.push( sideEdge.face );\n\t\t\t\tpreviousSideEdge = sideEdge;\n\n\t\t\t}\n\n\t\t\t// perform final join of new faces\n\n\t\t\tfirstSideEdge.next.setTwin( previousSideEdge );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Adds a vertex to the hull\n\n\t\taddVertexToHull: function ( eyeVertex ) {\n\n\t\t\tvar horizon = [];\n\n\t\t\tthis.unassigned.clear();\n\n\t\t\t// remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n\t\t\tthis.removeVertexFromFace( eyeVertex, eyeVertex.face );\n\n\t\t\tthis.computeHorizon( eyeVertex.point, null, eyeVertex.face, horizon );\n\n\t\t\tthis.addNewFaces( eyeVertex, horizon );\n\n\t\t\t// reassign 'unassigned' vertices to the new faces\n\n\t\t\tthis.resolveUnassignedPoints( this.newFaces );\n\n\t\t\treturn\tthis;\n\n\t\t},\n\n\t\tcleanup: function () {\n\n\t\t\tthis.assigned.clear();\n\t\t\tthis.unassigned.clear();\n\t\t\tthis.newFaces = [];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompute: function () {\n\n\t\t\tvar vertex;\n\n\t\t\tthis.computeInitialHull();\n\n\t\t\t// add all available vertices gradually to the hull\n\n\t\t\twhile ( ( vertex = this.nextVertexToAdd() ) !== undefined ) {\n\n\t\t\t\tthis.addVertexToHull( vertex );\n\n\t\t\t}\n\n\t\t\tthis.reindexFaces();\n\n\t\t\tthis.cleanup();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Face() {\n\n\t\tthis.normal = new Vector3();\n\t\tthis.midpoint = new Vector3();\n\t\tthis.area = 0;\n\n\t\tthis.constant = 0; // signed distance from face to the origin\n\t\tthis.outside = null; // reference to a vertex in a vertex list this face can see\n\t\tthis.mark = Visible;\n\t\tthis.edge = null;\n\n\t}\n\n\tObject.assign( Face, {\n\n\t\tcreate: function ( a, b, c ) {\n\n\t\t\tvar face = new Face();\n\n\t\t\tvar e0 = new HalfEdge( a, face );\n\t\t\tvar e1 = new HalfEdge( b, face );\n\t\t\tvar e2 = new HalfEdge( c, face );\n\n\t\t\t// join edges\n\n\t\t\te0.next = e2.prev = e1;\n\t\t\te1.next = e0.prev = e2;\n\t\t\te2.next = e1.prev = e0;\n\n\t\t\t// main half edge reference\n\n\t\t\tface.edge = e0;\n\n\t\t\treturn face.compute();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Face.prototype, {\n\n\t\tgetEdge: function ( i ) {\n\n\t\t\tvar edge = this.edge;\n\n\t\t\twhile ( i > 0 ) {\n\n\t\t\t\tedge = edge.next;\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\twhile ( i < 0 ) {\n\n\t\t\t\tedge = edge.prev;\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn edge;\n\n\t\t},\n\n\t\tcompute: function () {\n\n\t\t\tvar triangle;\n\n\t\t\treturn function compute() {\n\n\t\t\t\tif ( triangle === undefined ) triangle = new Triangle();\n\n\t\t\t\tvar a = this.edge.tail();\n\t\t\t\tvar b = this.edge.head();\n\t\t\t\tvar c = this.edge.next.head();\n\n\t\t\t\ttriangle.set( a.point, b.point, c.point );\n\n\t\t\t\ttriangle.getNormal( this.normal );\n\t\t\t\ttriangle.getMidpoint( this.midpoint );\n\t\t\t\tthis.area = triangle.getArea();\n\n\t\t\t\tthis.constant = this.normal.dot( this.midpoint );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) - this.constant;\n\n\t\t}\n\n\t} );\n\n\t// Entity for a Doubly-Connected Edge List (DCEL).\n\n\tfunction HalfEdge( vertex, face ) {\n\n\t\tthis.vertex = vertex;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t\tthis.twin = null;\n\t\tthis.face = face;\n\n\t}\n\n\tObject.assign( HalfEdge.prototype, {\n\n\t\thead: function () {\n\n\t\t\treturn this.vertex;\n\n\t\t},\n\n\t\ttail: function () {\n\n\t\t\treturn this.prev ? this.prev.vertex : null;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\tvar head = this.head();\n\t\t\tvar tail = this.tail();\n\n\t\t\tif ( tail !== null ) {\n\n\t\t\t\treturn tail.point.distanceTo( head.point );\n\n\t\t\t}\n\n\t\t\treturn - 1;\n\n\t\t},\n\n\t\tlengthSquared: function () {\n\n\t\t\tvar head = this.head();\n\t\t\tvar tail = this.tail();\n\n\t\t\tif ( tail !== null ) {\n\n\t\t\t\treturn tail.point.distanceToSquared( head.point );\n\n\t\t\t}\n\n\t\t\treturn - 1;\n\n\t\t},\n\n\t\tsetTwin: function ( edge ) {\n\n\t\t\tthis.twin = edge;\n\t\t\tedge.twin = this;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// A vertex as a double linked list node.\n\n\tfunction VertexNode( point ) {\n\n\t\tthis.point = point;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t\tthis.face = null; // the face that is able to see this vertex\n\n\t}\n\n\t// A double linked list that contains vertex nodes.\n\n\tfunction VertexList() {\n\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\n\t}\n\n\tObject.assign( VertexList.prototype, {\n\n\t\tfirst: function () {\n\n\t\t\treturn this.head;\n\n\t\t},\n\n\t\tlast: function () {\n\n\t\t\treturn this.tail;\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.head = this.tail = null;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Inserts a vertex before the target vertex\n\n\t\tinsertBefore: function ( target, vertex ) {\n\n\t\t\tvertex.prev = target.prev;\n\t\t\tvertex.next = target;\n\n\t\t\tif ( vertex.prev === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.prev.next = vertex;\n\n\t\t\t}\n\n\t\t\ttarget.prev = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Inserts a vertex after the target vertex\n\n\t\tinsertAfter: function ( target, vertex ) {\n\n\t\t\tvertex.prev = target;\n\t\t\tvertex.next = target.next;\n\n\t\t\tif ( vertex.next === null ) {\n\n\t\t\t\tthis.tail = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.next.prev = vertex;\n\n\t\t\t}\n\n\t\t\ttarget.next = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Appends a vertex to the end of the linked list\n\n\t\tappend: function ( vertex ) {\n\n\t\t\tif ( this.head === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tthis.tail.next = vertex;\n\n\t\t\t}\n\n\t\t\tvertex.prev = this.tail;\n\t\t\tvertex.next = null; // the tail has no subsequent vertex\n\n\t\t\tthis.tail = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Appends a chain of vertices where 'vertex' is the head.\n\n\t\tappendChain: function ( vertex ) {\n\n\t\t\tif ( this.head === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tthis.tail.next = vertex;\n\n\t\t\t}\n\n\t\t\tvertex.prev = this.tail;\n\n\t\t\t// ensure that the 'tail' reference points to the last vertex of the chain\n\n\t\t\twhile ( vertex.next !== null ) {\n\n\t\t\t\tvertex = vertex.next;\n\n\t\t\t}\n\n\t\t\tthis.tail = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a vertex from the linked list\n\n\t\tremove: function ( vertex ) {\n\n\t\t\tif ( vertex.prev === null ) {\n\n\t\t\t\tthis.head = vertex.next;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.prev.next = vertex.next;\n\n\t\t\t}\n\n\t\t\tif ( vertex.next === null ) {\n\n\t\t\t\tthis.tail = vertex.prev;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.next.prev = vertex.prev;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n\t\tremoveSubList: function ( a, b ) {\n\n\t\t\tif ( a.prev === null ) {\n\n\t\t\t\tthis.head = b.next;\n\n\t\t\t} else {\n\n\t\t\t\ta.prev.next = b.next;\n\n\t\t\t}\n\n\t\t\tif ( b.next === null ) {\n\n\t\t\t\tthis.tail = a.prev;\n\n\t\t\t} else {\n\n\t\t\t\tb.next.prev = a.prev;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\treturn this.head === null;\n\n\t\t}\n\n\t} );\n\n\treturn ConvexHull;\n\n} )();\n\nexport { ConvexHull };\n","import * as THREE from 'three';\r\nimport * as CANNON from 'cannon-es';\r\n\r\nexport class Utils {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    static tToC() {\r\n        return {\r\n            vector3: ({ x, y, z }: THREE.Vector3) => new CANNON.Vec3(x, y, z),\r\n            quaternion: ({ x, y, z, w }: THREE.Quaternion) => new CANNON.Quaternion(x, y, z, w),\r\n        }\r\n    }\r\n\r\n    static cToT() {\r\n        return {\r\n            vector3: ({ x, y, z }: CANNON.Vec3) => new THREE.Vector3(x, y, z),\r\n            quaternion: ({ x, y, z, w }: CANNON.Quaternion) => new THREE.Quaternion(x, y, z, w),\r\n        }\r\n    }\r\n}","import * as THREE from 'three';\r\nimport * as CANNON from 'cannon-es';\r\nimport { PerspectiveCamera, Scene, WebGLRenderer } from 'three';\r\nimport { Helper } from './helper';\r\nimport { Paths } from './libs/paths';\r\nimport { LoadManager } from './loadManager';\r\nimport { PhysicsManager } from './physcisManager';\r\nimport { EntityManager } from './entityManager';\r\nimport { ShapeType } from 'three-to-cannon';\r\nimport { MapModel } from './modelManager/map';\r\nimport { PlayerManager } from './playerManager';\r\nimport { ChairModel } from './modelManager/chair';\r\nimport { MouseManager } from './mouseManager';\r\nimport { CameraManager } from './cameraManager';\r\nimport { Entity } from './entityManager/entity';\r\nimport { MapManager } from './mapManager';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nclass Main {\r\n    renderer: WebGLRenderer;\r\n    camera: PerspectiveCamera;\r\n    scene: Scene;\r\n    loadManager: LoadManager;\r\n    physicsManager: PhysicsManager;\r\n    entityManager: EntityManager;\r\n    mouseManager: MouseManager;\r\n    cameraManager: CameraManager;\r\n    playerManager: PlayerManager;\r\n    mapManager: MapManager;\r\n    clock: THREE.Clock;\r\n    lastTime: number;\r\n\r\n    constructor() {\r\n        this.renderer = new THREE.WebGL1Renderer();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        document.body.appendChild(this.renderer.domElement);\r\n\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            75,\r\n            window.innerWidth / window.innerHeight,\r\n            0.1,\r\n            1000\r\n        );\r\n        this.camera.position.z = 10;\r\n        this.camera.position.y = 5;\r\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n        this.clock = new THREE.Clock();\r\n        this.lastTime = 0;\r\n\r\n        this.scene = new THREE.Scene();\r\n        this.physicsManager = new PhysicsManager();\r\n        this.loadManager = new LoadManager();\r\n        this.mouseManager = new MouseManager();\r\n        this.playerManager = new PlayerManager(new Entity(new THREE.Object3D(), new CANNON.Body()));\r\n        this.entityManager = new EntityManager(this.scene, this.physicsManager.world);\r\n        this.cameraManager = new CameraManager(this.camera, this.playerManager);\r\n        this.mapManager = new MapManager(this.scene, this.entityManager);\r\n\r\n        this.loadManager\r\n            .load([Paths.character])\r\n            .then(models => {\r\n                const character = models[Paths.character];\r\n                character.scale.setScalar(.01);\r\n                this.playerManager.setCharacter(this.entityManager.addCustom(character, { mass: 10, size: [.4, 1.77, .28], position: [0, 5, 0], isModel: true }));\r\n            });\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        new Helper(this.scene);\r\n        this.renderer.shadowMap.enabled = true;\r\n\r\n        this.entityManager.addModel(new ChairModel(), { mass: 0, position: [0, 1, 0] });\r\n        this.entityManager.addObject3D(new THREE.Mesh(new THREE.SphereGeometry(.2), new THREE.MeshToonMaterial()), { mass: .5, type: ShapeType.SPHERE }).cannon.position.y = 3;\r\n\r\n        this.animate();\r\n    }\r\n\r\n    animate() {\r\n        const currentTime = this.clock.getElapsedTime();\r\n        const delta = currentTime - this.lastTime;\r\n        this.lastTime = currentTime;\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n\r\n        this.entityManager.animate();\r\n        this.physicsManager.animate(delta);\r\n\r\n        if(this.mouseManager.isLocked) {\r\n            this.cameraManager.animate(this.mouseManager.getAngleY());\r\n            this.playerManager?.animate(delta, this.mouseManager.getAngleX());\r\n        }\r\n\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n}\r\n\r\n//@ts-ignore\r\nwindow.m = new Main();","import * as THREE from 'three';\r\nimport * as CANNON from 'cannon-es';\r\n\r\nexport class Utils {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    static tToC() {\r\n        return {\r\n            vector3: ({ x, y, z }: THREE.Vector3) => new CANNON.Vec3(x, y, z),\r\n            quaternion: ({ x, y, z, w }: THREE.Quaternion) => new CANNON.Quaternion(x, y, z, w),\r\n        }\r\n    }\r\n\r\n    static cToT() {\r\n        return {\r\n            vector3: ({ x, y, z }: CANNON.Vec3) => new THREE.Vector3(x, y, z),\r\n            quaternion: ({ x, y, z, w }: CANNON.Quaternion) => new THREE.Quaternion(x, y, z, w),\r\n        }\r\n    }\r\n}","import { Object3D } from \"three\";\r\nimport * as CANNON from 'cannon-es';\r\nimport * as THREE from 'three';\r\nimport { Utils } from \"../utils\";\r\n\r\nexport class Entity {\r\n    three: Object3D;\r\n    cannon: CANNON.Body;\r\n    isModel: boolean;\r\n    sizeVector?: THREE.Vector3;\r\n\r\n    constructor(three: Object3D, cannon: CANNON.Body, isModel?: boolean) {\r\n        this.three = three,\r\n        this.cannon = cannon;\r\n        this.isModel = Boolean(isModel);\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.three.castShadow = true;\r\n        \r\n        this.three.traverse(child => {\r\n            child.castShadow = true;\r\n        });\r\n    }\r\n\r\n    getSize() {\r\n        if(this.sizeVector) return this.sizeVector;\r\n        const box3 = new THREE.Box3().setFromObject(this.three);\r\n        this.sizeVector = new THREE.Vector3();\r\n        box3.getSize(this.sizeVector);\r\n        return this.sizeVector;\r\n    }\r\n\r\n    animate() {\r\n        this.three.position.copy(Utils.cToT().vector3(this.cannon.position));\r\n        this.three.quaternion.copy(Utils.cToT().quaternion(this.cannon.quaternion));\r\n        \r\n        if(this.isModel) {\r\n            this.three.applyMatrix4(new THREE.Matrix4().makeTranslation(0, -this.getSize().y / 2, 0));\r\n            this.three.updateMatrix();\r\n        }\r\n\r\n        if(this.cannon.position.y < -10) this.cannon.position.set(0, 3, 0);\r\n    }\r\n}","import * as CANNON from 'cannon-es';\r\nimport * as THREE from 'three';\r\nimport { Object3D, Scene } from \"three\";\r\nimport { threeToCannon, ShapeType as CannonShapeType } from 'three-to-cannon';\r\nimport { Entity } from \"./entity\";\r\nimport { Model } from \"../modelManager\";\r\nimport { ShapeType } from \"../physcisManager\";\r\nimport { Utils } from \"../utils\";\r\n\r\ninterface Option {\r\n    type?: CannonShapeType;\r\n    mass?: number;\r\n    isModel?: boolean;\r\n}\r\n\r\ninterface AddModelOption {\r\n    mass?: number;\r\n    position?: number[];\r\n    size?: number[];\r\n    isModel?: boolean;\r\n}\r\n\r\nexport class EntityManager {\r\n    world: CANNON.World;\r\n    scene: Scene;\r\n    entities: Entity[];\r\n\r\n    constructor(scene: Scene, world: CANNON.World) {\r\n        this.world = world;\r\n        this.scene = scene;\r\n        this.entities = [];\r\n    }\r\n\r\n    addCustom(model: Object3D, {\r\n        mass = 1,\r\n        position = [0, 0, 0],\r\n        size = [1, 1, 1],\r\n        isModel\r\n    }: AddModelOption) {\r\n        const halfExtents = Utils.tToC().vector3(new THREE.Vector3(...size).divideScalar(2));\r\n        const body = new CANNON.Body({\r\n            mass,\r\n            position: new CANNON.Vec3(...position),\r\n            shape: new CANNON.Box(halfExtents),\r\n            linearDamping: .5,\r\n            angularDamping: 1,\r\n        });\r\n        const entity = new Entity(model, body, isModel);\r\n\r\n        this.entities.push(entity);\r\n        this.world.addBody(body);\r\n        this.scene.add(model);\r\n\r\n        return entity;\r\n    }\r\n\r\n    addModel(model: Model, {\r\n        mass = 1,\r\n        position = [0, 0, 0]\r\n    }: AddModelOption) {\r\n        const body = new CANNON.Body({\r\n            mass,\r\n            position: new CANNON.Vec3(...position),\r\n        });\r\n        const entity = new Entity(model.group, body);\r\n        \r\n        model.group.position.copy(new THREE.Vector3(...position));\r\n\r\n        model.group.traverse(child => {\r\n            const { userData, position, quaternion } = child;\r\n            switch(userData.type) {\r\n                case ShapeType.Box: {\r\n                    const box3 = new THREE.Box3().setFromObject(child);\r\n                    const size = new THREE.Vector3();\r\n                    box3.getSize(size);\r\n                    body.addShape(\r\n                        new CANNON.Box(Utils.tToC().vector3(size.divideScalar(2))), \r\n                        Utils.tToC().vector3(position),\r\n                        Utils.tToC().quaternion(quaternion),\r\n                    );\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.entities.push(entity);\r\n        this.world.addBody(body);\r\n        this.scene.add(model.group);\r\n        \r\n        return entity;\r\n    }\r\n\r\n    addObject3D(object: Object3D, option?: Option, originObject?: Object3D) {\r\n        const result = threeToCannon(object as any, { type: option?.type });\r\n        const body = new CANNON.Body({\r\n            mass: option?.mass ?? 1,\r\n            position: result?.offset,\r\n            shape: result?.shape,\r\n        });\r\n        this.world.addBody(body);\r\n\r\n        let entity: Entity;\r\n        if(originObject) {\r\n            entity = new Entity(originObject, body, option?.isModel);\r\n            this.scene.add(originObject)\r\n        } else {\r\n            entity = new Entity(object, body, option?.isModel);\r\n            this.scene.add(object);\r\n        }\r\n\r\n        this.entities.push(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    animate() {\r\n        this.entities.forEach(e => e.animate());\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nexport interface Keys {\r\n    forward: boolean;\r\n    backward: boolean;\r\n    left: boolean;\r\n    right: boolean;\r\n    space: boolean;\r\n}\r\n\r\nexport class KeyboardManager {\r\n    keys: Keys;\r\n\r\n    constructor() {\r\n        this.keys = {\r\n            forward: false,\r\n            backward: false,\r\n            left: false,\r\n            right: false,\r\n            space: false,\r\n        }\r\n\r\n        window.addEventListener(\"keydown\", this.onKeyDown.bind(this));\r\n        window.addEventListener(\"keyup\", this.onkeyUp.bind(this));\r\n    }\r\n\r\n    onKeyDown(e: KeyboardEvent) {\r\n        switch(e.keyCode) {\r\n            // Forward\r\n            case 87: \r\n                this.keys.forward = true;\r\n                break;\r\n            // Backward\r\n            case 83:\r\n                this.keys.backward = true;\r\n                break;\r\n            // Left\r\n            case 65: \r\n                this.keys.left = true;\r\n                break;\r\n            // Right\r\n            case 68:\r\n                this.keys.right = true;\r\n                break;\r\n            // Space\r\n            case 32:\r\n                this.keys.space = true;\r\n                break;\r\n        }\r\n    }\r\n\r\n    onkeyUp(e: KeyboardEvent) {\r\n        switch(e.keyCode) {\r\n            // Forward\r\n            case 87: \r\n                this.keys.forward = false;\r\n                break;\r\n            // Backward\r\n            case 83:\r\n                this.keys.backward = false;\r\n                break;\r\n            // Left\r\n            case 65: \r\n                this.keys.left = false;\r\n                break;\r\n            // Right\r\n            case 68:\r\n                this.keys.right = false;\r\n                break;\r\n            // Space\r\n            case 32:\r\n                this.keys.space = false;\r\n                break;\r\n        }\r\n    }\r\n}","import { Animation, SetState } from '.';\r\nimport { Keys } from '../keyboardManager';\r\n\r\ntype AnimationsType = { [key: string]: Animation };\r\n\r\nexport class State {\r\n    animations: AnimationsType;\r\n    name: string;\r\n    setState: SetState;\r\n\r\n    constructor(animations: AnimationsType, name: string, setState: SetState) {\r\n        this.animations = animations;\r\n        this.name = name;\r\n        this.setState = setState;\r\n    }\r\n\r\n    enter(prevState?: State) {\r\n        const nextAction = this.animations[this.name].action;\r\n\r\n        if(prevState) {\r\n            const prevAction = this.animations[prevState.name].action;\r\n\r\n            nextAction.enabled = true;\r\n            nextAction.time = 0;\r\n            nextAction.setEffectiveTimeScale(1);\r\n            nextAction.setEffectiveWeight(1);\r\n            nextAction.crossFadeFrom(prevAction, .5, true);\r\n\r\n            nextAction.play();\r\n        } else nextAction.play();\r\n    }\r\n\r\n    animate(keys: Keys) {\r\n\r\n    }\r\n}\r\n\r\nexport class IdleState extends State {\r\n    constructor(animations: AnimationsType, setState: SetState) {\r\n        super(animations, \"idle\", setState);\r\n    }\r\n\r\n    animate(keys: Keys) {\r\n        if(keys.forward) this.setState(\"forward\");\r\n        else if(keys.backward) this.setState(\"backward\");\r\n        else if(keys.left) this.setState(\"left\");\r\n        else if(keys.right) this.setState(\"right\");\r\n    }\r\n}\r\n\r\nexport class ForwardState extends State {\r\n    constructor(animations: AnimationsType, setState: SetState) {\r\n        super(animations, \"forward\", setState);\r\n    }\r\n\r\n    animate(keys: Keys) {\r\n        if(!keys.forward) this.setState(\"idle\");\r\n        else if(keys.backward) this.setState(\"backward\");\r\n        else if(keys.left) this.setState(\"left\");\r\n        else if(keys.right) this.setState(\"right\");\r\n    }\r\n}\r\n\r\nexport class BackwardState extends State {\r\n    constructor(animations: AnimationsType, setState: SetState) {\r\n        super(animations, \"backward\", setState);\r\n    }\r\n\r\n    animate(keys: Keys) {\r\n        if(!keys.backward) this.setState(\"idle\");\r\n        else if(keys.forward) this.setState(\"forward\");\r\n        else if(keys.left) this.setState(\"left\");\r\n        else if(keys.right) this.setState(\"right\");\r\n    }\r\n}\r\n\r\nexport class LeftState extends State {\r\n    constructor(animations: AnimationsType, setState: SetState) {\r\n        super(animations, \"left\", setState);\r\n    }\r\n\r\n    animate(keys: Keys) {\r\n        if(!keys.left) this.setState(\"idle\");\r\n        else if(keys.forward) this.setState(\"forward\");\r\n        else if(keys.backward) this.setState(\"backward\");\r\n        else if(keys.right) this.setState(\"right\");\r\n    }\r\n}\r\n\r\nexport class RightState extends State {\r\n    constructor(animations: AnimationsType, setState: SetState) {\r\n        super(animations, \"right\", setState);\r\n    }\r\n\r\n    animate(keys: Keys) {\r\n        if(!keys.right) this.setState(\"idle\");\r\n        else if(keys.forward) this.setState(\"forward\");\r\n        else if(keys.backward) this.setState(\"backward\");\r\n        else if(keys.left) this.setState(\"left\");\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { AnimationMixer } from 'three';\r\nimport { Entity } from '../entityManager/entity';\r\nimport { KeyboardManager } from '../keyboardManager';\r\nimport { Paths } from '../libs/paths';\r\nimport { LoadManager } from '../loadManager';\r\nimport { \r\n    BackwardState,\r\n    ForwardState, \r\n    IdleState, \r\n    LeftState, \r\n    RightState, \r\n    State \r\n} from './state';\r\n\r\nconst States = {\r\n    \"idle\": IdleState,\r\n    \"forward\": ForwardState,\r\n    \"backward\": BackwardState,\r\n    \"right\": RightState,\r\n    \"left\": LeftState,\r\n} as const;\r\n\r\nexport interface Animation {\r\n    clip: THREE.AnimationClip;\r\n    action: THREE.AnimationAction;\r\n}\r\n\r\nexport type SetState = (name: string) => void;\r\n\r\nexport class AnimationManager {\r\n    loadManager: LoadManager;\r\n    character: Entity;\r\n    mixer: AnimationMixer;\r\n    currentState?: State;\r\n    animations: { [key: string]: Animation };\r\n    keyboardManager: KeyboardManager;\r\n\r\n    constructor(character: Entity, keyboardManager: KeyboardManager) {\r\n        this.character = character;\r\n        this.keyboardManager = keyboardManager;\r\n        this.mixer = new THREE.AnimationMixer(character.three);\r\n        this.loadManager = new LoadManager();\r\n        this.animations = {};\r\n\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        const loadedAnimations = await this.loadManager.load([\r\n            Paths.idle,\r\n            Paths.jump,\r\n            Paths.forward,\r\n            Paths.backward,\r\n            Paths.left,\r\n            Paths.right,\r\n        ]);\r\n\r\n        this.onLoad(\"idle\", loadedAnimations[Paths.idle]);\r\n        this.onLoad(\"jump\", loadedAnimations[Paths.jump]);\r\n        this.onLoad(\"forward\", loadedAnimations[Paths.forward]);\r\n        this.onLoad(\"backward\", loadedAnimations[Paths.backward]);\r\n        this.onLoad(\"left\", loadedAnimations[Paths.left]);\r\n        this.onLoad(\"right\", loadedAnimations[Paths.right]);\r\n\r\n        this.setState(\"idle\");\r\n    }\r\n\r\n    setState(name: string) {\r\n        const prevState = this.currentState;\r\n\r\n        if(prevState) {\r\n            if(prevState.name === name) return;\r\n        }\r\n\r\n        const nextState = new States[name as keyof typeof States](this.animations, this.setState);\r\n\r\n        this.currentState = nextState;\r\n        nextState.enter(prevState);\r\n    }\r\n\r\n    onLoad(name: string, animation: THREE.Group) {\r\n        const clip = animation.animations[0];\r\n\r\n        this.animations[name] = {\r\n            clip,\r\n            action: this.mixer.clipAction(clip),\r\n        };\r\n    }\r\n\r\n    animate() {\r\n        if(!this.currentState) return;\r\n        this.currentState.animate(this.keyboardManager.keys);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport * as CANNON from 'cannon-es';\r\nimport { Vector3 } from 'three';\r\nimport { Entity } from './entityManager/entity';\r\nimport { KeyboardManager } from './keyboardManager';\r\nimport { Utils } from './utils';\r\nimport { AnimationManager } from './animationManager';\r\n\r\nexport class PlayerManager {\r\n    keyboardManager: KeyboardManager;\r\n    velocity: CANNON.Vec3;\r\n    decceleration: THREE.Vector3;\r\n    acceleration: THREE.Vector3;\r\n    speed: number;\r\n    character: Entity;\r\n    direction: THREE.Vector3;\r\n    isCanJump: boolean;\r\n    animationManager: AnimationManager;\r\n\r\n    constructor(character: Entity) {\r\n        this.keyboardManager = new KeyboardManager();\r\n        this.animationManager = new AnimationManager(character, this.keyboardManager);\r\n        this.velocity = new CANNON.Vec3();\r\n\r\n        this.decceleration = new THREE.Vector3(-10, 0, -10);\r\n        this.acceleration = new THREE.Vector3(50, .25, 50);\r\n        this.speed = 5;\r\n\r\n        this.character = character;\r\n        this.direction = new Vector3();\r\n\r\n        this.isCanJump = false;\r\n    }\r\n\r\n    init() {\r\n        this.character.cannon.addEventListener(\"collide\", (e: any) => {\r\n            const contactNormal = new CANNON.Vec3();\r\n            const upAxis = new CANNON.Vec3(0, 1, 0);\r\n            const { contact } = e;\r\n\r\n            if(contact.bi.id === this.character.cannon.id) contact.ni.negate(contactNormal);\r\n            else contactNormal.copy(contact.ni);\r\n\r\n            if(contactNormal.dot(upAxis) > 0.5) this.isCanJump = true;\r\n        });\r\n    }\r\n\r\n    setCharacter(character: Entity) {\r\n        this.character = character;\r\n        this.init();\r\n    }\r\n\r\n    getDirection() {\r\n        const target = new THREE.Vector3();\r\n        this.character.three.getWorldDirection(target);\r\n        target.y = 0;\r\n        target.normalize();\r\n        return target;\r\n    }\r\n\r\n    getDirectionSide() {\r\n        const target = new THREE.Vector3();\r\n        this.character.three.getWorldDirection(target);\r\n        target.y = 0;\r\n        target.normalize();\r\n        target.cross(this.character.three.up);\r\n        return target;\r\n    }\r\n\r\n    addVector(vector: CANNON.Vec3) {\r\n        this.character.cannon.position.x += vector.x;\r\n        this.character.cannon.position.z += vector.z;\r\n    }\r\n\r\n    animate(delta: number, angleX: number) {\r\n        this.animationManager.animate();\r\n\r\n        this.character.cannon.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 1), 0);\r\n\r\n        const quatByAngleX = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), (Math.PI / 180 * -angleX));\r\n        this.character.cannon.quaternion.copy(Utils.tToC().quaternion(quatByAngleX));\r\n\r\n        const { forward, backward, left, right, space } = this.keyboardManager.keys;\r\n\r\n        const direction = this.getDirection();\r\n        const directionSide = this.getDirectionSide();\r\n\r\n        if(forward) this.addVector(Utils.tToC().vector3(direction.multiplyScalar(this.speed * delta)));\r\n        if(backward) this.addVector(Utils.tToC().vector3(direction.multiplyScalar(-this.speed * delta)));\r\n        if(right) this.addVector(Utils.tToC().vector3(directionSide.multiplyScalar(this.speed * delta)));\r\n        if(left) this.addVector(Utils.tToC().vector3(directionSide.multiplyScalar(-this.speed * delta)));\r\n\r\n        if(space && this.isCanJump) {\r\n            this.character.cannon.velocity.y = 7;\r\n            this.isCanJump = false;\r\n        }\r\n    }\r\n}","import { EntityManager } from \"../entityManager\";\r\nimport * as THREE from 'three';\r\nimport { Vector3 } from \"three\";\r\nimport { ShapeType } from \"../physcisManager\";\r\n\r\ninterface BoxOptions {\r\n    position?: number[];\r\n    size?: number[];\r\n    degree?: number[];\r\n    color?: number;\r\n}\r\n\r\nexport class ModelManager {\r\n    entityManager: EntityManager;\r\n\r\n    constructor(entityManager: EntityManager) {\r\n        this.entityManager = entityManager;\r\n    }\r\n\r\n    createChair() {\r\n\r\n    }\r\n}\r\n\r\nexport class Model {\r\n    group: THREE.Group;\r\n\r\n    constructor() {\r\n        this.group = new THREE.Group();\r\n    }\r\n\r\n    createBox({\r\n        position = [0, 0, 0],\r\n        size = [1, 1, 1],\r\n        degree = [0, 0, 0],\r\n        color = 0xffffff,\r\n    }: BoxOptions) {\r\n        const mesh = new THREE.Mesh(\r\n            new THREE.BoxGeometry(...size),\r\n            new THREE.MeshToonMaterial({ color })\r\n        );\r\n        mesh.position.copy(new Vector3(...position));\r\n        mesh.rotation.x = Math.PI / 180 * degree[0];\r\n        mesh.rotation.y = Math.PI / 180 * degree[1];\r\n        mesh.rotation.z = Math.PI / 180 * degree[2];\r\n        mesh.userData.type = ShapeType.Box;\r\n        return mesh;\r\n    }\r\n}","import { Model } from '.';\r\n\r\nexport class ChairModel extends Model {\r\n    color: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.color = 0xdddce8;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // Chair Leg\r\n        this.group.add(this.createLeg(1, 1));\r\n        this.group.add(this.createLeg(-1, 1));\r\n        this.group.add(this.createLeg(1, -1));\r\n        this.group.add(this.createLeg(-1, -1));\r\n\r\n        // Chair Body\r\n        this.group.add(this.createBody());\r\n\r\n        // Chair Back\r\n        this.group.add(this.createLeg(-1, -1, 2));\r\n        this.group.add(this.createLeg(1, -1, 2));\r\n        this.group.add(this.createBack());\r\n    }\r\n\r\n    createLeg(x: number ,z: number, y?: number) {\r\n        return this.createBox({\r\n            size: [.3, 2, .3],\r\n            position: [x, y ?? 0, z],\r\n            color: this.color,\r\n        });\r\n    }\r\n\r\n    createBack() {\r\n        return this.createBox({\r\n            size: [2.3, 1, 0.25],\r\n            position: [0, 2.4, -1],\r\n            color: this.color,\r\n        });\r\n    }\r\n\r\n    createBody() {\r\n        return this.createBox({\r\n            size: [2.3, .2, 2.3],\r\n            position: [0, 1, 0],\r\n            color: this.color,\r\n        });\r\n    }\r\n}","export class MouseManager {\r\n    angleX: number;\r\n    angleY: number;\r\n    speed: number;\r\n    isLocked: boolean;\r\n\r\n    constructor() {\r\n        this.angleX = 0;\r\n        this.angleY = 0;\r\n        this.speed = 3;\r\n        this.isLocked = false;\r\n\r\n        window.addEventListener(\"mousemove\", this.onMousemove.bind(this));\r\n        window.addEventListener(\"click\", () => document.body.requestPointerLock());\r\n        document.addEventListener(\"pointerlockchange\", () => {\r\n            if(document.pointerLockElement) this.isLocked = true;\r\n            else this.isLocked = false;\r\n        });\r\n    }\r\n\r\n    onMousemove(e: MouseEvent) {\r\n        this.angleX += e.movementX / 10 * this.speed;\r\n        this.angleY += e.movementY / 10 * this.speed;\r\n    }\r\n\r\n    getAngleY() {\r\n        if(this.angleY < -90) this.angleY = -90;\r\n        else if(this.angleY > 220) this.angleY = 220;\r\n        return this.angleY;\r\n    }\r\n\r\n    getAngleX() {\r\n        return this.angleX;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { PlayerManager } from './playerManager';\r\nimport { Utils } from './utils';\r\n\r\nexport class CameraManager {\r\n    camera: THREE.Camera;\r\n    target: PlayerManager;\r\n    far: number;\r\n\r\n    constructor(camera: THREE.Camera, target: PlayerManager) {\r\n        this.camera = camera;\r\n        this.target = target;\r\n        this.far = 1;\r\n    }\r\n\r\n    getOffset(angle: number) {\r\n        const offset = new THREE.Vector3(0, this.far * 0.75 + (angle / 100), -this.far - (angle / 100));\r\n\r\n        offset.applyQuaternion(Utils.cToT().quaternion(this.target.character.cannon.quaternion));\r\n        offset.add(Utils.cToT().vector3(this.target.character.cannon.position));\r\n\r\n        return offset;\r\n    }\r\n\r\n    getLookAt() {\r\n        const lookAt = new THREE.Vector3(0, 1, 0);\r\n\r\n        lookAt.applyQuaternion(Utils.cToT().quaternion(this.target.character.cannon.quaternion));\r\n        lookAt.add(Utils.cToT().vector3(this.target.character.cannon.position));\r\n\r\n        return lookAt;\r\n    }\r\n\r\n    animate(angle: number) {\r\n        this.camera.position.copy(this.getOffset(angle));\r\n        this.camera.lookAt(this.getLookAt());\r\n    }\r\n}","import { Model } from '.';\r\n\r\nexport class MapModel extends Model {\r\n    color: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.color = 0xdddce8;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // Floor\r\n        this.group.add(this.createFloor());\r\n\r\n        this.group.traverse(child => {\r\n            child.receiveShadow = true;\r\n        });\r\n    }\r\n\r\n    createFloor() {\r\n        return this.createBox({\r\n            size: [10, .4, 10],\r\n            color: this.color,\r\n        });\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Scene } from \"three\";\r\nimport { EntityManager } from \"./entityManager\";\r\nimport { MapModel } from \"./modelManager/map\";\r\n\r\nexport class MapManager {\r\n    entityManager: EntityManager;\r\n    scene: Scene;\r\n\r\n    constructor(scene: Scene, entityManager: EntityManager) {\r\n        this.entityManager = entityManager;\r\n        this.scene = scene;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.entityManager.addModel(new MapModel(), { mass: 0 });\r\n\r\n        this.settingLight();\r\n    }\r\n\r\n    settingLight() {\r\n        const light = new THREE.DirectionalLight(0x444444);\r\n        light.position.set(0, 20, 10);\r\n        light.castShadow = true;\r\n        \r\n        const ambient = new THREE.AmbientLight(0xbbbbbb);\r\n        this.scene.add(ambient);\r\n        this.scene.add(light); \r\n    }\r\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import * as THREE from 'three';\r\nimport * as CANNON from 'cannon-es';\r\nimport { PerspectiveCamera, Scene, WebGLRenderer } from 'three';\r\nimport { Helper } from './helper';\r\nimport { Paths } from './libs/paths';\r\nimport { LoadManager } from './loadManager';\r\nimport { PhysicsManager } from './physcisManager';\r\nimport { EntityManager } from './entityManager';\r\nimport { ShapeType } from 'three-to-cannon';\r\nimport { MapModel } from './modelManager/map';\r\nimport { PlayerManager } from './playerManager';\r\nimport { ChairModel } from './modelManager/chair';\r\nimport { MouseManager } from './mouseManager';\r\nimport { CameraManager } from './cameraManager';\r\nimport { Entity } from './entityManager/entity';\r\nimport { MapManager } from './mapManager';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nclass Main {\r\n    renderer: WebGLRenderer;\r\n    camera: PerspectiveCamera;\r\n    scene: Scene;\r\n    loadManager: LoadManager;\r\n    physicsManager: PhysicsManager;\r\n    entityManager: EntityManager;\r\n    mouseManager: MouseManager;\r\n    cameraManager: CameraManager;\r\n    playerManager: PlayerManager;\r\n    mapManager: MapManager;\r\n    clock: THREE.Clock;\r\n    lastTime: number;\r\n\r\n    constructor() {\r\n        this.renderer = new THREE.WebGL1Renderer();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        document.body.appendChild(this.renderer.domElement);\r\n\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            75,\r\n            window.innerWidth / window.innerHeight,\r\n            0.1,\r\n            1000\r\n        );\r\n        this.camera.position.z = 10;\r\n        this.camera.position.y = 5;\r\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n        this.clock = new THREE.Clock();\r\n        this.lastTime = 0;\r\n\r\n        this.scene = new THREE.Scene();\r\n        this.physicsManager = new PhysicsManager();\r\n        this.loadManager = new LoadManager();\r\n        this.mouseManager = new MouseManager();\r\n        this.playerManager = new PlayerManager(new Entity(new THREE.Object3D(), new CANNON.Body()));\r\n        this.entityManager = new EntityManager(this.scene, this.physicsManager.world);\r\n        this.cameraManager = new CameraManager(this.camera, this.playerManager);\r\n        this.mapManager = new MapManager(this.scene, this.entityManager);\r\n\r\n        this.loadManager\r\n            .load([Paths.character])\r\n            .then(models => {\r\n                const character = models[Paths.character];\r\n                character.scale.setScalar(.01);\r\n                this.playerManager.setCharacter(this.entityManager.addCustom(character, { mass: 10, size: [.4, 1.77, .28], position: [0, 5, 0], isModel: true }));\r\n            });\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        new Helper(this.scene);\r\n        this.renderer.shadowMap.enabled = true;\r\n\r\n        this.entityManager.addModel(new ChairModel(), { mass: 0, position: [0, 1, 0] });\r\n        this.entityManager.addObject3D(new THREE.Mesh(new THREE.SphereGeometry(.2), new THREE.MeshToonMaterial()), { mass: .5, type: ShapeType.SPHERE }).cannon.position.y = 3;\r\n\r\n        this.animate();\r\n    }\r\n\r\n    animate() {\r\n        const currentTime = this.clock.getElapsedTime();\r\n        const delta = currentTime - this.lastTime;\r\n        this.lastTime = currentTime;\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n\r\n        this.entityManager.animate();\r\n        this.physicsManager.animate(delta);\r\n\r\n        if(this.mouseManager.isLocked) {\r\n            this.cameraManager.animate(this.mouseManager.getAngleY());\r\n            this.playerManager?.animate(delta, this.mouseManager.getAngleX());\r\n        }\r\n\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n}\r\n\r\n//@ts-ignore\r\nwindow.m = new Main();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}